---
tags: []
descriptions:
- !<com.amartus.simple.model.SchemaDescription>
  type: "FieldedAddress"
  description: ""
  tag: null
  specDescription: null
  paragraph: null
  superTypes:
  - "GeographicAddress"
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "city"
    description: "The city that the address is in"
    readOnly: false
    discriminator: false
    required: true
    mefName: "City"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "country"
    description: "The country that the address is in"
    readOnly: false
    discriminator: false
    required: true
    mefName: "Country"
    type: "string"
  - !<com.amartus.simple.model.property.RefProperty>
    name: "geographicSubAddress"
    description: "Additional fields used to specify an address, as detailed as possible."
    readOnly: false
    discriminator: false
    required: false
    mefName: null
    ref: "GeographicSubAddress"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "locality"
    description: "The locality that the address is in"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Locality"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "postcode"
    description: "A descriptor for a postal delivery area used to speed and simplify\
      \ the delivery of mail (also known as zip code) MEF 79 defines it as required\
      \ however as in certain countries it is not used we make it optional in API."
    readOnly: false
    discriminator: false
    required: false
    mefName: "Postal Code"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "postcodeExtension"
    description: "An extension of a postal code. E.g. the part following the dash\
      \ in a US urban property address"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Postal Code Extension"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "stateOrProvince"
    description: "The State or Province that the address is in"
    readOnly: false
    discriminator: false
    required: false
    mefName: "State Or Province"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "streetName"
    description: "Name of the street or other street type"
    readOnly: false
    discriminator: false
    required: true
    mefName: "Street Name"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "streetNr"
    description: "Number identifying a specific property on a public street. It may\
      \ be combined with streetNrLast for ranged addresses."
    readOnly: false
    discriminator: false
    required: false
    mefName: "Street Number"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "streetNrLast"
    description: "Last number in a range of street numbers allocated to a property"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Street Number Last"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "streetNrLastSuffix"
    description: "Last street number suffix for a ranged address"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Street Number Suffix Last"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "streetNrSuffix"
    description: "The first street number suffix"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Street Number Suffix"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "streetSuffix"
    description: "A modifier denoting a relative direction"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Street Suffix"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "streetType"
    description: "The type of street (e.g., alley, avenue, boulevard, brae, crescent,\
      \ drive, highway, lane, terrace, parade, place, tarn, way, wharf)"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Street Type"
    type: "string"
- !<com.amartus.simple.model.SchemaDescription>
  type: "FormattedAddress"
  description: ""
  tag: null
  specDescription: null
  paragraph: null
  superTypes:
  - "GeographicAddress"
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "addrLine1"
    description: "The first address line in a formatted address"
    readOnly: false
    discriminator: false
    required: true
    mefName: "Address Line 1"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "addrLine2"
    description: "The second address line in a formatted address"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Address Line 2"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "city"
    description: "The city that the address is in"
    readOnly: false
    discriminator: false
    required: true
    mefName: "City"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "country"
    description: "The country that the address is in"
    readOnly: false
    discriminator: false
    required: true
    mefName: "Country"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "locality"
    description: "An area of defined or undefined boundaries within a local authority\
      \ or other legislatively defined area, usually rural or semi-rural in nature"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Locality"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "postcode"
    description: "A descriptor for a postal delivery area used to speed and simplify\
      \ the delivery of mail (also known as ZIP code)"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Postal Code"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "postcodeExtension"
    description: "An extension of a postal code. E.g. the part following the dash\
      \ in a US urban property address"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Postal Code Extension"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "stateOrProvince"
    description: "The State or Province that the address is in"
    readOnly: false
    discriminator: false
    required: false
    mefName: "State Or Province"
    type: "string"
- !<com.amartus.simple.model.SchemaDescription>
  type: "GeographicAddress"
  description: |-
    Structured textual way of describing how to find a property in an urban area (country properties are often defined differently).
    Note: Address corresponds to SID UrbanPropertyAddress
  tag: null
  specDescription: null
  paragraph: null
  superTypes: []
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "id"
    description: "Unique identifier of the place"
    readOnly: true
    discriminator: false
    required: false
    mefName: "Geographic Address Identifier"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "href"
    description: "Unique reference of the place"
    readOnly: true
    discriminator: false
    required: false
    mefName: "Not represented in MEF 79"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "allowsNewSite"
    description: "This attribute specifies if a Buyer must use one of the known existing\
      \ Service Sites at this location for any Products delivered to this Address.\
      \ For example, if a particular building owner mandated that all interconnects\
      \ be done in a shared Public Meet-Me-Room, this attribute would be set to False\
      \ for that Address."
    readOnly: true
    discriminator: false
    required: false
    mefName: "Address Allows New Sites"
    type: "boolean"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "hasPublicSite"
    description: "This attribute specifies if that Address contains Service Sites\
      \ that are public such as Meet-Me-Rooms at an interconnect location or a shared\
      \ telecom room in the basement of a multi-tenant building"
    readOnly: true
    discriminator: false
    required: false
    mefName: "Address Has Public Sites"
    type: "boolean"
  - !<com.amartus.simple.model.property.RefProperty>
    name: "associatedGeographicAddress"
    description: "A Fielded Address that is associated with the Geographic Point or\
      \ the Geographic Address Label."
    readOnly: false
    discriminator: false
    required: false
    mefName: "Associated Address"
    ref: "FieldedAddress"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "@schemaLocation"
    description: "A URI to a JSON-Schema file that defines additional attributes and\
      \ relationships. May be used to define additional GeographicAddress types. Usage\
      \ of this attribute must be agreed upon between Buyer and Seller."
    readOnly: false
    discriminator: false
    required: false
    mefName: "Not represented in MEF 79"
    type: "uri"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "@type"
    description: |
      This field is used as discriminator. The value is the name of one of the types that inherit from it using 'allOf', i.e. one of FieldedAddress, FormattedAddress, GeographicAddressLabel, MEFGeographicPoint. Moreover, it might discriminate for an additional related place as defined in '@schemaLocation'.
    readOnly: false
    discriminator: false
    required: true
    mefName: "Not represented in MEF 79"
    type: "string"
- !<com.amartus.simple.model.SchemaDescription>
  type: "GeographicAddressValidation"
  description: "This resource is used to manage address validation response."
  tag: null
  specDescription: null
  paragraph: null
  superTypes: []
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "provideAlternative"
    description: |
      Indicator provided by the requester to specify if alternate addresses must be provided in case of partial or fail result. MEF: The attribute is kept for TMF API compliance. MEF requires this attribute always to be set to 'true'. Alternatives should be provided regardless of whether best match was found. The Seller is allowed not to implement the support for 'false'
    readOnly: false
    discriminator: false
    required: true
    mefName: "Not represented in MEF 79"
    type: "boolean"
  - !<com.amartus.simple.model.property.RefProperty>
    name: "validationResult"
    description: "Result of the address validation (success, partial, fail)"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Not represented in MEF 79"
    ref: "MEFValidationResultType"
  - !<com.amartus.simple.model.property.ArrayProperty>
    name: "alternateGeographicAddress"
    description: ""
    readOnly: false
    discriminator: false
    required: false
    mefName: "Seller Verified Addresses (bestMatch=false)"
    array: !<com.amartus.simple.model.property.RefProperty>
      name: null
      description: |
        An array of zero or more Addresses known to the Seller that are
        considered by the Seller to match the submittedGeographicAddress.
        Not including the bestMatchAddress. MEF: Alternatives should be
        provided regardless of whether best match was found.
      readOnly: false
      discriminator: false
      required: false
      mefName: null
      ref: "GeographicAddress"
  - !<com.amartus.simple.model.property.RefProperty>
    name: "bestMatchGeographicAddress"
    description: "Represents that the Seller is confident this is likely a direct\
      \ match to the submittedGeographicAddress"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Seller Verified Addresses (bestMatch=true)"
    ref: "GeographicAddress"
  - !<com.amartus.simple.model.property.RefProperty>
    name: "submittedGeographicAddress"
    description: "The address as submitted to validation."
    readOnly: false
    discriminator: false
    required: true
    mefName: "Buyer Specified Address"
    ref: "GeographicAddress"
- !<com.amartus.simple.model.SchemaDescription>
  type: "GeographicAddressValidation_Create"
  description: |-
    This resource is used to manage address validation request.

    Skipped properties: alternateGeographicAddress, bestMatchGeographicAddress, validationResult.
  tag: null
  specDescription: null
  paragraph: null
  superTypes: []
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "provideAlternative"
    description: |
      Indicator provided by the requester to specify if alternate addresses must be provided in case of partial or fail result. MEF: The attribute is kept for TMF API compliance. MEF requires this attribute always to be set to 'true'. Alternatives should be provided regardless of whether best match was found. The Seller is allowed not to implement the support for 'false'
    readOnly: false
    discriminator: false
    required: true
    mefName: "Not represented in MEF 79"
    type: "boolean"
  - !<com.amartus.simple.model.property.RefProperty>
    name: "submittedGeographicAddress"
    description: "The address as submitted to validation. MEF: Structure used by the\
      \ buyer to request geographic address validation"
    readOnly: false
    discriminator: false
    required: true
    mefName: "Buyer Specified Address"
    ref: "GeographicAddress"
- !<com.amartus.simple.model.SchemaDescription>
  type: "GeographicSubAddress"
  description: "Additional fields used to specify an address, as detailed as possible."
  tag: null
  specDescription: null
  paragraph: null
  superTypes: []
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "buildingName"
    description: |
      Allows for identification of places that require building name  as part of addressing information
    readOnly: false
    discriminator: false
    required: false
    mefName: "Building Name"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "levelNumber"
    description: "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
      \ 2"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Level Number"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "levelType"
    description: "Describes level types within a building"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Level Type"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "privateStreetName"
    description: "Private streets internal to a property (e.g. a university) may have\
      \ internal names that are not recorded by the land title office"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Private Street Name"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "privateStreetNumber"
    description: "Private streets numbers internal to a private street"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Private Street Number"
    type: "string"
  - !<com.amartus.simple.model.property.ArrayProperty>
    name: "subUnit"
    description: "Representation of a MEFSubUnit It is used for describing subunit\
      \ within a subAddress e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF."
    readOnly: false
    discriminator: false
    required: false
    mefName: "Sub Unit List"
    array: !<com.amartus.simple.model.property.RefProperty>
      name: null
      description: ""
      readOnly: false
      discriminator: false
      required: false
      mefName: null
      ref: "MEFSubUnit"
- !<com.amartus.simple.model.SchemaDescription>
  type: "MEFGeographicPoint"
  description: ""
  tag: null
  specDescription: null
  paragraph: null
  superTypes:
  - "GeographicAddress"
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "spatialRef"
    description: "The spatial reference system used to determine the coordinates"
    readOnly: false
    discriminator: false
    required: true
    mefName: "Spatial Reference"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "x"
    description: "The latitude expressed in the format specified by the `spacialRef`"
    readOnly: false
    discriminator: false
    required: true
    mefName: "Latitude"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "y"
    description: "The longitude expressed in the format specified by the `spacialRef`"
    readOnly: false
    discriminator: false
    required: true
    mefName: "Longitude"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "z"
    description: "The elevation expressed in the format specified by the `spacialRef`"
    readOnly: false
    discriminator: false
    required: false
    mefName: "Elevation"
    type: "string"
- !<com.amartus.simple.model.SchemaDescription>
  type: "MEFSubUnit"
  description: "Allows for sub unit identification"
  tag: null
  specDescription: null
  paragraph: null
  superTypes: []
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "subUnitNumber"
    description: "The discriminator used for the subunit, often just a simple number\
      \ but may also be a range."
    readOnly: false
    discriminator: false
    required: true
    mefName: "Sub Unit Name"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "subUnitType"
    description: "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,\
      \ WHARF."
    readOnly: false
    discriminator: false
    required: true
    mefName: "Sub Unit Type"
    type: "string"
- !<com.amartus.simple.model.SchemaDescription>
  type: "GeographicAddressLabel"
  description: ""
  tag: null
  specDescription: null
  paragraph: null
  superTypes:
  - "GeographicAddress"
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "externalReferenceId"
    description: "The unique reference to an Address as provided by the Administrative\
      \ Authority."
    readOnly: false
    discriminator: false
    required: true
    mefName: "Administrative Authority Address Label"
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "externalReferenceType"
    description: "The organization or standard from the organization that administers\
      \ this Geographic Address Label ensuring it is unique within the Administrative\
      \ Authority. The value(s) to be used are to be agreed during the onboarding.\
      \ For North American providers this would normally be CLLI (Common Language\
      \ Location Identifier) code."
    readOnly: false
    discriminator: false
    required: true
    mefName: "Administrative Authority"
    type: "string"
- !<com.amartus.simple.model.EnumDescription>
  type: "MEFValidationResultType"
  description: |
    Result of the address validation:
    - success - best match found,
    - partial - no best match but alternatives available,
    - fail - neither best match nor alternatives provided
  tag: null
  specDescription: null
  paragraph: null
  values:
  - value: "success"
    mefValue: "SUCCESS"
    description: null
  - value: "partial"
    mefValue: "PARTIAL"
    description: null
  - value: "fail"
    mefValue: "FAIL"
    description: null
- !<com.amartus.simple.model.SchemaDescription>
  type: "Error"
  description: |
    Standard Class used to describe API response error Not intended to be used directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.
  tag: null
  specDescription: null
  paragraph: null
  superTypes: []
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "message"
    description: "Text that provides mode details and corrective actions related to\
      \ the error. This can be shown to a client user."
    readOnly: false
    discriminator: false
    required: false
    mefName: null
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "reason"
    description: "Text that explains the reason for error. This can be shown to a\
      \ client user."
    readOnly: false
    discriminator: false
    required: true
    mefName: null
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "referenceError"
    description: "URL pointing to documentation describing the error"
    readOnly: false
    discriminator: false
    required: false
    mefName: null
    type: "uri"
- !<com.amartus.simple.model.SchemaDescription>
  type: "Error400"
  description: ""
  tag: null
  specDescription: null
  paragraph: null
  superTypes:
  - "Error"
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "code"
    description: |-
      One of the following error codes:
      - missingQueryParameter: The URI is missing a required query-string parameter
      - missingQueryValue: The URI is missing a required query-string parameter value
      - invalidQuery: The query section of the URI is invalid.
      - invalidBody: The request has an invalid body
    readOnly: false
    discriminator: false
    required: true
    mefName: null
    type: "string"
- !<com.amartus.simple.model.SchemaDescription>
  type: "Error401"
  description: ""
  tag: null
  specDescription: null
  paragraph: null
  superTypes:
  - "Error"
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "code"
    description: |-
      One of the following error codes:
      - missingCredentials: No credentials provided.
      - invalidCredentials: Provided credentials are invalid or expired
    readOnly: false
    discriminator: false
    required: true
    mefName: null
    type: "string"
- !<com.amartus.simple.model.SchemaDescription>
  type: "Error403"
  description: ""
  tag: null
  specDescription: null
  paragraph: null
  superTypes:
  - "Error"
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "code"
    description: |-
      This code indicates that the server understood
      the request but refuses to authorize it because
      of one of the following error codes:
      - accessDenied: Access denied
      - forbiddenRequester: Forbidden requester
      - tooManyUsers: Too many users
    readOnly: false
    discriminator: false
    required: true
    mefName: null
    type: "string"
- !<com.amartus.simple.model.SchemaDescription>
  type: "Error404"
  description: ""
  tag: null
  specDescription: null
  paragraph: null
  superTypes:
  - "Error"
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "code"
    description: |-
      The following error code:
      - notFound: A current representation for the target resource not found
    readOnly: false
    discriminator: false
    required: true
    mefName: null
    type: "string"
- !<com.amartus.simple.model.SchemaDescription>
  type: "Error422"
  description: ""
  tag: null
  specDescription: null
  paragraph: null
  superTypes:
  - "Error"
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "code"
    description: |
      One of the following error codes:
        - missingProperty: The property the Seller has expected is not present in the payload
        - invalidValue: The property has an incorrect value
        - invalidFormat: The property value does not comply with the expected value format
        - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
        - unexpectedProperty: Additional property, not expected by the Seller has been provided
        - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
        - otherIssue: Other problem was identified (detailed information provided in a reason)
    readOnly: false
    discriminator: false
    required: true
    mefName: null
    type: "string"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "propertyPath"
    description: |
      A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.
      Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).
    readOnly: false
    discriminator: false
    required: false
    mefName: null
    type: "string"
- !<com.amartus.simple.model.SchemaDescription>
  type: "Error500"
  description: ""
  tag: null
  specDescription: null
  paragraph: null
  superTypes:
  - "Error"
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "code"
    description: |-
      The following error code:
      - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.
    readOnly: false
    discriminator: false
    required: true
    mefName: null
    type: "string"
- !<com.amartus.simple.model.SchemaDescription>
  type: "MEFProductConfiguration"
  description: "MEF Product payload"
  tag: null
  specDescription: null
  paragraph: null
  superTypes: []
  properties:
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "@schemaLocation"
    description: "A URI to the JSON schema file that defines the Product Specification\
      \ for the product that is the subject of the Request."
    readOnly: false
    discriminator: false
    required: false
    mefName: null
    type: "uri"
  - !<com.amartus.simple.model.property.SimpleProperty>
    name: "@type"
    description: "The name of the type, defined in the JSON schema specified above,\
      \ for the product that is the subject of the Request. The named type must be\
      \ a subclass of MEFProductConfiguration."
    readOnly: false
    discriminator: false
    required: true
    mefName: null
    type: "string"
