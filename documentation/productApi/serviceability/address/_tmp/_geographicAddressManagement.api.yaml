swagger: '2.0'
info:
  title: API Geographic Address Management
  description: |-
    **This file forms part of MEF 121**

    **This specification represents MEF work in progress and is subject to change.** 

    This API allows to:

    *Retrieve a geographic address by identifier from Seller's database.
    *Validate geographic address data. The Buyer will trigger an address validation request to get a valid address description and id from the Seller

    **In MEF context following restrictions apply:**
    Only POST operation for resource geographicAddressValidation is used.
    Event Subscription is not managed.
    Operation GET for geographicAddress can be only done with an id.

    Geographic Address Management API uses TMF 673 v4.0.1 as a template.
  version: 7.0.0-RC
host: serverRoot
basePath: /mefApi/sonata/geographicAddressManagement/v7/
schemes:
  - https
consumes:
  - application/json;charset=utf-8
produces:
  - application/json;charset=utf-8
tags:
  - name: geographicAddressValidation
  - name: geographicAddress
  - name: events subscription
paths:
  /geographicAddressValidation:
    post:
      operationId: createGeographicAddressValidation
      summary: Creates a GeographicAddressValidation
      description: This operation creates a GeographicAddressValidation entity.
      tags:
        - geographicAddressValidation
      parameters:
        - name: geographicAddressValidation
          description: The GeographicAddressValidation to be created
          required: true
          schema:
            $ref: '#/definitions/GeographicAddressValidation_Create'
          in: body
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
      responses:
        '200':
          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)
          schema:
            $ref: '#/definitions/GeographicAddressValidation'
        '400':
          description: |-
            Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: |-
            Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: |-
            Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '422':
          description: |-
            Unprocessable entity due to the business validation problems
          schema:
            type: array
            items:
              $ref: '#/definitions/Error422'
        '500':
          description: |-
            Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
  '/geographicAddress/{id}':
    get:
      operationId: retrieveGeographicAddress
      summary: Retrieves a GeographicAddress by ID
      description:
        This operation retrieves a GeographicAddress entity. Attribute
        selection is enabled for all first level attributes.
      tags:
        - geographicAddress
      parameters:
        - name: id
          description: Identifier of the GeographicAddress
          required: true
          type: string
          in: path
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GeographicAddress'
        '400':
          description: |-
            Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: |-
            Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: |-
            Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: >-
            Not Found
          schema:
            $ref: '#/definitions/Error404'
        '500':
          description: |-
            Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
definitions:
  FieldedAddress:
    allOf:
      - $ref: '#/definitions/GeographicAddress'
      - type: object
        required:
          - city
          - country
          - streetName
        properties:
          city:
            type: string
            description: The city that the address is in
          country:
            type: string
            description: The country that the address is in
          geographicSubAddress:
            description:
              Additional fields used to specify an address, as detailed as
              possible.
            $ref: '#/definitions/GeographicSubAddress'
          locality:
            type: string
            description: The locality that the address is in
          postcode:
            type: string
            description: >-
              A descriptor for a postal delivery area used to speed and
              simplify the delivery of mail (also known as zip code) MEF 79
              defines it as required however as in certain countries it is not
              used we make it optional in API.
          postcodeExtension:
            type: string
            description: >-
              An extension of a postal code. E.g. the part following the dash
              in a US urban property address
          stateOrProvince:
            type: string
            description: The State or Province that the address is in
          streetName:
            type: string
            description: Name of the street or other street type
          streetNr:
            type: string
            description: >-
              Number identifying a specific property on a public street. It may
              be combined with streetNrLast for ranged addresses. MEF 79
              defines it as required however as in certain countries it is not
              used we make it optional in API.
          streetNrLast:
            type: string
            description:
              Last number in a range of street numbers allocated to a property
          streetNrLastSuffix:
            type: string
            description: Last street number suffix for a ranged address
          streetNrSuffix:
            type: string
            description: The first street number suffix
          streetSuffix:
            type: string
            description: A modifier denoting a relative direction
          streetType:
            type: string
            description: >-
              The type of street (e.g., alley, avenue, boulevard, brae,
              crescent, drive, highway, lane, terrace, parade, place, tarn,
              way, wharf)
    description: >-
      A type of Address that has a discrete field and value for each type of
      boundary or identifier down to the lowest level of detail. For example
      "street number" is one field, "street name" is another field, etc.
      Reference: MEF 79 (Sn 8.9.2)
  FormattedAddress:
    allOf:
      - $ref: '#/definitions/GeographicAddress'
      - type: object
        required:
          - addrLine1
          - city
          - country
        properties:
          addrLine1:
            type: string
            description: The first address line in a formatted address
          addrLine2:
            type: string
            description: The second address line in a formatted address
          city:
            type: string
            description: The city that the address is in
          country:
            type: string
            description: The country that the address is in
          locality:
            type: string
            description: >-
              An area of defined or undefined boundaries within a local
              authority or other legislatively defined area, usually rural or
              semi-rural in nature
          postcode:
            type: string
            description: >-
              A descriptor for a postal delivery area used to speed and
              simplify the delivery of mail (also known as ZIP code)
          postcodeExtension:
            type: string
            description: >-
              An extension of a postal code. E.g. the part following the dash
              in a US urban property address
          stateOrProvince:
            type: string
            description: The State or Province that the address is in
    description: >-
      A type of Address that has discrete fields for each type of boundary or
      identifier with the exception of street and more specific location
      details, which are combined into a maximum of two strings based on local
      postal addressing conventions.  Reference: MEF 79 (Sn 8.9.3)
  GeographicAddress:
    type: object
    description: |-
      Structured textual way of describing how to find a property in an urban area (country properties are often defined differently).
      Note: Address corresponds to SID UrbanPropertyAddress
    required:
      - '@type'
    discriminator: '@type'
    properties:
      id:
        type: string
        readOnly: true
        description: Unique identifier of the place
      href:
        type: string
        readOnly: true
        description: Unique reference of the place
      allowsNewSite:
        type: boolean
        readOnly: true
        description:
          This attribute specifies if a Buyer must use one of the known
          existing Service Sites at this location for any Products delivered to
          this Address. For example, if a particular building owner mandated
          that all interconnects be done in a shared Public Meet-Me-Room, this
          attribute would be set to False for that Address.
      hasPublicSite:
        type: boolean
        readOnly: true
        description:
          This attribute specifies if that Address contains Service Sites that
          are public such as Meet-Me-Rooms at an interconnect location or a
          shared telecom room in the basement of a multi-tenant building
      associatedGeographicAddress:
        readOnly: true
        $ref: '#/definitions/FieldedAddress'
        description:
          A Fielded Address that is associated with the Geographic Point or the
          Geographic Address Label.
      '@schemaLocation':
        type: string
        format: uri
        description: >-
          A URI to a JSON-Schema file that defines additional attributes and
          relationships. May be used to define additional GeographicAddress
          types. Usage of this attribute must be agreed upon between Buyer and
          Seller.
      '@type':
        type: string
        description: >
          This field is used as discriminator. The value is the name of one of
          the types that inherit from it using 'allOf', i.e. one of
          FieldedAddress, FormattedAddress, GeographicAddressLabel,
          MEFGeographicPoint. Moreover, it might discriminate for an additional
          related place as defined in '@schemaLocation'.
  GeographicAddressValidation:
    type: object
    description: This resource is used to manage address validation response.
    required:
      - submittedGeographicAddress
      - provideAlternative
    properties:
      provideAlternative:
        type: boolean
        description: >
          Indicator provided by the requester to specify if alternate addresses
          must be provided in case of partial or fail result. MEF: The
          attribute is kept for TMF API compliance. MEF requires this attribute
          always to be set to 'true'. Alternatives should be provided
          regardless of whether best match was found. The Seller is allowed not
          to implement the support for 'false'
      validationResult:
        $ref: '#/definitions/MEFValidationResultType'
        description: Result of the address validation (success, partial, fail)
      alternateGeographicAddress:
        type: array
        items:
          $ref: '#/definitions/GeographicAddress'
          description: |
            An array of zero or more Addresses known to the Seller that are
            considered by the Seller to match the submittedGeographicAddress.
            Not including the bestMatchAddress. MEF: Alternatives should be
            provided regardless of whether best match was found.
      bestMatchGeographicAddress:
        $ref: '#/definitions/GeographicAddress'
        description:
          Represents that the Seller is confident this is likely a direct match
          to the submittedGeographicAddress
      submittedGeographicAddress:
        $ref: '#/definitions/GeographicAddress'
        description:
          'The address as submitted to validation. MEF: Structure used by the
          buyer to request geographic address validation'
  GeographicAddressValidation_Create:
    type: object
    description: |-
      This resource is used to manage address validation request.

      Skipped properties: alternateGeographicAddress, bestMatchGeographicAddress, validationResult.
    required:
      - submittedGeographicAddress
      - provideAlternative
    properties:
      provideAlternative:
        type: boolean
        description: >+
          Indicator provided by the requester to specify if alternate addresses
          must be provided in case of partial or fail result. MEF: The
          attribute is kept for TMF API compliance. MEF requires this attribute
          always to be set to 'true'. Alternatives should be provided
          regardless of whether best match was found. The Seller is allowed not
          to implement the support for 'false'
      submittedGeographicAddress:
        $ref: '#/definitions/GeographicAddress'
        description:
          'The address as submitted to validation. MEF: Structure used by the
          buyer to request geographic address validation'
  GeographicSubAddress:
    type: object
    properties:
      buildingName:
        type: string
        description: >
          Allows for identification of places that require building name  as
          part of addressing information
      levelNumber:
        type: string
        description:
          Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2
      levelType:
        type: string
        description: Describes level types within a building
      privateStreetName:
        type: string
        description: >-
          Private streets internal to a property (e.g. a university) may have
          internal names that are not recorded by the land title office
      privateStreetNumber:
        type: string
        description: Private streets numbers internal to a private street
      subUnit:
        type: array
        description: >-
          Representation of a MEFSubUnit It is used for describing subunit
          within a subAddress e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
          WHARF.
        items:
          $ref: '#/definitions/MEFSubUnit'
    description:
      Additional fields used to specify an address, as detailed as possible.
  MEFGeographicPoint:
    allOf:
      - $ref: '#/definitions/GeographicAddress'
      - type: object
        required:
          - spatialRef
          - 'x'
          - 'y'
        properties:
          spatialRef:
            type: string
            description:
              The spatial reference system used to determine the coordinates.
              The system used and the value of this field are to be agreed
              during the onboarding process.
          'x':
            type: string
            description:
              The latitude expressed in the format specified by the
              `spacialRef`
          'y':
            type: string
            description:
              The longitude expressed in the format specified by the
              `spacialRef`
          'z':
            type: string
            description:
              The elevation expressed in the format specified by the
              `spacialRef`
    description: >+
      A MEFGeographicPoint defines a geographic point through coordinates.
      Reference: MEF 79 (Sn 8.9.5), MEF 79.0.2 (Sn 8.9.5)
  MEFSubUnit:
    type: object
    required:
      - subUnitNumber
      - subUnitType
    properties:
      subUnitNumber:
        type: string
        description: >-
          The discriminator used for the subunit, often just a simple number
          but may also be a range.
      subUnitType:
        type: string
        description: >-
          The type of subunit e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
          WHARF.
    description: Allows for sub unit identification
  GeographicAddressLabel:
    allOf:
      - $ref: '#/definitions/GeographicAddress'
      - type: object
        required:
          - externalReferenceId
          - externalReferenceType
        properties:
          externalReferenceId:
            type: string
            description: >-
              The unique reference to an Address as provided by the
              Administrative Authority.
          externalReferenceType:
            type: string
            description: >-
              The organization or standard from the organization that
              administers this Geographic Address Label ensuring it is unique
              within the Administrative Authority. The value(s) to be used are
              to be agreed during the onboarding. For North American providers
              this would normally be CLLI (Common Language Location Identifier)
              code.
    description: >-
      A unique identifier controlled by a generally accepted independent
      administrative authority that specifies a fixed geographical location. 

      Reference: MEF 79 (Sn 8.9.4)
  MEFValidationResultType:
    type: string
    description: |+
      Result of the address validation:
      - success - best match found,
      - partial - no best match but alternatives available,
      - fail - neither best match nor alternatives provided
    enum:
      - success
      - partial
      - fail
  Error:
    type: object
    required:
      - reason
    properties:
      message:
        type: string
        description: >-
          Text that provides mode details and corrective actions related to the
          error. This can be shown to a client user.
      reason:
        type: string
        description: >-
          Text that explains the reason for error. This can be shown to a
          client user.
        maxLength: 255
      referenceError:
        type: string
        format: uri
        description: URL pointing to documentation describing the error
    description: >
      Standard Class used to describe API response error Not intended to be
      used directly. The `code` in the HTTP header is used as a discriminator
      for the type of error returned in runtime.
  Error400:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - missingQueryParameter: The URI is missing a required query-string parameter
              - missingQueryValue: The URI is missing a required query-string parameter value
              - invalidQuery: The query section of the URI is invalid.
              - invalidBody: The request has an invalid body
            enum:
              - missingQueryParameter
              - missingQueryValue
              - invalidQuery
              - invalidBody
    description:
      Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
  Error401:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - missingCredentials: No credentials provided.
              - invalidCredentials: Provided credentials are invalid or expired
            enum:
              - missingCredentials
              - invalidCredentials
    description:
      Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
  Error403:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              This code indicates that the server understood
              the request but refuses to authorize it because
              of one of the following error codes:
              - accessDenied: Access denied
              - forbiddenRequester: Forbidden requester
              - tooManyUsers: Too many users
            enum:
              - accessDenied
              - forbiddenRequester
              - tooManyUsers
    description: Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
  Error404:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              The following error code:
              - notFound: A current representation for the target resource not found
            enum:
              - notFound
    description:
      Resource for the requested path not found.
      (https://tools.ietf.org/html/rfc7231#section-6.5.4)
  Error422:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |
              One of the following error codes:
                - missingProperty: The property the Seller has expected is not present in the payload
                - invalidValue: The property has an incorrect value
                - invalidFormat: The property value does not comply with the expected value format
                - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
                - unexpectedProperty: Additional property, not expected by the Seller has been provided
                - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
                - otherIssue: Other problem was identified (detailed information provided in a reason)
            enum:
              - missingProperty
              - invalidValue
              - invalidFormat
              - referenceNotFound
              - unexpectedProperty
              - tooManyRecords
              - otherIssue
          propertyPath:
            type: string
            description: >
              A pointer to a particular property of the payload that caused the
              validation issue. It is highly recommended that this property
              should be used.

              Defined using JavaScript Object Notation (JSON) Pointer
              (https://tools.ietf.org/html/rfc6901).
    description:
      Unprocessable entity due to a business validation problem.
      (https://tools.ietf.org/html/rfc4918#section-11.2)
  Error500:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              The following error code:
              - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.
            enum:
              - internalError
    description:
      Internal Server Error.
      (https://tools.ietf.org/html/rfc7231#section-6.6.1)

