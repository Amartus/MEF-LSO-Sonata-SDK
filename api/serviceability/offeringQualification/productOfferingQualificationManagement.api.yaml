swagger: '2.0'
info:
  description: >+
    **This specification represents MEF work in progress and is subject to
    change.** 

    The Product Offering Qualification (POQ) Management API allows a Buyer to
    check whether the Seller can deliver a product or set of products from
    among their product offerings at the geographic address or a service
    site  specified by the Buyer; or modify a previously purchased product.

    The following operations are managed:

    - Register for POQ Notifications

    - Create Product Offering Qualification

    - Retrieve POQ List

    - Retrieve POQ by Identifier

    (note: POQ Notification are described in a separate swagger)

    The ProductOfferingQualification API used TMF 679 (v4.0) as a template.
  version: 6.0.0-RC
  title: Product Offering Qualification Management
host: serverRoot
basePath: /mefApi/sonata/productOfferingQualification/v6/
tags:
  - name: productOfferingQualification
    description:
      Operations for managing the Product Offering Qualification request.
  - name: events subscription
    description:
      Operations for managing the subscription for events notification.
schemes:
  - https
consumes:
  - application/json;charset=utf-8
produces:
  - application/json;charset=utf-8
paths:
  /hub:
    post:
      tags:
        - events subscription
      summary:
        Allows a Buyer to register to receive POQ state change notifications
      description: >-
        A request initiated by the Buyer to instruct the Seller to send
        notifications of POQ create and/or state changes if the Buyer has
        registered for these notifications. The state change notifications are
        sent only in the Deferred response scenario as in the Immediate
        response scenario once the response to POQ Request is provided (create
        notification), there  will be no further state changes. Deferred
        Response (section 8.4.2).

      operationId: registerListener
      parameters:
        - name: data
          in: body
          description:
            Data containing the callback endpoint to which to deliver the
            information.
          required: true
          schema:
            $ref: '#/definitions/EventSubscriptionInput'
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
      responses:
        '201':
          description:
            Created. (https://tools.ietf.org/html/rfc7231#section-6.3.2)
          schema:
            $ref: '#/definitions/EventSubscription'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error404'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/Error405'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
        '501':
          description: >-
            Method not implemented. Used in case Seller is not supporting
            Notification mechanism
          schema:
            $ref: '#/definitions/Error501'
  '/hub/{id}':
    delete:
      tags:
        - events subscription
      summary: Unregister a listener
      description: |
        This operation is used to delete a hub. 
        Reference: MEF 79 (Sn 8.3)
      operationId: unregisterListener
      parameters:
        - name: id
          in: path
          description: Identifier of a hub
          required: true
          type: string
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
      responses:
        '204':
          description:
            No Content. (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error404'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/Error405'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
        '501':
          description: >-
            Method not implemented. Used in case Seller is not supporting
            Notification mechanism
          schema:
            $ref: '#/definitions/Error501'
  /productOfferingQualification:
    get:
      tags:
        - productOfferingQualification
      summary: >-
        Retrieve a list of ProductOfferingQualifications based on a set of
        criteria
      description: >-
        The Buyer requests a list of POQs from the Seller based on a set of POQ
        filter criteria (as described in MEF79).  For each POQ returned, the
        Seller also provides a POQ Identifier that uniquely identifies this POQ
        within the Seller's system. The order of the elements returned to the
        Buyer is defined by the Seller (e.g. natural order) and does not change
        between the pages. If criteria for attribute X is provided, all
        returned items must match it.
      operationId: listProductOfferingQualification
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: state
          in: query
          description: >-
            State of the POQ to be retrieved. See `MEFPOQTaskStateType`
            definition for details
          required: false
          type: string
          enum:
            - acknowledged
            - terminatedWithError
            - inProgress
            - done.unableToProvide
            - done.ready
        - name: projectId
          in: query
          description: Identifier of buyer project associated with POQ
          required: false
          type: string
        - name: requestedPOQCompletionDate.gt
          in: query
          description: POQ expected response date is on or after this date
          required: false
          type: string
          format: date-time
        - name: requestedPOQCompletionDate.lt
          in: query
          description: POQ expected response date is on or before this date
          required: false
          type: string
          format: date-time
        - name: buyerId
          in: query
          description: >-
            The unique identifier of the organization that is acting as the
            Buyer
          required: false
          type: string
        - name: sellerId
          in: query
          description: >-
            The unique identifier of the organization that is acting as the
            Seller
          required: false
          type: string
        - name: offset
          in: query
          description: >-
            Requested index for start of POQ to be provided in response
            requested by the client. Note that the index starts with "0".
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: >-
            Requested number of POQ to be provided in response requested by
            client
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)
          headers:
            X-Pagination-Throttled:
              type: boolean
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
            X-Result-Count:
              type: integer
              description: The number of POQ included in the response
            X-Total-Count:
              type: integer
              description: >
                The total number of matching POQ. E.g. if there are 50 matching
                items in total, but the request has offset=10 and limit=10,
                then the X-Total-Count is 50.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductOfferingQualification_Find'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - productOfferingQualification
      summary: Send a request to perform product offering qualification
      description: >-
        A request initiated by the Buyer to determine whether the Seller is
        able to deliver a product or set of products from among their product
        offerings, at the Buyer's location(s); or modify a previously purchased
        product. The Seller also provides estimated time intervals to complete
        these deliveries. Reference: MEF 79 (Sn 8.4).
      operationId: createProductOfferingQualification
      parameters:
        - in: body
          name: productOfferingQualification
          description: >-
            POQ content provided by the Buyer. See definition's description for
            details.
          required: true
          schema:
            $ref: '#/definitions/ProductOfferingQualification_Create'
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
      responses:
        '201':
          description:
            Created. (https://tools.ietf.org/html/rfc7231#section-6.3.2)
          schema:
            $ref: '#/definitions/ProductOfferingQualification'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '422':
          description: >-
            Unprocessable entity due to business validation problems
          schema:
            type: array
            items:
              $ref: '#/definitions/Error422'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
  '/productOfferingQualification/{id}':
    get:
      tags:
        - productOfferingQualification
      summary: Retrieves a ProductOfferingQualification by ID
      description: >-
        The Buyer requests the full details of a single Product Offering
        Qualification based on a POQ identifier returned from  the POQ create
        (`createProductOfferingQualification`) or POQ find
        (`listProductOfferingQualification`)
      operationId: retrieveProductOfferingQualification
      parameters:
        - name: id
          in: path
          description:
            POQ identifier (matches `ProductOfferingQualification.id`)
          required: true
          type: string
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding
            entity  represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
      responses:
        '200':
          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)
          schema:
            $ref: '#/definitions/ProductOfferingQualification'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error404'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error500'
definitions:
  AlternateProductOfferingProposal:
    type: object
    required:
      - alternateProduct
      - id
      - installationInterval
    properties:
      alternateProduct:
        description: Alternate product proposal
        $ref: '#/definitions/MEFAlternateProduct'
      id:
        type: string
        description: >
          Identifier of the Product Offering Qualification alternate proposal.
          Assigned by the Seller.
      installationInterval:
        description: >
          The estimated minimum interval that the Seller requires in their
          standard process to complete the delivery of this Product from the
          time the order is placed and any precedents have been completed.
        $ref: '#/definitions/Duration'
    description: >
      If in the request the Buyer has requested to have alternate product
      proposals, then this class represents a single proposal. All properties
      are assigned by the Seller.

      Reference: MEF 79 (Sn 8.4.3.2)
  Error:
    type: object
    required:
      - reason
    properties:
      message:
        type: string
        description: >-
          Text that provides mode details and corrective actions related to the
          error. This can be shown to a client user.
      reason:
        type: string
        description: >-
          Text that explains the reason for the error. This can be shown to a
          client user.
        maxLength: 255
      referenceError:
        type: string
        format: uri
        description: url pointing to documentation describing the error
    description: >
      Standard Class used to describe API response error Not intended to be
      used directly. The `code` in the HTTP header is used as a discriminator
      for the type of error returned in runtime.
  Error400:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - missingQueryParameter: The URI is missing a required query-string parameter
              - missingQueryValue: The URI is missing a required query-string parameter value
              - invalidQuery: The query section of the URI is invalid.
              - invalidBody: The request has an invalid body
            enum:
              - missingQueryParameter
              - missingQueryValue
              - invalidQuery
              - invalidBody
    description:
      Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
  Error401:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - missingCredentials: No credentials provided.
              - invalidCredentials: Provided credentials are invalid or expired
            enum:
              - missingCredentials
              - invalidCredentials
    description:
      Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
  Error403:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              This code indicates that the server understood
              the request but refuses to authorize it because
              of one of the following error codes:
              - accessDenied: Access denied
              - forbiddenRequester: Forbidden requester
              - tooManyUsers: Too many users
            enum:
              - accessDenied
              - forbiddenRequester
              - tooManyUsers
    description:
      Forbidden. This code indicates that the server understood the request but
      refuses to authorize it.
      (https://tools.ietf.org/html/rfc7231#section-6.5.3)
  Error404:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              The following error code:
              - notFound: A current representation for the target resource not found
            enum:
              - notFound
    description:
      Resource for the requested path not found.
      (https://tools.ietf.org/html/rfc7231#section-6.5.4)
  Error405:
    description: |-
      Method not allowed. This should be used to notify that the method is known by the origin server but not supported.
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            description: |-
              The following error code::
              - methodNotAllowed: Requested method is not supported
            type: string
            enum:
              - methodNotAllowed
  Error422:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |
              One of the following error codes:
                - missingProperty: The property the Seller has expected is not present in the payload
                - invalidValue: The property has an incorrect value
                - invalidFormat: The property value does not comply with the expected value format
                - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
                - unexpectedProperty: Additional property, not expected by the Seller has been provided
                - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
                - otherIssue: Other problem was identified (detailed information provided in a reason)
            enum:
              - missingProperty
              - invalidValue
              - invalidFormat
              - referenceNotFound
              - unexpectedProperty
              - tooManyRecords
              - otherIssue
          propertyPath:
            type: string
            description: >
              A pointer to a particular property of the payload that caused the
              validation issue. It is highly recommended that this property
              should be used.

              Defined using JavaScript Object Notation (JSON) Pointer
              (https://tools.ietf.org/html/rfc6901).
    description:
      Unprocessable entity due to a business validation problem.
      (https://tools.ietf.org/html/rfc4918#section-11.2)
  Error500:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              The following error code:
              - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.
            enum:
              - internalError
    description:
      Internal Server Error.
      (https://tools.ietf.org/html/rfc7231#section-6.6.1)
  Error501:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              The following error code::
              - notImplemented: Method not supported by the server
            enum:
              - notImplemented
    description:
      Not Implemented. (https://tools.ietf.org/html/rfc7231#section-6.6.2)
  EventSubscription:
    type: object
    required:
      - callback
      - id
    properties:
      callback:
        type: string
        description: >-
          The value provided by the Buyer in `EventSubscriptionInput` during
          notification registration
      id:
        type: string
        description: >-
          An identifier of this Event Subscription assigned by the Seller when
          resource is created.
      query:
        type: string
        description: >-
          The value provided by the Buyer in `EventSubscriptionInput` during
          notification registration
    description: |
      This resource is used to manage notification subscription.
      Reference: MEF 79 (Sn 8.3)
  EventSubscriptionInput:
    type: object
    required:
      - callback
    properties:
      callback:
        type: string
        description: >-
          This callback value must be set to *host* property from Buyer
          ProductOfferingQualification Notification API
          (productOfferingQualificationNotification.api.yaml). This property is
          appended with the base path and notification resource path specified
          in that API to construct an URL to which notification is sent. E.g.
          for "callback": "http://buyer.co/listenerEndpoint", the create event
          notification will be sent to:
          `http://buyer.co/listenerEndpoint/mefApi/sonata/productOfferingQualificationNotification/v5/listener/poqCreateEvent`
      query:
        type: string
        description: >-
          This attribute is used to define to which type of events to register
          to. Example: "query":"eventType = poqCreateEvent". To subscribe for
          more than one event type, put the values separated by comma:
          `eventType=poqCreateEvent,poqStateChangeEvent`. The possible values
          are enumerated by the 'POQEventType' in
          productOfferingQualificationNotification.api.yaml.  An empty query is
          treated as specifying no filters - ending in  subscription for all
          event types.
    description: This class is used to register for Notifications.
  FieldedAddress:
    allOf:
      - $ref: '#/definitions/RelatedPlaceRefOrValue'
      - type: object
        required:
          - city
          - country
          - streetName
        properties:
          city:
            type: string
            description: The city that the address is in
          country:
            type: string
            description: Country that the address is in
          geographicSubAddress:
            $ref: '#/definitions/GeographicSubAddress'
          locality:
            type: string
            description: The locality that the address is in
          postcode:
            type: string
            description: >-
              A descriptor for a postal delivery area, used to speed and
              simplify the delivery of mail (also known as zip code) MEF 79
              defines it as required however as in certain countries it is not
              used we make it optional in API.
          postcodeExtension:
            type: string
            description: >-
              An extension of a postal code. E.g. the part following the dash
              in a US urban property address
          stateOrProvince:
            type: string
            description: The State or Province that the address is in
          streetName:
            type: string
            description: Name of the street or other street type
          streetNr:
            type: string
            description: >-
              Number identifying a specific property on a public street. It may
              be combined with streetNrLast for ranged addresses. MEF 79
              defines it as required however as in certain countries it is not
              used we make it optional in API.
          streetNrLast:
            type: string
            description:
              Last number in a range of street numbers allocated to a property
          streetNrLastSuffix:
            type: string
            description: Last street number suffix for a ranged address
          streetNrSuffix:
            type: string
            description: The first street number suffix
          streetSuffix:
            type: string
            description: A modifier denoting a relative direction
          streetType:
            type: string
            description: >-
              The type of street (e.g., alley, avenue, boulevard, brae,
              crescent, drive, highway, lane, terrace, parade, place, tarn,
              way, wharf)
    description: >-
      A type of Address that has a discrete field and value for each type of
      boundary or identifier down to the lowest level of detail. For example
      "street number" is one field, "street name" is another field, etc.
      Reference: MEF 79 (Sn 8.9.2)
  FormattedAddress:
    allOf:
      - $ref: '#/definitions/RelatedPlaceRefOrValue'
      - type: object
        required:
          - addrLine1
          - city
          - country
        properties:
          addrLine1:
            type: string
            description: The first address line in a formatted address
          addrLine2:
            type: string
            description: The second address line in a formatted address
          city:
            type: string
            description: The city that the address is in
          country:
            type: string
            description: Country that the address is in
          locality:
            type: string
            description: >-
              An area of defined or undefined boundaries within a local
              authority or other legislatively defined area, usually rural or
              semi-rural in nature
          postcode:
            type: string
            description: >-
              A descriptor for a postal delivery area used to speed and
              simplify the delivery of mail (also known as ZIP code)
          postcodeExtension:
            type: string
            description: >-
              An extension of a postal code. E.g. the part following the dash
              in a US urban property address
          stateOrProvince:
            type: string
            description: The State or Province that the address is in
    description: >-
      A type of Address that has discrete fields for each type of boundary or
      identifier with the exception of the street and more specific location
      details, which are combined into a maximum of two strings based on local
      postal addressing conventions. Reference: MEF 79 (Sn 8.9.3)
  GeographicSubAddress:
    type: object
    properties:
      buildingName:
        type: string
        description: >
          Allows for identification of places that require building name  as
          part of addressing information
      levelNumber:
        type: string
        description:
          'Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
      levelType:
        type: string
        description: Describes level types within a building
      privateStreetName:
        type: string
        description: >-
          "Private streets internal to a property (e.g. a university) may have
          internal names that are not recorded by the land title office
      privateStreetNumber:
        type: string
        description: Private streets numbers internal to a private street
      subUnit:
        type: array
        description: >-
          Representation of a MEFSubUnit It is used for describing subunit
          within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
          WHARF.
        items:
          $ref: '#/definitions/MEFSubUnit'
    description:
      'Additional fields used to specify an address, as detailed as possible.'
  GeographicAddressIdentifier:
    allOf:
      - $ref: '#/definitions/RelatedPlaceRefOrValue'
      - type: object
        required:
          - externalReferenceId
          - externalReferenceType
        properties:
          externalReferenceId:
            type: string
            description: >-
              A reference to an address by id
          externalReferenceType:
            type: string
            description: >-
              Uniquely identifies the authority that specifies the addresses
              reference and/or its type (if the authority specifies more than
              one type of address). The value(s) to be used are to be agreed
              upon during the onboarding. For North American providers this
              would normally be CLLI (Common Language Location Identifier)
              code.
    description: >-
      A unique identifier controlled by a generally accepted independent
      administrative authority that specifies a fixed geographical location. 

      Reference: MEF 79 (Sn 8.9.4)
  MEFGeographicPoint:
    allOf:
      - $ref: '#/definitions/RelatedPlaceRefOrValue'
      - type: object
        required:
          - spatialRef
          - 'x'
          - 'y'
        properties:
          spatialRef:
            type: string
            description:
              The spatial reference system used to determine the coordinates
              (e.g. "WGS84"). The system used and the value of this field are
              to be agreed during the onboarding process.
          'x':
            type: string
            description:
              The latitude expressed in the format specified by the
              `spacialRef`
          'y':
            type: string
            description:
              The longitude expressed in the format specified by the
              `spacialRef`
          'z':
            type: string
            description:
              The elevation expressed in the format specified by the
              `spacialRef`
    description: >+
      A MEFGeographicPoint defines a geographic point through coordinates.
      Reference: MEF 79 (Sn 8.9.5)
  MEFPOQItemStateChange:
    type: object
    required:
      - changeDate
      - state
    properties:
      changeDate:
        type: string
        format: date-time
        description: The date on when the state was reached
      changeReason:
        type: string
        description: Additional comment related to state change
      state:
        description: A state reached at change date
        $ref: '#/definitions/MEFPOQItemTaskStateType'
    description: >-
      Holds the reached state, reasons, and associated date the POQ state
      changed, populated by the Seller.
  MEFPOQItemTaskStateType:
    type: string
    description: >+
      POQ item states - The specific states are managed by the Seller based on
      its processing and/or based on the Buyer's action.


      The following mapping has been used between `MEFPOQItemTaskStateType` and
      MEF 79 (Sn 9.2):


      | MEFPOQItemTaskStateType               | MEF
      79                            |
      Description                                                                                                                  |

      |---------------------------------------|
      ----------------------------------|
      -----------------------------------------------------------------------------------------------------------------------------|

      | acknowledged                          |
      N/A                               | Not represented MEF 79. The state
      might be internally assigned when POQ is acknowledged by the Seller and
      assigned an identifier. It is not to be shown to the
      Buyer.               |

      | done.ready                            |
      READY                             | POQ Item response is complete. This
      state does not imply that Seller is able to deliver requested
      item                       |  

      | done.abandoned                        |
      ABANDONED                         | Applied to a POQ Item in case the
      final state is not reached and any other POQ Item moved to the final
      state other than done |

      | terminatedWithError                   |
      INSUFFICIENT_INFORMATION_PROVIDED | The information provided by the Buyer
      is insufficient for the Seller to provide POQ Item
      response                            |

      | inProgress                            |
      IN_PROGRESS                       |	The Seller is working on a POQ item
      response and the answer is not ready
      yet                                                 |
    enum:
      - acknowledged
      - terminatedWithError
      - inProgress
      - done.abandoned
      - done.ready
  MEFPOQStateChange:
    type: object
    required:
      - changeDate
      - state
    properties:
      changeDate:
        type: string
        format: date-time
        description: The date on when the state was reached
      changeReason:
        type: string
        description: Additional comment related to state change
      state:
        description: A state reached at change date
        $ref: '#/definitions/MEFPOQTaskStateType'
    description: >-
      Holds the reached state, reasons, and associated date the POQ state
      changed, populated by the Seller.
  MEFPOQTaskStateType:
    type: string
    description: >+
      These values represent the valid states through which the product
      offering qualification can transition.


      The following mapping has been used between `MEFPOQTaskStateType` and MEF
      79 (Sn 9.1):



      | MEFPOQTaskStateType                   | MEF
      79                            |
      Description                                                                                                                        |

      |---------------------------------------|
      ----------------------------------|
      ----------------------------------------------------------------------------------------------------------------------------------
      |

      | acknowledged                              |
      N/A                               | Not represented MEF 79. The state
      might be internally assigned when POQ is acknowledged by the Seller and
      assigned an identifier. It is not to be shown to the
      Buyer.                   |

      | done.ready                            |
      READY                             | Reached when all items are in `done`
      state                                                                                         |

      | done.unableToProvide                  |
      UNABLE_TO_PROVIDE                 | This state is set when the Seller is
      unable to provide a Product Offering Qualification in the timeframe
      required by the Buyer.    |

      | terminatedWithError                   |
      INSUFFICIENT_INFORMATION_PROVIDED | This state is achieved when a
      well-formed POQ request has been received, but there is insufficient
      information to complete the POQ |

      | inProgress                            |
      IN_PROGRESS                       | There is at least one POQ Item in
      `inProgress`
      state                                                                               |
    enum:
      - acknowledged
      - terminatedWithError
      - inProgress
      - done.unableToProvide
      - done.ready
  MEFProductConfiguration:
    type: object
    required:
      - '@type'
    discriminator: '@type'
    properties:
      '@schemaLocation':
        type: string
        format: uri
        description: >-
          A URI to the JSON schema file that defines the Product Specification
          for the product that is the subject of the POQ Request.
      '@type':
        type: string
        description: >-
          The name of the type, defined in the JSON schema specified  above,
          for the product that is the subject of the POQ Request. The named
          type must be a subclass of MEFProductConfiguration.
    description: >-
      MEFProductConfiguration is used as an extension point for MEF specific
      product/service payload.  The `@type` attribute is used as a
      discriminator
  MEFAlternateProduct:
    type: object
    properties:
      productConfiguration:
        description: >-
          MEFProductConfiguration is used to get MEF specific product/service
          payload. the @type is used a a discriminator.
        $ref: '#/definitions/MEFProductConfiguration'
      productOffering:
        description: |+
          A reference to the alternate product offering.
        $ref: '#/definitions/ProductOfferingRef'
      productSpecification:
        description:
          A reference to a Product Specification of the proposed alternate
          product
        $ref: '#/definitions/ProductSpecificationRef'
    description: >-
      One or more services sold to a Buyer by a Seller.  A particular Product
      Offering defines the technical and commercial attributes and behaviors of
      a Product.
  MEFProductRefOrValue:
    type: object
    properties:
      href:
        type: string
        description: >
          Hyperlink to the product in Seller's inventory that is the
          qualification's subject.  This field MAY be populated only if 'id'
          is. That means when an item `action` is either `modify` or `delete`.
          This field MUST NOT be populated if an item `action` is `add`.
      id:
        type: string
        description: >
          The unique identifier of an in-service Product that is the
          qualification's subject.  This field MUST be populated if an item
          `action` is either `modify` or `delete`.  This field MUST NOT be
          populated if an item `action` is `add`.
      place:
        type: array
        description:
          A list of locations that are related to the Product. For example an
          installation location
        items:
          $ref: '#/definitions/RelatedPlaceRefOrValue'
      productConfiguration:
        description: >-
          MEFProductConfiguration is used to specify the MEF specific product
          payload. This field MUST be populated if an item `action` is `add` or
          `modify`. It MUST NOT be populated when an item `action` is `delete`.
          The @type is used as a discriminator.
        $ref: '#/definitions/MEFProductConfiguration'
      productOffering:
        description: |+
          A reference to product offering. 
          MEF 79 defines the `productOffering` as mandatory for the `add` action,
          however, the API allows additionally the use case of providing the
          `productSpecification` instead. In this scenario the Buyer asks if
          a particular type of product can be served and gets back from the Seller a direct or alternate `productOfferings` in response. These can be later used
          in Quote and Order steps.
        $ref: '#/definitions/ProductOfferingRef'
      productRelationship:
        type: array
        description: >-
          A list of references to existing products that are related to the
          Product that would be delivered to fulfill the POQ Item.
        items:
          $ref: '#/definitions/ProductRelationship'
      productSpecification:
        description:
          A reference to a Product Specification used to describe the Product
        $ref: '#/definitions/ProductSpecificationRef'
    description: >-
      Used by the Buyer to point to existing and/or describe the desired shape
      of the product. In case of `add` action - only `productConfiguration`
      MUST be specified. For `modify` action - both `id` and
      `productConfiguration` to point which product instance to update and to
      what state. In `delete` only the `id` must be provided.
  MEFServiceabilityColor:
    type: string
    description: |
      A color that indicates confidence to service the request. When the item
      state is `done.ready` the Seller **MUST** provide a value. It **MUST
      NOT** be populated for other states.

      Mapping between `ServiceabilityColor` and POQ Confidence Level:

      | ServiceabilityColor      | MEF 79       | MEF 79 semantics |
      |------------------------- | ------------ | -----------------|
      | green                    | GREEN        |  The Seller has high confidence that this Product can be delivered |
      | yellow                   | YELLOW       |  The Seller believes they can deliver the Product but is not highly confident |
      | red                      | RED          |  The Seller cannot deliver the Product as specified.  |

      Reference: MEF 79 (Sn 8.4.3.1)
    enum:
      - green
      - yellow
      - red
  MEFSubUnit:
    type: object
    required:
      - subUnitNumber
      - subUnitType
    properties:
      subUnitNumber:
        type: string
        description: >-
          The discriminator used for the subunit, often just a simple number
          but may also be a range.
      subUnitType:
        type: string
        description: >-
          The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
          WHARF.
    description: Allows for sub unit identification
  GeographicAddressRef:
    allOf:
      - $ref: '#/definitions/RelatedPlaceRefOrValue'
      - type: object
        required:
          - id
        properties:
          href:
            type: string
            description: >
              Hyperlink to the referenced place Hyperlink MAY be used by the
              Seller in responses Hyperlink MUST be ignored by the Seller in
              case it is provided by the Buyer in a request
          id:
            type: string
            description: >-
              Identifier of the referenced Geographic Address. This identifier
              is assigned during a successful address validation request
              (Sonata Geographic Address Management API)
    description: >
      A reference to a Geographic Address resource available through Sonata
      Address Validation API.
  GeographicSiteRef:
    allOf:
      - $ref: '#/definitions/RelatedPlaceRefOrValue'
      - type: object
        required:
          - id
        properties:
          href:
            type: string
            description: >
              Hyperlink to the referenced place Hyperlink MAY be used by the
              Seller in responses Hyperlink MUST be ignored by the Seller in
              case it is provided by the Buyer in a request
          id:
            type: string
            description: >-
              Identifier of the referenced Geographic Site.
    description: >
      A reference to a Geographic Site resource available through Sonata
      Service Site API
  ProductActionType:
    type: string
    description: |
      Action to be performed on the Product Item. The action types are
      described in MEF 79 (Sn 8.4.1.1).

      The following mapping has been used between `ProductActionType` and MEF
      79:

      | ProductActionType | MEF 79     |
      |------------------ | ---------- |
      | add               | INSTALL    |
      | modify            | CHANGE     |
      | delete            | DISCONNECT |
    enum:
      - add
      - modify
      - delete
  ProductOfferingQualification:
    allOf:
      - $ref: '#/definitions/ProductOfferingQualification_Common'
      - type: object
        required:
          - id
          - productOfferingQualificationItem
          - state
        properties:
          effectiveQualificationDate:
            type: string
            format: date-time
            description:
              Date and time (set by the Seller) when the POQ state was set to
              one of the completion states (done.ready, done.unable_to_provide,
              terminated_with_error). The Seller MUST NOT provide this
              attribute until mentioned states are achieved.
          expectedPOQCompletionDate:
            type: string
            format: date-time
            description:
              The date the Seller expects to provide qualification result. Set
              by the Seller. MUST NOT be provided in the POST request.
          href:
            type: string
            description: >
              Hyperlink representing this POQ resource Hyperlink MAY be used by
              the Seller in responses
          id:
            type: string
            description: >-
              The Serviceability Request's unique identifier assigned by the
              Seller.
          productOfferingQualificationItem:
            type: array
            description: >-
              One or more of Product Offering Qualification Items. It should
              contain exactly one entry for each item in the POQ request.
            items:
              $ref: '#/definitions/ProductOfferingQualificationItem'
            minItems: 1
          state:
            description: The state that represents the qualification status
            $ref: '#/definitions/MEFPOQTaskStateType'
          stateChange:
            type: array
            description: >
              A log of all state transitions for the POQ. It must be in sync
              with the most recent POQ Request state.
            items:
              $ref: '#/definitions/MEFPOQStateChange'
    description: |
      Represents a response to the Buyer POQ inquiry.
      Reference MEF 79 (Sn 8.7 and 8.4.3).
  ProductOfferingQualificationItem:
    allOf:
      - $ref: '#/definitions/ProductOfferingQualificationItem_Common'
      - type: object
        required:
          - state
        properties:
          alternateProductOfferingProposal:
            type: array
            description: >
              List of alternate product offering. **MUST NOT** be specified if
              'state' is 'terminatedWithError' or 'done.abandoned'.
            items:
              $ref: '#/definitions/AlternateProductOfferingProposal'
          guaranteedUntilDate:
            type: string
            format: date-time
            description: >
              Date until the Seller guarantees the qualification result. **MUST
              NOT** be specified if 'state' is 'terminatedWithError' or
              'done.abandoned'.
          installationInterval:
            description: >+
              The estimated minimum interval that the Seller requires in their
              standard process to complete the delivery of this Product from
              the time the order is placed and any precedents have been
              completed. When attribute `serviceabilityConfidence` is set to
              `green` or `yellow` the Seller **MUST** populate this attribute.
              **MUST NOT** be specified if 'state' is 'terminatedWithError' or
              `done.abandoned`.
            $ref: '#/definitions/Duration'
          serviceabilityConfidenceReason:
            type: string
            description: >-
              A free text description of the reason a particular color is being
              provided.
          serviceabilityConfidence:
            description: >-
              The level of confidence of the Seller to be able to service the
              request.  When the item state is `done.ready` the Seller **MUST**
              provide a value. It **MUST NOT** be populated for other states.
            $ref: '#/definitions/MEFServiceabilityColor'
          state:
            description: Current state of an item
            $ref: '#/definitions/MEFPOQItemTaskStateType'
          stateChange:
            type: array
            description: >
              A log of all state transitions for the POQ Item. It must be in
              sync with the most recent POQ Item's state.
            items:
              $ref: '#/definitions/MEFPOQItemStateChange'
          terminationError:
            type: array
            description: >
              A list of text-based reasons the Seller MUST provide when the
              request cannot be processed. When item state is
              `terminatedWithError` the Seller **MUST** provide at least one
              termination error.
            items:
              $ref: '#/definitions/TerminationError'
    description: >-
      An individual article included in a POQ that describes a Product of a
      particular type (Product Offering) being delivered to a specific
      geographical location.  The objective is to determine if it is feasible
      for the Seller to deliver this item as described and for the Seller to
      inform the Buyer of the estimated time interval to complete this
      delivery.

      Reference: MEF 79 (Sn 8.4.3.1)
  ProductOfferingQualificationItem_Common:
    type: object
    required:
      - action
      - id
      - product
    properties:
      action:
        description: Action to be qualified
        $ref: '#/definitions/ProductActionType'
      id:
        type: string
        description: >+
          Id of this POQ item which is unique within the POQ. Assigned by the
          Buyer.
      product:
        description: >+
          Used by the Buyer to point to existing and/or describe the desired
          shape of the product. In case of `add` action - only
          `productConfiguration` MUST be specified. For `modify` action - both
          `id` and `productConfiguration` to point which product instance to
          update and to what state. In `delete` only the `id` must be provided.
        $ref: '#/definitions/MEFProductRefOrValue'
      qualificationItemRelationship:
        type: array
        description: |
          A list of references to related POQ items in this POQ
        items:
          $ref: '#/definitions/QualificationItemRelationship'
      relatedContactInformation:
        type: array
        description: |-
          Contact information of an individual or organization playing a role for this POQ Item
          (e.g. for MEF 79: POQ Item Location Contact, role=locationContact)
        items:
          $ref: '#/definitions/RelatedContactInformation'
    description: >
      Common attributes shared between a POQ request and response.  These
      attributes are provided by the Buyer and must not be modified by the
      Seller.
  ProductOfferingQualificationItem_Create:
    allOf:
      - $ref: '#/definitions/ProductOfferingQualificationItem_Common'
      - type: object
    description: >-
      This structure serves as a request for a product offering qualification
      item.

      A product qualification item is an individual article included in a POQ
      that describes a Product of a particular type (Product Offering) being
      delivered to the geographic address  or a service site specified by the
      Buyer.

      The objective is to determine if it is feasible for the Seller to deliver
      this item as described and for the Seller to inform the Buyer of the
      estimated time interval to complete this delivery.

      The modelling pattern introduces the `Common` supertype to aggregate
      attributes that are common to both `ProductOfferingQualificationItem` and
      `ProductOfferingQualificationItem_Create`. It happens that it is the
      Create type has a subset of attributes of the response type and does not
      introduce any new, thus the `Create` type has an empty definition.

      Reference: MEF 79 (Sn 8.4.1.1)
  ProductOfferingQualification_Common:
    type: object
    required:
      - relatedContactInformation
    properties:
      instantSyncQualification:
        type: boolean
        description: >-
          If this flag is set to Yes, Buyer requests to have an instant
          qualification to be provided in operation POST response
        default: false
      projectId:
        type: string
        description: >-
          This value MAY be assigned by the Buyer/Seller to identify a project
          the serviceability request is associated with.
      provideAlternative:
        type: boolean
        description: >-
          Allows the Buyer to indicate if he is willing to get an alternate
          proposal if requested product not available.
        default: false
      relatedContactInformation:
        type: array
        description: |-
          Party playing a role for this qualification. MEF 79 mandates
          providing 'Buyer Contact Information' in the request
          ('role=buyerContactInformation') and 'Seller Contact Information'
          in the response ('role=sellerContactInformation')
        items:
          $ref: '#/definitions/RelatedContactInformation'
        minItems: 1
      requestedPOQCompletionDate:
        type: string
        format: date-time
        description:
          The latest date a the POQ completion is expected. This attribute is
          required when `instantSyncQualification=false`
  ProductOfferingQualification_Create:
    allOf:
      - $ref: '#/definitions/ProductOfferingQualification_Common'
      - type: object
        required:
          - productOfferingQualificationItem
        properties:
          productOfferingQualificationItem:
            type: array
            description: A non-empty list of POQ items
            items:
              $ref: '#/definitions/ProductOfferingQualificationItem_Create'
            minItems: 1
    description: >
      Represents a request formulated by the Buyer that is composed of product
      offering qualification items.

      Reference: MEF 79 (Sn 8.4)
  ProductOfferingQualification_Find:
    type: object
    required:
      - id
      - state
    properties:
      id:
        type: string
        description: The POQ Request's unique identifier.
      projectId:
        type: string
        description: >-
          The project ID specified by the Buyer in the POQ Request, if any.
      requestedPOQCompletionDate:
        type: string
        format: date
        description: >
          The latest date the POQ completion is expected by the Buyer, if
          specified by the Buyer.
      state:
        description: Current state of the POQ
        $ref: '#/definitions/MEFPOQTaskStateType'
    description: >
      This class represent a single list item for the response of
      `listProductOfferingQualification` operation. 

      Reference: MEF 79 (Sn 8.6)
  ProductOfferingRef:
    type: object
    required:
      - id
    properties:
      href:
        type: string
        description: >
          Hyperlink to a Product Offering in Sellers catalog. In case Seller is
          not providing a catalog capabilities this field is not used.  The
          catalog API definition is provided by the Seller to the Buyer during
          onboarding Hyperlink MAY be used by the Seller in responses  
          Hyperlink MUST be ignored by the Seller in case it is provided by the
          Buyer in a request
      id:
        type: string
        description: >-
          id of a Product Offering. It is assigned by the Seller. The Buyer and
          the Seller exchange information about offerings' ids during the
          onboarding process.
    description: >-
      A reference to a Product Offering offered by the Seller to the Buyer.  A
      Product Offering contains the commercial and technical details of a
      Product sold by a particular Seller. A Product Offering defines all of
      the commercial terms and, through association with a particular Product
      Specification, defines all the technical attributes and behaviors of the
      Product. A Product Offering may constrain the allowable set of
      configurable technical attributes and/or behaviors specified in the
      associated Product Specification.
  ProductSpecificationRef:
    type: object
    required:
      - id
    properties:
      href:
        type: string
        description: >
          Hyperlink to a Product Specification in Sellers catalog. In case
          Seller is not providing a catalog capability this field is not used.
          The catalog API definition is provided by the Seller to Buyer during
          onboarding. Hyperlink MAY be used by the Seller in responses  
          Hyperlink MUST be ignored by the Seller in case it is provided by the
          Buyer in a request
      id:
        type: string
        description: Unique identifier of the product specification
    description: >-
      A reference to a structured set of well-defined technical attributes
      and/or behaviors that are used to construct a Product Offering for sale
      to a market.
  ProductRelationship:
    type: object
    required:
      - id
      - relationshipType
    properties:
      groupingKey:
        type: string
        description: >
          MEF 79.0.1. Introduces a list of related ids for the
          ProductRelationship. For sake of TMF compliance, a `groupingKey` is
          introduce to retain id as a simple attribute. Ids from relationships
          having the same `groupingKey`and `relationshipType` MUST be treated
          as a list of identifiers.

          Reference: MEF 79.0.1 (Sn 7)
      href:
        type: string
        description: >
          Hyperlink to the product in Seller's inventory that is referenced
          Hyperlink MAY be used by the Seller in responses   Hyperlink MUST be
          ignored by the Seller in case it is provided by the Buyer in a
          request
      id:
        type: string
        description: unique identifier of a Product that is referenced
      relationshipType:
        type: string
        description: >-
          One of the relationship types defined in the Product Specification.
          For example: "relies on".
    description: Indicates a relationship between products.
  QualificationItemRelationship:
    type: object
    required:
      - id
      - relationshipType
    properties:
      id:
        type: string
        description:
          An identifier of the targeted POQ item within the same POQ request
      relationshipType:
        type: string
        description: >
          One of the relationship types defined in the Product Specification.
          For example: "relies on".
    description: >-
      The relationship between product offering qualification items that can be
      used to validate business rules between POQ items.

      Reference: MEF 79.0.1 (Sn 6)
  RelatedContactInformation:
    type: object
    required:
      - emailAddress
      - name
      - number
      - role
    properties:
      emailAddress:
        type: string
        description: Email address
      name:
        type: string
        description: Name of the contact
      number:
        type: string
        description: Phone number
      numberExtension:
        type: string
        description: Phone number extension
      organization:
        type: string
        description: The organization or company that the contact belongs to
      role:
        type: string
        description: >-
          A role the party plays in a given context.
      postalAddress:
        $ref: '#/definitions/FieldedAddress'
        description:
          'Identifies the postal address of the person or office to be
          contacted.'
    description: >-
      Contact data for a person or organization that is involved in the product
      offering qualification. In a given context it is always specified by the
      Seller (e.g. Seller Contact Information) or by the Buyer. 

      Reference: MEF 79 (Sn 8.11)
  RelatedPlaceRefOrValue:
    type: object
    required:
      - '@type'
      - role
    discriminator: '@type'
    properties:
      '@schemaLocation':
        type: string
        format: uri
        description: >-
          A URI to a JSON-Schema file that defines additional attributes and
          relationships. May be used to define additional related place types.
          Usage of this attribute must be agreed between Buyer and Seller.
      '@type':
        type: string
        description: >
          This field is used as discriminator. The value is the name of one of
          the types that inherit from it using 'allOf', i.e. one of
          FieldedAddress, FormattedAddress, GeographicAddressIdentifier,
          MEFGeographicPoint, GeographicAddressRef, GeographicSiteRef.
          Moreover, it might discriminate for an additional related place as
          defined in '@schemaLocation'.
      role:
        type: string
        description:
          Role of this place. The values that can be specified here are
          described by Product Specification (e.g. "INSTALL_LOCATION").
    description:
      Place defines the places (locations) where the products being subject of
      this qualification are to be provided.
  TerminationError:
    type: object
    required:
      - value
    properties:
      value:
        type: string
        description: Value (text) for the termination error
    description: >-
      Termination error may be provided if seller is unable to perform
      qualification Reference: MEF 79 (Sn 8.4.3.1)
  Duration:
    type: object
    required:
      - amount
      - units
    description: A Duration in a given unit of time e.g. 3 hours, or 5 days.
    properties:
      amount:
        type: integer
        description: 'Duration (number of seconds, minutes, hours, etc.)'
      units:
        description: 'Time unit type'
        $ref: '#/definitions/TimeUnit'
  TimeUnit:
    type: string
    description: |
      Represents a unit of time.
      Reference: MEF 79 (Sn 8.4.3.1/8.4.3.2)
    enum:
      - calendarMonths
      - calendarDays
      - calendarHours
      - calendarMinutes
      - businessDays
      - businessHours
      - businessMinutes
