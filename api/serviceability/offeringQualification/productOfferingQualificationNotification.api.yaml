swagger: "2.0"
info:
  description: >+
    **This specification represents MEF work in progress and is subject to change.** 

    The Product Offering Qualification (POQ) Notification API allows a Buyer to receive notifications 
    send by the Seller on POQ state changes.
    This API is to be implemented by the Buyer. 
    To be able to receive notification Buyer first must to register as a notification listener using POQ Management `/hub` endpoint.

  version: 6.0.0-RC
  title: Product Offering Qualification Notification
  x-logo:
    url: /redoc/logo.png
    backgroundColor: "#FFFFFF"
host: serverRoot
basePath: /mefApi/sonata/productOfferingQualificationNotification/v6/
schemes:
  - https
produces:
  - application/json;charset=utf-8
tags:
  - name: Notification listeners
    description: >
      The Seller's endpoint to send particular event types notifications to.
paths:
  /listener/poqCreateEvent:
    post:
      tags:
        - Notification listeners
      consumes:
        - application/json;charset=utf-8
      operationId: poqCreateEvent
      summary: >-
        Product Offering Qualification Creation Notification endpoint
      description: >-
        This endpoint is used to receive notifications on POQ creation
      deprecated: false
      parameters:
        - name: poqCreateEvent
          required: true
          in: body
          description: "The event body"
          schema:
            $ref: "#/definitions/Event"
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "408":
          description: |-
            Request Time-out
          schema:
            $ref: "#/definitions/Error408"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
  /listener/poqStateChangeEvent:
    post:
      tags:
        - Notification listeners
      consumes:
        - application/json;charset=utf-8
      operationId: poqStateChangeEvent
      summary: Product Offering Qualification Change Notification endpoint
      description: >-
        This endpoint is used to receive notifications on POQ state change
      deprecated: false
      parameters:
        - name: poqStateChangeEvent
          required: true
          in: body
          description: The event body
          schema:
            $ref: "#/definitions/Event"
      responses:
        "204":
          description: No Content
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "408":
          description: |-
            Request Time-out
          schema:
            $ref: "#/definitions/Error408"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
definitions:
  PoqEventType:
    description: Indicates the type of product offering qualification event.
    type: string
    enum:
      - poqCreateEvent
      - poqStateChangeEvent
  Error:
    type: object
    required:
      - reason
    properties:
      message:
        type: string
        description: >-
          Text that provide mode details and corrective actions related to the
          error. This can be shown to a client user.
      reason:
        type: string
        description: >-
          Text that explains the reason for error. This can be shown to a
          client user.
        maxLength: 255
      referenceError:
        type: string
        format: uri
        description: url pointing to documentation describing the error
    description: >
      Standard Class used to describe API response error

      Not intended to be use directly. The `code` in the HTTP header is used as
      a discriminator for the type of error returned in runtime.
  Error400:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - missingQueryParameter: The URI is missing a required query-string parameter
              - missingQueryValue: The URI is missing a required query-string parameter value
              - invalidQuery: The query section of the URI is invalid.
              - invalidBody: The request has an invalid body
            enum:
              - missingQueryParameter
              - missingQueryValue
              - invalidQuery
              - invalidBody
    description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
  Error401:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - missingCredentials: No credentials provided.
              - invalidCredentials: Provided credentials are invalid or expired 
            enum:
              - missingCredentials
              - invalidCredentials
    description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
  Error403:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              This code indicates that the server understood
              the request but refuses to authorize it because
              of one of the following error codes:
              - accessDenied: Access denied
              - forbiddenRequester: Forbidden requester
              - tooManyUsers: Too many users
            enum:
              - accessDenied
              - forbiddenRequester
              - tooManyUsers
    description: Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
  Error408:
    description: |-
      Request Time-out (https://tools.ietf.org/html/rfc7231#section-6.5.7)
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - timeOut: Request Time-out - indicates that the server did not receive a complete request message within the time that it was prepared to wait.
            type: string
            enum:
             - timeOut
  Error500:
    allOf:
      - $ref: '#/definitions/Error'
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request. 
            enum:
              - internalError
    description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)
  Event:
    description: >-
      Event class is used to describe information structure used for
      notification.
      Reference: MEF 79 (Sn 8.5)
    required:
      - eventId
      - eventType
      - eventTime
      - event
    type: object
    properties:
      eventId:
        description: Id of the event
        type: string
      eventType:
        $ref: "#/definitions/PoqEventType"
        description: >
          Indicates the type of the POQ event.
      eventTime:
        description: Date-time when the event occurred
        type: string
        format: date-time
      event:
        $ref: "#/definitions/PoqEvent"
        description: >
          A reference to the POQ that is source of the notification.
  PoqEvent:
    description: >-
      A reference to the POQ that is source of the notification.
    type: object
    required:
      - id
    properties:
      id:
        description: The POQ Request's unique identifier.
        type: string
      href:
        description: Link to the POQ
        type: string
      buyerId:
        description: >-
          The unique identifier of the organization that is acting as the
          a Buyer. MUST be specified in the request only when the responding 
          represents more than one Buyer.
        
          Reference: MEF 79 (Sn 8.8)
        type: string
      sellerId:
        description: >-
          The unique identifier of the organization that is acting as the
          Seller. MUST be specified in the request only when requester entity 
          represents more than one Seller.

          Reference: MEF 79 (Sn 8.8)
        type: string