swagger: "2.0"
info:
  description: >+
    **ProductOfferingQualification Notification**

    The Product Offering Qualification (POQ) Notification API allows a Buyer to receive notifications 
    send by the Seller on POQ state changes.
    This API is to be implemented by the Buyer. 
    To be able to receive notification Buyer first must to register as a notification listener using POQ Management Hub endpoint.

  version: 5.0.0-RC
  title: API ProductOfferingQualificationNotification
  x-logo:
    url: /redoc/logo.png
    backgroundColor: "#FFFFFF"
host: serverRoot
basePath: /mefApi/sonata/productOfferingQualificationNotification/v5/
schemes:
  - https
produces:
  - application/json;charset=utf-8
tags:
  - name: Notification listeners
    description: ""
paths:
  /listener/poqCreateEvent:
    post:
      tags:
        - Notification listeners
      consumes:
        - application/json;charset=utf-8
      operationId: poqCreateEvent
      summary: >-
        Product Offering Qualification Creation Notification endpoint
      description: >-
        This endpoint is used to receive notifications on POQ creation
      deprecated: false
      parameters:
        - name: poqCreateEvent
          required: true
          in: body
          description: ""
          schema:
            $ref: "#/definitions/Event"
      responses:
        "204":
          description: No Content
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "408":
          description: |-
            Request Time-out
          schema:
            $ref: "#/definitions/Error408"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
  /listener/poqStateChangeEvent:
    post:
      tags:
        - Notification listeners
      consumes:
        - application/json;charset=utf-8
      operationId: poqStateChangeEvent
      summary: Product Offering Qualification Change Notification endpoint
      description: >-
        This endpoint is used to receive notifications on POQ state change
      deprecated: false
      parameters:
        - name: poqStateChangeEvent
          required: true
          in: body
          description: ""
          schema:
            $ref: "#/definitions/Event"
      responses:
        "204":
          description: No Content
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "408":
          description: |-
            Request Time-out
          schema:
            $ref: "#/definitions/Error408"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
definitions:
  PoqEventType:
    description: Indicates the type of product offering qualification event.
    type: string
    enum:
      - poqCreateEvent
      - poqStateChangeEvent
  Error:
    description: |
      Standard Class used to describe API response error
      Not intended to be use directly only via specialization which defines a code
    type: object
    required:
      - reason
    properties:
      message:
        type: string
        description: >-
          Text that provide mode details and corrective actions related to the
          error. This can be shown to a client user.
      reason:
        type: string
        description: >-
          Text that explains the reason for error. This can be shown to a client
          user.
        maxLength: 255
      referenceError:
        type: string
        format: uri
        description: url pointing to documentation describing the error
      status:
        type: string
        description: Http error code extension like 400-2 for example
  Error400:
    description: |-
      Bad Request
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - missingQueryParameter: Missing query-string parameter
              - missingQueryValue: Invalid query-string parameter value
              - invalidQuery
              - invalidBody: Invalid body
            type: string
            enum:
             - missingQueryParameter
             - missingQueryValue
             - invalidQuery
             - invalidBody
  Error401:
    description: |-
      Unauthorized
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - missingCredentials: Missing credentials
              - invalidCredentials: Invalid OR expired credentials
            type: string
            enum:
             - missingCredentials
             - invalidCredentials
  Error403:
    description: |-
      Forbidden
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - accessDenied: Access denied
              - forbiddenRequester: Forbidden requester
              - tooManyUsers: Too many users
            type: string
            enum:
             - accessDenied
             - forbiddenRequester
             - tooManyUsers
  Error404:
    description: |-
      Resource for the requested path not found
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - notFound: Resource not found
            type: string
            enum:
             - notFound
  Error408:
    description: |-
      Request Time-out
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - timeOut: Request Time-out
            type: string
            enum:
             - timeOut

  Error422:
    description: |-
      Unprocessable entity due to business validation problem
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |
              List of supported error codes:
                - missingProperty: the property the Seller has expected is not present in the payload
                - invalidValue: the property has an incorrect value
                - invalidFormat: the property value does not comply to expected value format
                - referenceNotFound: the object referenced by the property cannot be identified in the Seller system
                - unexpectedProperty: additional property, not expected by the Seller has been provided
                - otherIssue: other problem was identified (detailed information provided in a reason)
            type: string
            enum:
              - missingProperty
              - invalidValue
              - invalidFormat
              - referenceNotFound
              - unexpectedProperty
              - otherIssue
          propertyPath:
            type: string
            description: |
              A pointer to a particular property of the payload that caused the validation issue.
              Defined using JsonPath format (https://goessner.net/articles/JsonPath/).
  Error500:
    description: |-
      Internal Server Error
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - internalError: Internal server error
            type: string
            enum:
             - internalError
  Error501:
    description: |-
      Not Implemented
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - notImplemented: Method not supported by the server
            type: string
            enum:
             - notImplemented
  Event:
    description: >-
      Event class is used to describe information structure used for
      notification.
      Reference: EF 79 (Sn 8.5)
    required:
      - eventId
      - eventType
      - eventTime
      - event
    type: object
    properties:
      eventId:
        description: Id of the event
        type: string
      eventType:
        $ref: "#/definitions/PoqEventType"
      eventTime:
        description: Datetime when the event occurred
        type: string
        format: date-time
      event:
        $ref: "#/definitions/PoqEvent"
  PoqEvent:
    description: >-
      The product offering qualification passed as the "event" in a
      notification.
    type: object
    properties:
      id:
        description: The POQ Request's unique identifier.
        type: string
      href:
        description: Link to the POQ
        type: string
  Notification:
    description: >-
      Notification class is used to describe structure used for product offering
      qualification notification (product offering qualification created,
      product offering qualification state change, product offering
      qualification attribute value change)
    type: object
    properties: {}
