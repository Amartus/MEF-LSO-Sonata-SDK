swagger: "2.0"
info:
  description: This is not the ProductOrder API but the API to manage notification for ProductOrder. This API must be deployed on notification subscriber side (buyer side / listener).
  version: 5.0.0-RC
  title: API ProductOrder Notification
  x-logo:
    url: /redoc/logo.png
    backgroundColor: "#FFFFFF"
host: serverRoot
basePath: /mefApi/sonata/productOrderNotification/v5/
schemes:
- "https"
produces:
- "application/json;charset=utf-8"
tags:
- name: Notification listeners
  description: "Notification class is used to describe structure used for product\
    \ order notification (product order created, product order state change, product\
    \ order information required, product order attribute value change)"
paths:
  /listener/productOrderCreateEvent:
    post:
      tags:
      - Notification listeners
      consumes:
      - "application/json;charset=utf-8"
      operationId: "listenToProductOrderCreateEvent"
      summary: "Product order creation notification endpoint"
      description: "This endpoint is used to receive notifications on Product Order creation"
      deprecated: false
      parameters:
      - name: "data"
        required: false
        in: "body"
        schema:
          $ref: "#/definitions/Event"
      responses:
        "204":
          description: No Content
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        '422':
          description: |-
            Unprocessable entity due to the business validation problems in the Quote or one of the Quote items
          schema:
              type: array
              items:
                $ref: '#/definitions/Error422'
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
        "503":
          description: |-
            Service Unavailable
          schema:
            $ref: "#/definitions/Error503"
  /listener/productOrderStateChangeEvent:
    post:
      tags:
      - Notification listeners
      consumes:
      - "application/json;charset=utf-8"
      operationId: "listenToProductOrderStateChangeEvent"
      summary: "Product order state change structure"
      description: "This endpoint is used to receive notifications on Product Order state change"
      deprecated: false
      parameters:
      - name: "data"
        required: true
        in: "body"
        schema:
          $ref: "#/definitions/Event"
      responses:
        "204":
          description: No Content
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        '422':
          description: |-
            Unprocessable entity due to the business validation problems in the Quote or one of the Quote items
          schema:
              type: array
              items:
                $ref: '#/definitions/Error422'
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
        "503":
          description: |-
            Service Unavailable
          schema:
            $ref: "#/definitions/Error503"
  /listener/productOrderAttributeValueChangeEvent:
    post:
      tags:
      - Notification listeners
      consumes:
      - "application/json;charset=utf-8"
      operationId: "listenToProductOrderAttributeValueChangeEvent"
      summary: "Product Order attribute value change structure"
      description: "Product Order attribute value change structure description"
      deprecated: false
      parameters:
      - name: "data"
        required: true
        in: "body"
        schema:
          $ref: "#/definitions/EventPlus"
      responses:
        "204":
          description: No Content
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        '422':
          description: |-
            Unprocessable entity due to the business validation problems in the Quote or one of the Quote items
          schema:
              type: array
              items:
                $ref: '#/definitions/Error422'
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
        "503":
          description: |-
            Service Unavailable
          schema:
            $ref: "#/definitions/Error503"
  /listener/productOrderInformationRequiredEvent:
    post:
      tags:
      - Notification listeners
      consumes:
      - "application/json;charset=utf-8"
      operationId: "listenToProductOrderInformationRequiredEvent"
      summary: "Product Order information required structure"
      description: "Product Order information required structure description"
      deprecated: false
      parameters:
      - name: "productOrderInformationRequired"
        required: true
        in: "body"
        schema:
          $ref: "#/definitions/EventPlus"
      responses:
        "204":
          description: No Content
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        '422':
          description: |-
            Unprocessable entity due to the business validation problems in the Quote or one of the Quote items
          schema:
              type: array
              items:
                $ref: '#/definitions/Error422'
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
        "503":
          description: |-
            Service Unavailable
          schema:
            $ref: "#/definitions/Error503"
definitions:
  ProductActionType:
    description: "An enumeration of valid order item actions"
    type: "string"
    enum:
    - "add"
    - "change"
    - "remove"
    - "noChange"
  ProductOrderStateType:
    description: "An enumeration of valid order states"
    type: "string"
    enum:
    - "completed"
    - "partial"
    - "failed"
    - "inProgress.jeopardy"
    - "inProgress.confirmed"
    - "inProgress.configured"
    - "cancelled"
    - "pendingCancellation"
    - "assessingCancellation"
    - "held"
    - "pending"
    - "inProgress"
    - "rejected"
    - "acknowledged"
  ProductOrderItemStateType:
    description: "An enumeration of valid order item states."
    type: "string"
    enum:
    - "acknowledged"
    - "rejected"
    - "inProgress"
    - "pending"
    - "held"
    - "assessingCancellation"
    - "pendingCancellation"
    - "cancelled"
    - "inProgress.configured"
    - "failed"
    - "completed"
  Severity:
    description: "Severity of the order message"
    type: "string"
    enum:
    - "error"
    - "information"
  ProductOrderEventType:
    description: "Product Order event type"
    type: "string"
    enum:
    - "productOrderCreateEvent"
    - "productOrderAttributeValueChangeEvent"
    - "productOrderStateChangeEvent"
    - "productOrderInformationRequiredEvent"
  BillingAccountRef:
    description: "An arrangement that a customer has with an enterprise that provides\
      \ products to the customer."
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "Identifies the buyer's billing account to which the recurring\
          \ and non-recurring charges for this order item will be billed.\nIf the\
          \ value 'NEW' is provided it means that buyer request a new BAN."
        type: "string"
  Note:
    description: "A note, or set of notes, to be associated to the product order."
    required:
    - "text"
    - "date"
    - "author"
    type: "object"
    properties:
      text:
        description: "The text of the note"
        type: "string"
      date:
        description: "The date of the note. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)."
        type: "string"
        format: "date-time"
      author:
        description: "The author of the note"
        type: "string"
  RelatedParty:
    description: "An entity or organization that is involved in the product order,\
      \ such as the buyer, the seller, the order contact, etc."
    required:
    - "id"
    - "role"
    - "name"
    - "number"
    type: "object"
    properties:
      id:
        description: "An identifier of the related party. For the \"buyer\" and \"\
          seller\" id, this is a  Carrier ID number provided by local regulatory entity.\
          \  Unique in the local jurisdiction."
        type: "string"
      href:
        description: "Reference link to the party"
        type: "string"
      '@referredType':
        type: "string"
      role:
        description: "MEF: could be \"Buyer\", \"Seller\", \"Billing Contact\", \"\
          Order Contact\", \"Implementation Contact\", \"Technical Contact\", \"UNI\
          \ Site Contact\", \"UNI Alt Site Contact\", \"ENNI Site Contact\", \"ENNI\
          \ Alt Site Contact\""
        type: "string"
      name:
        description: "The name of the related party, e.g. \"Jean Pontus\"."
        type: "string"
      emailAddress:
        description: "The email address of the related party."
        type: "string"
      number:
        description: "The telephone number of the related party."
        type: "string"
      numberExtension:
        description: "MEF Extension"
        type: "string"
  ProductSpecification:
    description: "A ProductSpec describes the invariant properties (i.e., features)\
      \ that a given set of Products MAY have. These properties provide the information\
      \ needed to plan, construct, allocate, and/or retire the Services and Resources\
      \ from the operator environment needed to deliver the Product"
    type: "object"
    properties:
      id:
        description: "A unique identifier for the product spec, within the product\
          \ spec domain. It is assigned by the seller and communicated to the buyer\
          \ at on-boarding time."
        type: "string"
      describing:
        $ref: "#/definitions/Describing"
  Describing:
    type: "object"
    properties:
      '@type':
        type: "string"
      '@schemaLocation':
        type: "string"
  OrderMessage:
    description: "An optional array of messages associated with the Order"
    required:
    - "messageInformation"
    - "severity"
    type: "object"
    properties:
      code:
        description: "The code associated with the Message"
        type: "string"
      field:
        description: "The field/attribute on the Order associated with message"
        type: "string"
      messageInformation:
        description: "A description of the error condition or information to be conveyed\
          \ to the Buyer"
        type: "string"
      severity:
        $ref: "#/definitions/Severity"
      correctionRequired:
        description: "Indicates whether the Buyer must submit an updated Order to\
          \ resolve the Error/Jeopardy condition."
        type: "boolean"
  Notification:
    description: "This class is created only to gather Notification data structure.\
      \ This structure must be send to the callback url provided in the HUB resource."
    type: "object"
  ProductOrderEvent:
    description: "ProductOrder structure used for notification"
    required:
    - "id"
    - "externalId"
    - "state"
    - "requestedCompletionDate"
    - "orderVersion"
    - "relatedParty"
    - "orderItem"
    type: "object"
    properties:
      id:
        description: "Unique (within the ordering domain) identifier for the order\
          \ that is generated by the seller when the order is initially accepted."
        type: "string"
      externalId:
        description: "A number that uniquely identifies an order within the buyer's\
          \ enterprise."
        type: "string"
      state:
        $ref: "#/definitions/ProductOrderStateType"
      requestedStartDate:
        description: "The buyer's requested date that order processing should start.\
          \ Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)."
        type: "string"
        format: "date-time"
      requestedCompletionDate:
        description: "Identifies the buyer's desired due date (requested delivery\
          \ date). Cannot be requested on cancelled orders.  Format is YYYY-MM-DDThh:mmTZD\
          \ (e.g. 1997-07-16T19:20+01:00)."
        type: "string"
        format: "date-time"
      expectedCompletionDate:
        description: "Expected delivery date amended by the provider"
        type: "string"
        format: "date-time"
      completionDate:
        description: "The date the order is completed. Format is YYYY-MM-DDThh:mmTZD\
          \ (e.g. 1997-07-16T19:20+01:00)"
        type: "string"
        format: "date-time"
      orderVersion:
        description: "The version number that the Buyer uses to refer to this particular\
          \ version of the order"
        type: "string"
        default: "1"
      projectId:
        description: "An identifier that is used to group Orders that represent a\
          \ unit of functionality that is important to a Buyer.  A Project can be\
          \ used to relate multiple Orders together."
        type: "string"
      relatedParty:
        type: "array"
        items:
          $ref: "#/definitions/RelatedParty"
      note:
        type: "array"
        items:
          $ref: "#/definitions/Note"
      orderItem:
        type: "array"
        items:
          $ref: "#/definitions/OrderItemEvent"
      orderMessage:
        type: "array"
        items:
          $ref: "#/definitions/OrderMessage"
      '@type':
        type: "string"
      '@schemaLocation':
        type: "string"
      '@baseType':
        type: "string"
  OrderItemEvent:
    required:
    - "id"
    - "action"
    - "state"
    type: "object"
    properties:
      id:
        description: "Identifier of the line item (generally it is a sequence number\
          \ 01, 02, 03, ...)"
        type: "string"
      action:
        $ref: "#/definitions/ProductActionType"
      state:
        $ref: "#/definitions/ProductOrderItemStateType"
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      product:
        $ref: "#/definitions/ProductEvent"
      '@type':
        description: "Type of productOrder"
        type: "string"
      '@schemaLocation':
        description: "Target a description file of productOrder extension"
        type: "string"
  ProductEvent:
    description: "Product structure used for notification"
    type: "object"
    properties:
      id:
        description: "Unique (within the product domain) identifier for the product\
          \ that is generated by the seller when the product is instantiated."
        type: "string"
      buyerProductId:
        description: "Buyer product Id - informative information"
        type: "string"
      productSpecification:
        $ref: "#/definitions/ProductSpecification"
      relatedParty:
        type: "array"
        items:
          $ref: "#/definitions/RelatedParty"
  Event:
    description: "Event class is used to describe information structure used for notification."
    required:
    - "eventId"
    - "eventType"
    - "eventTime"
    - "event"
    type: "object"
    properties:
      eventId:
        type: "string"
      eventType:
        $ref: "#/definitions/ProductOrderEventType"
      eventTime:
        type: "string"
        format: "date-time"
      event:
        $ref: "#/definitions/ProductOrderEvent"
  EventPlus:
    allOf:
    - $ref: "#/definitions/Event"
    - required:
      - "resourcePath"
      - "fieldPath"
      type: "object"
      properties:
        resourcePath:
          type: "string"
        fieldPath:
          type: "array"
          items:
            type: "string"
  Error:
    description: |
      Standard Class used to describe API response error
      Not intended to be use directly only via specialization which defines a code
    type: object
    required:
      - reason
    properties:
      reason:
        type: string
        description: Explanation of the reason for the error which can be shown to a client user.
        maxLength: 255
      message:
        type: string
        description: >-
          Text that provides more details and corrective actions related to the
          error. This can be shown to a client user.
      status:
        type: string
        description: HTTP Error code extension
      referenceError:
        type: string
        format: uri
        description: URI of documentation describing the error.
  Error400:
    description: |-
      Bad Request
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - missingQueryParameter: Missing query-string parameter
              - missingQueryValue: Invalid query-string parameter value
              - invalidQuery: Invalid Query
              - invalidBody: Invalid body
            type: string
            enum:
              - missingQueryParameter
              - missingQueryValue
              - invalidQuery
              - invalidBody
  Error401:
    description: |-
      Unauthorized
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - missingCredentials: Missing credentials
              - invalidCredentials: Invalid OR expired credentials
            type: string
            enum:
             - missingCredentials
             - invalidCredentials
  Error403:
    description: |-
      Forbidden
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - accessDenied: Access denied
              - forbiddenRequester: Forbidden requester
              - tooManyUsers: Too many users
            type: string
            enum:
             - accessDenied
             - forbiddenRequester
             - tooManyUsers
  Error422:
    description: |-
      Unprocessable entity due to business validation problem
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |
              List of supported error codes:
                - missingProperty: the property the Seller has expected is not present in the payload
                - invalidValue: the property has an incorrect value
                - invalidFormat: the property value does not comply to expected value format
                - referenceNotFound: the object referenced by the property cannot be identified in the Seller system
                - unexpectedProperty: additional property, not expected by the Seller has been provided
                - otherIssue: other problem was identified (detailed information provided in a reason)
            type: string
            enum:
              - missingProperty
              - invalidValue
              - invalidFormat
              - referenceNotFound
              - unexpectedProperty
              - otherIssue
          propertyPath:
            type: string
            description: |
              A pointer to a particular property of the payload that caused the validation issue.
              Defined using JsonPath format (https://goessner.net/articles/JsonPath/)
  Error500:
    description: |-
      Internal Server Error
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - internalError: Internal server error
            type: string
            enum:
             - internalError
  Error503:
    description: |-
      Service Unavailable
    allOf:
      - $ref: "#/definitions/Error"
      - type: object 
        required:
          - reason
          - code
        properties:
          code:
            description: |- 
              List of supported error codes:
              - serviceUnavailable: Service Unavailable
            type: string
            enum:
             - serviceUnavailable
