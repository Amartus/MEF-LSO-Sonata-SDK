swagger: "2.0"
info:
  title: Quote Management
  description: |+
    **This specification represents MEF work in progress and is subject to change.** 

    MEF-LSO Sonata Quote API allows to manage quote request & completion management between **Seller** and **Buyer**.

    3 different types of quotes are managed:
    - **Budgetary**: A quote that is provided quickly and with very little analysis such that the Buyer can get an idea of how much the requested Product Offering could cost.  Monthly Recurring Charges and Non-Recurring Charges, if specified, are subject to change. 

    - **Firm – Subject to Feasibility Check**: A quote that is provided to the Buyer based on some, but not a complete, pre-order analysis.  At this stage, there is further analysis that the Seller can (and is willing) to undertake to provide a committed or firm price, but the Sell-er needs more time to complete this or the Seller may request that the Buyer use the Firm – Subject to Feasibility Check Quote to proceed to the Order process. Ordering may be possible based on the Firm – Subject to Feasibility Check Quote with some stipulations as to how cost identified during delivery is addressed. The Monthly Recurring Charges specified in the Quote Response are final.  Non-Recurring Charges specified in the Quote Response are subject to change.

    - **Firm**: A quote provided to the Buyer based on a pre-order analysis. All Monthly Recurring Charges and Non-Recurring Charges specified on a Firm Quote are committed.  A Firm Quote may expire at some date specified by the Seller.  

    Quote API has been designed by MEF basing on TMF 648 v4.0.0
  version: 6.0.0-RC
host: serverRoot
basePath: /mefApi/sonata/quoteManagement/v6/
schemes:
  - https
consumes:
  - application/json;charset=utf-8
produces:
  - application/json;charset=utf-8
tags:
  - name: quote
  - name: quote operations
  - name: events subscription
paths:
  /quote:
    get:
      operationId: listQuote
      summary: List or find Quote objects
      description:
        The Buyer requests a list of Quotes from the Seller based on a set of
        filter criteria (as described in MEF 80).  For each Quote returned, the
        Seller also provides a Quote Identifier that uniquely identifies this
        Quote within the Seller. The order of the elements returned to the Buyer
        is defined by the Seller (e.g. natural order) and does not change
        between the pages.
      produces:
        - application/json;charset=utf-8
      tags:
        - quote
      parameters:
        - name: state
          in: query
          description: >-
            State of the Quote to be retrieved. See `MEFQuoteStateType`
            definition for details
          required: false
          type: string
          enum:
            - accepted
            - approved.answered
            - approved.orderable
            - approved.orderableAlternate
            - cancelled
            - cancelled.insufficientInformationProvided
            - cancelled.unableToProvide
            - inProgress
            - inProgress.draft
            - rejected
            - rejected.expired
            - pending
        - name: "quoteLevel"
          required: false
          in: "query"
          description:
            "Level of the quote - could be budgetary,
            firmSubjectToFeasibilityCheck, firm"
          type: "string"
          enum:
            - budgetary
            - firmSubjectToFeasibilityCheck
            - firm
        - name: "externalId"
          required: false
          in: "query"
          description: "ID given by the consumer and only understandable by him
            (to\
            \ facilitate his searches afterwards)"
          type: "string"
        - name: "projectId"
          required: false
          in: "query"
          description:
            "An identifier that is used to group Quotes that represent a unit of
            functionality that is important to a Buyer. A Project can be used to
            relate multiple Quotes together"
          type: "string"
        - name: "quoteDate.gt"
          required: false
          in: "query"
          description: "Date when the quote was created - greater than"
          type: "string"
          format: "date-time"
        - name: "quoteDate.lt"
          required: false
          in: "query"
          description: "Date when the quote was created - lower than"
          type: "string"
          format: "date-time"
        - name: "requestedQuoteCompletionDate.gt"
          required: false
          in: "query"
          description: "Requested Quote Completion Date - greater than"
          type: "string"
          format: "date-time"
        - name: "requestedQuoteCompletionDate.lt"
          required: false
          in: "query"
          description: "Requested Quote Completion Date - lower than"
          type: "string"
          format: "date-time"
        - name: "expectedQuoteCompletionDate.gt"
          required: false
          in: "query"
          description: "Expected Quote Completion Date - greater than"
          type: "string"
          format: "date-time"
        - name: "expectedQuoteCompletionDate.lt"
          required: false
          in: "query"
          description: "Expected Quote Completion Date - lower than"
          type: "string"
          format: "date-time"
        - name: "effectiveQuoteCompletionDate.gt"
          required: false
          in: "query"
          description:
            "Date when the Quote State was set to one of the Completion States -
            greater than"
          type: "string"
          format: "date-time"
        - name: "effectiveQuoteCompletionDate.lt"
          required: false
          in: "query"
          description:
            "Date when the Quote State was set to one of the Completion States -
            lower than"
          type: "string"
          format: "date-time"
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
             represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
        - name: offset
          description:
            Requested index for start of resources to be provided in response
          required: false
          in: query
          type: integer
        - name: limit
          description: Requested number of resources to be provided in response
          required: false
          in: query
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Throttled:
              type: boolean
              description: >
                Used to indicate that result page was throttled to maximum
                possible size  and there are additional results that can be
                fetched
            X-Result-Count:
              type: integer
              description: The number of records included in the response
            X-Total-Count:
              type: integer
              description: >
                The total number of matching records. E.g. if there are 50
                matching records in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
          schema:
            type: array
            items:
              $ref: "#/definitions/Quote_Find"
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
    post:
      operationId: createQuote
      summary: Send request to perform a quotation
      description: This operation creates a Quote entity.
      tags:
        - quote
      parameters:
        - name: quote
          description: The Quote to be created
          required: true
          schema:
            $ref: "#/definitions/Quote_Create"
          in: body
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
             represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
      responses:
        "201":
          description: Created  (https://tools.ietf.org/html/rfc7231#section-6.3.2)
          schema:
            $ref: "#/definitions/Quote"
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "422":
          description:
            Unprocessable entity due to the business validation problems in the
            Quote or one of the Quote items
          schema:
            type: array
            items:
              $ref: "#/definitions/Error422"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
  "/quote/{id}":
    get:
      operationId: retrieveQuote
      summary: Retrieves a Quote by ID
      description:
        This operation retrieves a Quote entity. Attribute selection is enabled
        for all first level attributes.
      tags:
        - quote
      parameters:
        - name: id
          description: Identifier of the Quote
          required: true
          type: string
          in: path
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
             represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Quote"
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: >-
            Not Found
          schema:
            $ref: "#/definitions/Error404"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
  /cancelQuote:
    post:
      operationId: cancelQuote
      summary: Cancels a Quote
      description: This operation sends a cancellation request.
      tags:
        - quote operations
      parameters:
        - name: cancelQuote
          description: The details of the Quote Operation
          required: true
          schema:
            $ref: "#/definitions/QuoteOperationData"
          in: body
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
             represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/QuoteOperationData"
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "405":
          description: Method not allowed
          schema:
            $ref: "#/definitions/Error405"
        "422":
          description:
            Unprocessable entity due to the business validation problems in the
            Quote or one of the Quote items
          schema:
            type: array
            items:
              $ref: "#/definitions/Error422"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
  /rejectQuote:
    post:
      operationId: rejectQuote
      summary: Rejects a Quote
      description: This operation sends a rejection request.
      tags:
        - quote operations
      parameters:
        - name: rejectQuote
          description: The details of the Quote Operation
          required: true
          schema:
            $ref: "#/definitions/QuoteOperationData"
          in: body
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
             represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/QuoteOperationData"
        "400":
          description: |-
            Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: |-
            Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: |-
            Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "405":
          description: Method not allowed
          schema:
            $ref: "#/definitions/Error405"
        "422":
          description:
            Unprocessable entity due to the business validation problems in the
            Quote or one of the Quote items
          schema:
            type: array
            items:
              $ref: "#/definitions/Error422"
        "500":
          description: |-
            Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
  /hub:
    post:
      operationId: registerListener
      summary: Allows the Buyer to register to Quote state change notifications
      description: >-
        A request initiated by the Buyer to instruct the Seller to send
        notifications of Quote state changes in the event the Seller uses the
        Deferred Response pattern to respond to a Create Quote request.
      tags:
        - events subscription
      parameters:
        - name: data
          schema:
            $ref: "#/definitions/EventSubscriptionInput"
          required: true
          in: body
          description:
            Data containing the callback endpoint to deliver the information
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
             represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
      responses:
        "201":
          description: Subscribed  (https://tools.ietf.org/html/rfc7231#section-6.3.2)
          schema:
            $ref: "#/definitions/EventSubscription"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "405":
          description: Method Not allowed
          schema:
            $ref: "#/definitions/Error405"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
        "501":
          description: |-
            Method not implemented. Used in case Seller is not supporting Notification mechanism
          schema:
            $ref: "#/definitions/Error501"
  "/hub/{id}":
    delete:
      operationId: unregisterListener
      summary: Unregister a listener
      description:
        "Resets the communication endpoint address the service instance must use
        to deliver information about its health state, execution state, failures
        and metrics."
      tags:
        - events subscription
      parameters:
        - name: id
          type: string
          required: true
          in: path
          description: The id of the registered listener
        - name: buyerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the a
            Buyer. MUST be specified in the request only when the requester
            represents more than one Buyer.

            Reference: MEF 79 (Sn 8.8)
        - name: sellerId
          in: query
          type: string
          description: >-
            The unique identifier of the organization that is acting as the
            Seller. MUST be specified in the request only when responding entity
             represents more than one Seller.

            Reference: MEF 79 (Sn 8.8)
      responses:
        "204":
          description: Deleted
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/Error400"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error401"
        "403":
          description: Forbidden
          schema:
            $ref: "#/definitions/Error403"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Error404"
        "405":
          description: Method not allowed
          schema:
            $ref: "#/definitions/Error405"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Error500"
        "501":
          description: |-
            Method not implemented. Used in case Seller is not supporting Notification mechanism
          schema:
            $ref: "#/definitions/Error501"
definitions:
  QuoteOperationData:
    type: object
    description: |-
      Request for operation on an existing Quote (cancellation or rejection)
    required:
      - quoteId
    properties:
      quoteId:
        type: string
        description:
          "Unique (within the Seller quoting domain) identifier for the quote,
          as attributed by the Seller."
      reason:
        type: string
        description:
          Allows the Buyer to specify a reason for the Cancel or Reject Quote
          Request.
  Duration:
    type: object
    required:
      - amount
      - units
    description: A Duration in a given unit of time e.g. 3 hours, or 5 days.
    properties:
      amount:
        type: integer
        description: "Duration (number of seconds, minutes, hours, etc.)"
      units:
        description: "Time unit type"
        $ref: "#/definitions/TimeUnit"
  FieldedAddress:
    allOf:
      - $ref: "#/definitions/RelatedPlaceRefOrValue"
      - type: object
        required:
          - city
          - country
          - streetName
        properties:
          city:
            type: string
            description: The city that the address is in
          country:
            type: string
            description: Country that the address is in
          geographicSubAddress:
            $ref: "#/definitions/GeographicSubAddress"
          locality:
            type: string
            description: The locality that the address is in
          postcode:
            type: string
            description: >-
              Descriptor for a postal delivery area, used to speed and simplify
              the delivery of mail (also known as zip code)
          postcodeExtension:
            type: string
            description: >-
              An extension of a postal code. E.g. the part following the dash in
              an american urban property address
          stateOrProvince:
            type: string
            description: The State or Province that the address is in
          streetName:
            type: string
            description: Name of the street or other street type
          streetNr:
            type: string
            description: >-
              Number identifying a specific property on a public street. It may
              be combined with streetNrLast for ranged addresses.
          streetNrLast:
            type: string
            description:
              Last number in a range of street numbers allocated to a property
          streetNrLastSuffix:
            type: string
            description: Last street number suffix for a ranged address
          streetNrSuffix:
            type: string
            description: The first street number suffix
          streetSuffix:
            type: string
            description: A modifier denoting a relative direction
          streetType:
            type: string
            description: >-
              Alley, avenue, boulevard, brae, crescent, drive, highway, lane,
              terrace, parade, place, tarn, way, wharf
    description: >-
      A type of Address that has a discrete field and value for each type of
      boundary or identifier down to the lowest level of detail. For example
      "street number" is one field, "street name" is another field, etc.
  FormattedAddress:
    allOf:
      - $ref: "#/definitions/RelatedPlaceRefOrValue"
      - type: object
        required:
          - addrLine1
          - city
          - country
        properties:
          addrLine1:
            type: string
            description: The first address line in a formatted address
          addrLine2:
            type: string
            description: The second address line in a formatted address
          city:
            type: string
            description: The city that the address is in
          country:
            type: string
            description: Country that the address is in
          locality:
            type: string
            description: >-
              An area of defined or undefined boundaries within a local
              authority or other legislatively defined area, usually rural or
              semi rural in nature
          postcode:
            type: string
            description: >-
              Descriptor for a postal delivery area, used to speed and simplify
              the delivery of mail (also known as ZIP code)
          postcodeExtension:
            type: string
            description: >-
              An extension of a postal code. E.g. the part following the dash in
              an US urban property address
          stateOrProvince:
            type: string
            description: The State or Province that the address is in
    description: >-
      A type of Address that has discrete fields for each type of boundary or
      identifier with the exception of street and more specific location
      details, which are combined into a maximum of two strings based on local
      postal addressing conventions.
  GeographicAddressIdentifier:
    allOf:
      - $ref: "#/definitions/RelatedPlaceRefOrValue"
      - type: object
        required:
          - externalReferenceId
          - externalReferenceType
        properties:
          externalReferenceId:
            type: string
            description: >-
              A reference to an address by id
          externalReferenceType:
            type: string
            description: >-
              The type of the reference. For North American providers this would
              normally be CLLI (Common Language Location Identifier) code
    description: >-
      A unique identifier controlled by a generally accepted independent
      administrative authority that specifies a fixed geographical location. 

      Reference: MEF 79 (Sn 8.9.4)
  GeographicAddressRef:
    allOf:
      - $ref: "#/definitions/RelatedPlaceRefOrValue"
      - type: object
        required:
          - id
        properties:
          href:
            type: string
            description: >
              Hyperlink to the referenced place Hyperlink MAY be used by the
              Seller in responses Hyperlink MUST be ignored by the Seller in
              case it is provided by the Buyer in a request
          id:
            type: string
            description: >-
              Identifier of the referenced Geographic Address. This identifier
              is assigned during a successful address validation request (Sonata
              Geographic Address Management API)
    description: >
      A reference to a Geographic Address resource available through Sonata
      Address Validation API.
  GeographicSiteRef:
    allOf:
      - $ref: "#/definitions/RelatedPlaceRefOrValue"
      - type: object
        required:
          - id
        properties:
          href:
            type: string
            description: >
              Hyperlink to the referenced place Hyperlink MAY be used by the
              Seller in responses Hyperlink MUST be ignored by the Seller in
              case it is provided by the Buyer in a request
          id:
            type: string
            description: >-
              Identifier of the referenced Geographic Site.
    description: >
      A reference to a Geographic Site resource available through Sonata Service
      Site API
  GeographicSubAddress:
    type: object
    properties:
      buildingName:
        type: string
        description: >
          Allows for identification of places that require building name  as
          part of addressing information
      id:
        type: string
        description: Unique Identifier of the subAddress
      levelNumber:
        type: string
        description:
          "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
      levelType:
        type: string
        description: Describes level types within a building
      privateStreetName:
        type: string
        description: >-
          "Private streets internal to a property (e.g. a university) may have
          internal names that are not recorded by the land title office
      privateStreetNumber:
        type: string
        description: Private streets numbers internal to a private street
      subUnit:
        type: array
        description: >-
          Representation of a MEFSubUnit It is used for describing subunit
          within a subaddress  e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
          WHARF.
        items:
          $ref: "#/definitions/MEFSubUnit"
    description: >-
      Additional fields used to specify an address, as detailed as possible.
  MEFBuyerQuoteLevel:
    type: string
    description:
      "An indication of whether the Buyer’s Quote Request is for a Budgetary or
      Firm Quote Level. Set by the Buyer. Buyer Requested Quote Level contains
      the possible values and may be set by the Buyer on the Request. All Quote
      Items in a Quote have the same Quote Level. "
    enum:
      - budgetary
      - firm
  MEFChargePeriod:
    type: string
    description: Used for a recurring charge to indicate period.
    enum:
      - hour
      - day
      - week
      - month
      - year
  MEFGeographicPoint:
    allOf:
      - $ref: "#/definitions/RelatedPlaceRefOrValue"
      - type: object
        required:
          - spatialRef
          - "x"
          - "y"
        properties:
          spatialRef:
            type: string
            description:
              The spatial reference system used to determine the coordinates
          "x":
            type: string
            description:
              The latitude expressed in the format specified by the `spacialRef`
          "y":
            type: string
            description:
              The longitude expressed in the format specified by the
              `spacialRef`
          "z":
            type: string
            description:
              The elevation expressed in the format specified by the
              `spacialRef`
    description: >+
      A MEFGeographicPoint defines a geographic point through coordinates.
      Reference: MEF 79 (Sn 8.9.5)
  MEFItemTerm:
    type: object
    description:
      The terms of the Quote Item. Used to describe a term (also known as
      commitment) for a Quote Item. Each Quote Item in a Quote Request could
      have a different Requested Quote Item Term. The Buyer specifies the
      longest term that they would accept. The Buyer may be willing to accept a
      shorter term. If the Seller responds with a term longer than the Buyer’s
      request, it is treated as an alternate response.
    properties:
      duration:
        $ref: "#/definitions/Duration"
      rollInterval:
        $ref: "#/definitions/Duration"
      endOfTermAction:
        $ref: "#/definitions/MEFEndOfTermAction"
  MEFPriceType:
    type: string
    description:
      Indicates if the price is for recurring or non-recurring charges.
    enum:
      - recurring
      - nonRecurring
      - usageBased
  MEFProductConfiguration:
    type: object
    discriminator: "@type"
    required:
      - "@type"
    description: MEF Product payload
    properties:
      "@schemaLocation":
        type: string
        format: uri
        description:
          A URI to the JSON schema file that defines the Product Specification
          for the product that is the subject of the Request.
      "@type":
        type: string
        description:
          The name of the type, defined in the JSON schema specified above, for
          the product that is the subject of the Request. The named type must be
          a subclass of MEFProductConfiguration.
  MEFProductRefOrValueForQuote:
    type: object
    properties:
      href:
        type: string
        description: >+
          Hyperlink to the product in Seller's inventory that is the quotation's
          subject. Hyperlink MAY be used when providing response by the Seller
          Hyperlink MUST be ignored by the Seller in case it is provided by the
          Buyer in a request
      id:
        type: string
        description: >
          The unique identifier of an in-service Product that is the quotation's
          subject.  This field MUST be populated if an item `action` is either
          `modify` or `delete`.  This field MUST NOT be populated if an item
          `action` is `add`.
      place:
        type: array
        items:
          $ref: "#/definitions/RelatedPlaceRefOrValue"
      productConfiguration:
        description: >-
          MEFProductConfiguration is used to get MEF specific product/service
          payload. the @type is used a a discriminator.
        $ref: "#/definitions/MEFProductConfiguration"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
        description:
          A particular Product Offering defines the technical and commercial
          attributes and behaviors of a Product.
      productRelationship:
        type: array
        items:
          $ref: "#/definitions/ProductRelationship"
    description: >-
      One or more services sold to a Buyer by a Seller.  A particular Product
      Offering defines the technical and commercial attributes and behaviors of
      a Product.
  MEFProductActionType:
    type: string
    description: |
      Action to be performed on the Product that the Quote Item refers to. This corresponds to the Order Item Action when an associated product is ordered.
      | ProductActionType | MEF 80     |
      |------------------ | ---------- |
      | add               | INSTALL    |
      | modify            | CHANGE     |
      | delete            | DISCONNECT |
    enum:
      - add
      - modify
      - delete
  MEFQuoteItemStateType:
    type: string
    description: |
      Possible values for the status of a QuoteItem.
      Following mapping has been used between `MEFQuoteItemStateType` and MEF 80:

      | QuoteItemStateType                       | MEF 80                            |
      | ---------------------------------------- | --------------------------------- |
      | approved.answered                        | ANSWERED                          |
      | approved.orderable                       | ORDERABLE                         |
      | approved.orderableAlternate              | ORDERABLE_ALTERNATE               |
      | inProgress                               | IN_PROGRESS                       |
      | inProgress.draft                         | IN_PROGRESS_DRAFT                 |
      | rejected                                 | ABANDONED                         |
      | rejected.insufficientInformationProvided | INSUFFICIENT_INFORMATION_PROVIDED |
      | rejected.unableToProvide                 | UNABLE_TO_PROVIDE                 |
      | pending                                  |                                   |

    enum:
      - approved.answered
      - approved.orderable
      - approved.orderableAlternate
      - inProgress
      - inProgress.draft
      - rejected
      - rejected.unableToProvide
      - rejected.insufficientInformationProvided
      - pending
  MEFQuoteItem_Common:
    type: object
    description:
      A quote items describe an action to be performed on a productOffering or a
      product in order to get pricing elements and condition.
    required:
      - id
      - action
    properties:
      id:
        type: string
        description:
          "Identifier of the quote item (generally it is a sequence number 01,
          02, 03, ...)"
      dealReference:
        type: string
        description:
          A pre-agreed pricing modifier reference that the Seller is offering to
          the Buyer which will impact the price.
      action:
        $ref: "#/definitions/MEFProductActionType"
      agreement:
        type: string
        description:
          Name of the agreement. The name is unique between the Buyer and the
          Seller.
      note:
        type: array
        items:
          $ref: "#/definitions/Note"
        description: Free form text associated with the quote item
      product:
        $ref: "#/definitions/MEFProductRefOrValueForQuote"
        description:
          A particular Product Offering defines the technical and commercial
          attributes and behaviors of a Product.
      productOfferingQualificationItem:
        $ref: "#/definitions/ProductOfferingQualificationItemRef"
        description: A reference to a previously done POQ with item specified
      quoteItemRelationship:
        type: array
        items:
          $ref: "#/definitions/QuoteItemRelationship"
        description: A relationship from item within a quote
      relatedContactInformation:
        type: array
        description: |-
          Party playing a role for this qualification. If `instantSyncQuote=false` 
          then 'Quote Item Technical Contact' must be specified ('role=quoteItemTechnicalContact').
          If `instantSyncQuote=false` and the Quote Item requires a location, 
          the Buyer MUST provide the Quote Item Location Contact Information `role=quoteItemLocationContact`.
        items:
          $ref: "#/definitions/RelatedContactInformation"
      requestedQuoteItemInstallationInterval:
        $ref: "#/definitions/Duration"
        description:
          The installation interval that the Buyer desires the Quote Item to be
          installed after receipt of the order.
      requestedQuoteItemTerm:
        $ref: "#/definitions/MEFItemTerm"
        description:
          "The terms of the Quote Item. Used to describe a term (also known as
          commitment) for a Quote Item. Each Quote Item in a Quote Request could
          have a different Requested Quote Item Term. The Buyer specifies the
          longest term that they would accept. The Buyer may be willing to
          accept a shorter term. If the Seller responds with a term longer than
          the Buyer’s request, it is treated as an alternate response."
  MEFQuoteItem_Create:
    allOf:
      - $ref: "#/definitions/MEFQuoteItem_Common"
      - type: object
        description:
          A quote items describe an action to be performed on a productOffering
          or a product in order to get pricing elements and condition. The
          modeling pattern introduces the `Common` supertype to aggregate
          attributes that are common to both `QuoteItem` and `QuoteItem_Create`.
          It this case the Create type has a subset of attributes of the
          response type and does not introduce any new, thus the `Create` type
          has an empty definition.
  MEFQuoteStateType:
    type: string
    description: |
      Possible values for the status of a Quote.
      Following mapping has been used between `MEFQuoteStateType` and MEF 80:

       | QuoteStateType                            | MEF 80                            |
       | ----------------------------------------- | --------------------------------- |
       | accepted                                  | ACCEPTED                          |
       | approved.answered                         | ANSWERED                          |
       | approved.orderable                        | ORDERABLE                         |
       | approved.orderableAlternate               | ORDERABLE_ALTERNATE               |
       | cancelled                                 | CANCELLED                         |
       | cancelled.insufficientInformationProvided | INSUFFICIENT_INFORMATION_PROVIDED |
       | cancelled.unableToProvide                 | UNABLE_TO_PROVIDE                 |
       | inProgress                                | IN_PROGRESS                       |
       | inProgress.draft                          | IN_PROGRESS_DRAFT                 |
       | rejected                                  | REJECTED                          |
       | rejected.expired                          | EXPIRED                           |
       | pending                                   |                                   |

    enum:
      - accepted
      - approved.answered
      - approved.orderable
      - approved.orderableAlternate
      - cancelled
      - cancelled.insufficientInformationProvided
      - cancelled.unableToProvide
      - inProgress
      - inProgress.draft
      - rejected
      - rejected.expired
      - pending
  MEFEndOfTermAction:
    type: string
    description: The action the Seller will take once the term expires.
    enum:
      - roll
      - autoDisconnect
      - autoRenew
  MEFSellerQuoteLevel:
    type: string
    description:
      An indication of whether the Seller’s Quote Response is Budgetary, Firm –
      Subject to Feasibility Check, or Firm. The Seller Quote Level is provided
      by the Seller when responding to a Quote request.  This represents the
      lowest Quote Item Level of all Quote Items included in the Quote.
    enum:
      - budgetary
      - firmSubjectToFeasibilityCheck
      - firm
  MEFQuoteStateChange:
    type: object
    required:
      - changeDate
      - state
    properties:
      changeDate:
        type: string
        format: date-time
        description: The date on when the state was reached
      changeReason:
        type: string
        description: Additional comment related to state change
      state:
        description: Reached state
        $ref: "#/definitions/MEFQuoteStateType"
    description: >-
      Holds the reached state, reasons and associated date the Quote state
      changed, populated by the Seller.
  MEFSubUnit:
    type: object
    required:
      - subUnitNumber
      - subUnitType
    properties:
      subUnitNumber:
        type: string
        description: >-
          The discriminator used for the subunit, often just a simple number but
          may also be a range.
      subUnitType:
        type: string
        description: >-
          The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
          WHARF.
    description: Allows for sub unit identification
  Money:
    type: object
    description: A base / value business entity used to represent money
    properties:
      unit:
        type: string
        description:
          Currency (ISO4217 norm uses 3 letters to define the currency)
      value:
        type: number
        format: float
        description: A positive floating point number
  Note:
    type: object
    description: Extra information about a given entity
    required:
      - text
      - id
      - date
      - author
      - source
    properties:
      id:
        type: string
        description:
          "Identifier of the note within its containing entity (may or may not
          be globally unique, depending on provider implementation)"
      author:
        type: string
        description: Author of the note
      date:
        type: string
        format: date-time
        description: Date of the note
      source:
        $ref: "#/definitions/NoteSourceType"
      text:
        type: string
        description: Text of the note
  NoteSourceType:
    type: string
    description: Indicates if the note is from Buyer or Seller.
    enum:
      - buyer
      - seller
  Price:
    type: object
    description:
      "Provides all amounts (tax included, duty free, tax rate), used currency
      and percentage to apply for Price Alteration."
    properties:
      taxRate:
        type: number
        format: float
        description:
          "Price Tax Rate. Unit: [%]. E.g. value 16 stand for 16% tax."
      dutyFreeAmount:
        $ref: "#/definitions/Money"
        description: All taxes excluded amount (expressed in the given currency)
      taxIncludedAmount:
        $ref: "#/definitions/Money"
        description: All taxes included amount (expressed in the given currency)
  ProductOfferingQualificationItemRef:
    type: object
    description:
      It's a productOfferingQualification item that has been executed
      previously.
    required:
      - id
      - productOfferingQualificationId
    properties:
      id:
        type: string
        description: Id of an item of a product offering qualification
      alternateProductProposalId:
        type: string
        description:
          A unique identifier for this Alternate Product Proposal assigned by
          the Seller.
      productOfferingQualificationHref:
        type: string
        description: Reference of the related entity.
      productOfferingQualificationId:
        type: string
        description: Unique identifier of a related entity.
  ProductOfferingRef:
    type: object
    required:
      - id
    description: >+
      A reference to a Product Offering offered by the Seller to the Buyer.  A
      Product Offering contains the commercial and technical details of a
      Product sold by a particular Seller. A Product Offering defines all of the
      commercial terms and, through association with a particular Product
      Specification, defines all the technical attributes and behaviors of the
      Product. A Product Offering may constrain the allowable set of
      configurable technical attributes and/or behaviors specified in the
      associated Product Specification.

      The id of the Product offering is assigned by the Seller. The Buyer and
      the Seller exchange information about offerings' ids during the onboarding
      process.
    properties:
      id:
        type: string
        description: unique identifier
      href:
        type: string
        description:
          Hyperlink to a Product Offering in Sellers catalog. In case Seller is
          not providing a catalog capabilities this field is not used. The
          catalog API definition is provided by the Seller to Buyer during
          onboarding Hyperlink MAY be used when providing response by the Seller
          Hyperlink MUST be ignored by the Seller in case it is provided by the
          Buyer in a requestHyperlink reference
  ProductRelationship:
    type: object
    description:
      "Linked products to the one instantiate, such as [bundled] if the product
      is a bundle and you want to describe the bundled products inside this
      bundle; [reliesOn] if the product needs another already owned product to
      rely on (e.g. an option on an already owned mobile access product)
      [targets] or [isTargeted] (depending on the way of expressing the link)
      for any other kind of links that may be useful"
    required:
      - id
      - relationshipType
    properties:
      id:
        type: string
        description: unique identifier of a Product that is referenced.
      groupingKey:
        type: string
        description: >
          Related Product Identifier list is constructed from product ids having
          the same groupingKey and relationshipType.
      href:
        type: string
        description:
          Hyperlink to the product in Seller's inventory that is referenced
          Hyperlink MAY be used when providing response by the Seller Hyperlink
          MUST be ignored by the Seller in case it is provided by the Buyer in a
          request
      relationshipType:
        type: string
        description: >
          One of the relationship types defined in the Product Specification.
          For example: "relies on"
  Quote:
    allOf:
      - $ref: "#/definitions/Quote_Common"
      - type: object
        description:
          "Quote can b e used to negotiate service and product acquisition or
          modification between a customer and a service provider. Quote contains
          a list of quote items, a reference to customer, a list of
          productOfferings, and attached prices and conditions."
        required:
          - quoteItem
          - id
        properties:
          id:
            type: string
            description: Unique identifier - attributed by quoting system
          href:
            type: string
            description: >+
              Hyperlink representing this resource Hyperlink MAY be used when
              providing response by the Seller
          effectiveQuoteCompletionDate:
            type: string
            format: date-time
            description:
              Date when the Quote State was set to one of the Completion States.
          expectedQuoteCompletionDate:
            type: string
            format: date-time
            description:
              This is the date provided by the Seller to indicate expected Quote
              completion date
          quoteDate:
            type: string
            format: date-time
            description: Date and time when the quote was created
          quoteItem:
            type: array
            items:
              $ref: "#/definitions/QuoteItem"
            minItems: 1
            description:
              An item of the quote - it is used to describe an operation on a
              product to be quoted
          quoteLevel:
            $ref: "#/definitions/MEFSellerQuoteLevel"
            description:
              "An indication of whether the Seller’s Quote Response is
              Budgetary, Firm – Subject to Feasibility Check, or Firm. The
              Seller Quote Level is provided by the Seller when responding to a
              Quote request.  This represents the lowest Quote Item Level of all
              Quote Items included in the Quote."
          state:
            $ref: "#/definitions/MEFQuoteStateType"
          stateChange:
            type: array
            items:
              $ref: "#/definitions/MEFQuoteStateChange"
            description: State change for the Quote
          validFor:
            $ref: "#/definitions/TimePeriod"
            description: Quote validity period
  Quote_Common:
    type: object
    description:
      Quote can be used to negotiate service and product acquisition or
      modification between a customer and a service provider. Quote contains a
      list of quote items, a reference to customer, a list of productOfferings,
      and attached prices and conditions.
    required:
      - instantSyncQuote
      - buyerRequestedQuoteLevel
    properties:
      description:
        type: string
        description: Description of the quote
      externalId:
        type: string
        description:
          ID given by the consumer and only understandable by him (to facilitate
          his searches afterward)
      instantSyncQuote:
        type: boolean
        description:
          "If this flag is set to TRUE, Buyer requests an immediate quote to be
          provided in the response to the creation of a quote. If TRUE, the
          Requested Quote Completion Date is ignored."
      projectId:
        type: string
        description:
          An identifier that is used to group Quotes that represent a unit of
          functionality that is important to a Buyer. A Project can be used to
          relate multiple Quotes together.
      requestedQuoteCompletionDate:
        type: string
        format: date-time
        description:
          This is requested date - from quote requester - to get a complete
          response for this quote
      buyerRequestedQuoteLevel:
        $ref: "#/definitions/MEFBuyerQuoteLevel"
        description:
          "An indication of whether the Buyer’s Quote Request is Budgetary or
          Firm."
      note:
        type: array
        items:
          $ref: "#/definitions/Note"
        description: Free form text associated with the quote
      relatedContactInformation:
        type: array
        description: |-
          Party playing a role for this qualification. If `instantSyncQuote=false` 
          then the Buyer MUST specify Buyer Contact Information ('role=buyerContactInformation') 
          and the Seller MUST specify Seller Contact Information ('role=sellerContactInformation')
        items:
          $ref: "#/definitions/RelatedContactInformation"
  Quote_Create:
    allOf:
      - $ref: "#/definitions/Quote_Common"
      - type: object
        description: |-
          Quote can be used to negotiate service and product acquisition or modification between a customer and a service provider. Quote contains a list of quote items, a reference to customer, a list of productOfferings, and attached prices and conditions.
          Skipped properties: href,quoteDate,state,effectiveQuoteCompletionDate,expectedQuoteCompletionDate,validFor,quoteLevel,stateChange
        required:
          - quoteItem
        properties:
          quoteItem:
            type: array
            items:
              $ref: "#/definitions/MEFQuoteItem_Create"
            minItems: 1
            description:
              An item of the quote - it is used to describe an operation on a
              product to be quoted
  Quote_Find:
    type: object
    description: >+
      This class represent a single list item for the response of `listQuote`
      operation.
    required:
      - id,
      - state
    properties:
      id:
        type: string
        description: Unique identifier - attributed by quoting system
      effectiveQuoteCompletionDate:
        type: string
        format: date-time
        description:
          Date when the Quote State was set to one of the Completion States
      expectedQuoteCompletionDate:
        type: string
        format: date-time
        description:
          This is the date provided by the Seller to indicate expected Quote
          completion date
      externalId:
        type: string
        description:
          ID given by the consumer and only understandable by him (to facilitate
          his searches afterward)
      projectId:
        type: string
        description:
          An identifier that is used to group Quotes that represent a unit of
          functionality that is important to a Buyer. A Project can be used to
          relate multiple Quotes together.
      quoteDate:
        type: string
        format: date-time
        description: Date and time when the quote was created
      requestedQuoteCompletionDate:
        type: string
        format: date-time
        description:
          This is requested date - from quote requester - to get a complete
          response for this quote
      quoteLevel:
        $ref: "#/definitions/MEFSellerQuoteLevel"
        description:
          "An indication of whether the Seller’s Quote Response is Budgetary,
          Firm – Subject to Feasibility Check, or Firm. The Seller Quote Level
          is provided by the Seller when responding to a Quote request.  This
          represents the lowest Quote Item Level of all Quote Items included in
          the Quote."
      state:
        $ref: "#/definitions/MEFQuoteStateType"
      stateChange:
        type: array
        items:
          $ref: "#/definitions/MEFQuoteStateChange"
        description: State change for the Quote
  QuoteItem:
    allOf:
      - $ref: "#/definitions/MEFQuoteItem_Common"
      - type: object
        description:
          A quote items describe an action to be performed on a productOffering
          or a product in order to get pricing elements and condition.
        properties:
          subjectToFeasibilityCheck:
            type: boolean
            description:
              For a Firm Quote Level indicates if the pricing requires a
              Feasibility Check. The Seller indicates if the Quote Item requires
              a Feasibility Check.  This is not used for a Budgetary Quote
              Level.
          quoteItemInstallationInterval:
            $ref: "#/definitions/Duration"
            description:
              Quote Item Installation Interval that the Seller can commit to.
          quoteItemPrice:
            type: array
            items:
              $ref: "#/definitions/QuotePrice"
            description: Price for this quote item
          quoteItemTerm:
            $ref: "#/definitions/MEFItemTerm"
            description: Quote Item Term that the Seller can commit to.
          state:
            $ref: "#/definitions/MEFQuoteItemStateType"
          terminationError:
            type: array
            items:
              $ref: "#/definitions/TerminationError"
            description:
              "When the Seller cannot process the Quote Item Request, the Seller
              returns a text-based list of reasons here. If the
              `QuoteItem.state=rejected.insufficientInformationProvided`, the
              Seller MUST specify the `terminationError` attribute."
  QuoteItemRelationship:
    type: object
    required:
      - id
      - relationshipType
    description:
      Used to describe relationship between quote items. These relationship
      could have an impact on pricing and conditions
    properties:
      id:
        type: string
        description: ID of the related quote item (must be in the same quote)
      relationshipType:
        type: string
        description:
          "Relationship type as relies on, bundles, etc... MEF: Specifies the
          nature of relationship to the related Quote Items.  The nature of
          required relationships vary for Products of different types.  For
          example, a UNI or ENNI Product may not have any relationships, but an
          Access E-Line may have two mandatory relationships (related to the UNI
          on one end and the ENNI on the other).  More complex Products such as
          multipoint IP or Firewall Products may have more complex
          relationships.  As a result, the allowed and mandatory Relationship
          Nature values are defined in the Product Specification."
  QuotePrice:
    type: object
    description: Description of price and discount awarded
    properties:
      description:
        type: string
        description: Description of the quote/quote item price
      name:
        type: string
        description: Name of the quote /quote item price
      unitOfMeasure:
        type: string
        description:
          "Unit of Measure if price depending on it (Gb, SMS volume, etc..) MEF:
          if Quote Item Price Type = USAGE_BASED."
      price:
        $ref: "#/definitions/Price"
      priceType:
        $ref: "#/definitions/MEFPriceType"
      recurringChargePeriod:
        $ref: "#/definitions/MEFChargePeriod"
  RelatedContactInformation:
    type: object
    required:
      - emailAddress
      - name
      - number
      - role
    properties:
      emailAddress:
        type: string
        description: Email address
      name:
        type: string
        description: Name of the contact
      number:
        type: string
        description: Phone number
      numberExtension:
        type: string
        description: Phone number extension
      organization:
        type: string
        description: The organization or company that the contact belongs to
      role:
        type: string
        description: >-
          A role the party plays in a given context.
      postalAddress:
        $ref: "#/definitions/FieldedAddress"
        description:
          "Identifies the postal address of the person or office to be
          contacted."
    description: >-
      Contact data for a person or organization that is involved in a given
      context. It is specified by the Seller (e.g. Seller Contact Information)
      or by the Buyer. 

      Reference: MEF 80 (Sn 8.1.9)
  RelatedPlaceRefOrValue:
    type: object
    required:
      - "@type"
      - role
    discriminator: "@type"
    properties:
      "@schemaLocation":
        type: string
        format: uri
        description: >-
          A URI to a JSON-Schema file that defines additional attributes and
          relationships. May be used to define additional related place types.
          Usage of this attribute must be agreed between Buyer and Seller.
      "@type":
        type: string
        description: >
          This field is used as discriminator and is used between different
          place representations. This type might discriminate for additional
          related place as defined in '@schemaLocation'.
      role:
        type: string
        description: Role of this place
    description:
      Place defines the places where the products' quotation must be done.
  TerminationError:
    type: object
    description: This indicates an error that caused an Item to be terminated.
    properties:
      value:
        type: string
        description:
          "Text to describe the termination error - for example: incomplete
          information provided"
  TimePeriod:
    type: object
    description:
      "A period of time, either as a deadline (endDateTime only) a startDateTime
      only, or both"
    properties:
      endDateTime:
        example: "1985-04-12T23:20:50.52Z"
        type: string
        format: date-time
        description: "End of the time period, using IETC-RFC-3339 format"
      startDateTime:
        example: "1985-04-12T23:20:50.52Z"
        type: string
        format: date-time
        description:
          "Start of the time period, using IETC-RFC-3339 format. If you define a
          start, you must also define an end"
  TimeUnit:
    type: string
    description: |
      Represents a unit of time.
      Reference: MEF 79 (Sn 8.4.3.1/8.4.3.2)
    enum:
      - calendarMonths
      - calendarDays
      - calendarHours
      - calendarMinutes
      - businessDays
      - businessHours
      - businessMinutes
  EventSubscription:
    type: object
    description:
      Sets the communication endpoint address the service instance must use to
      deliver notification information
    required:
      - id
      - callback
    properties:
      id:
        type: string
        description:
          An identifier of the event subscription assigned by the Seller when
          resource is created.
      callback:
        type: string
        description:
          This callback value MUST be set to *host* property from Buyer Quote
          Notification API This property is appended with an appropriate base
          path and notification resource path to construct an URL to which
          notification is sent.
      query:
        type: string
        description: >-
          This attribute is used to define notification registration
          constraints.
  EventSubscriptionInput:
    type: object
    description:
      Sets the communication endpoint address the service instance must use to
      deliver notification information
    required:
      - callback
    properties:
      callback:
        type: string
        description: >-
          This attribute is the callback url where event will be sent when
          occurs, for instance an url http://yourdomain/listener/api/v1/event
      query:
        type: string
        description: >-
          This attribute is used to define notification registration
          constraints.
  Error:
    type: object
    required:
      - reason
    properties:
      message:
        type: string
        description: >-
          Text that provide mode details and corrective actions related to the
          error. This can be shown to a client user.
      reason:
        type: string
        description: >-
          Text that explains the reason for error. This can be shown to a client
          user.
        maxLength: 255
      referenceError:
        type: string
        format: uri
        description: url pointing to documentation describing the error
    description: >
      Standard Class used to describe API response error

      Not intended to be use directly only via specialization which defines a
      code
  Error400:
    allOf:
      - $ref: "#/definitions/Error"
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - missingQueryParameter: The URI is missing a required query-string parameter
              - missingQueryValue: The URI is missing a required query-string parameter value
              - invalidQuery: The query section of the URI is invalid.
              - invalidBody: The request has an invalid body
            enum:
              - missingQueryParameter
              - missingQueryValue
              - invalidQuery
              - invalidBody
    description:
      Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
  Error401:
    allOf:
      - $ref: "#/definitions/Error"
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - missingCredentials: No credentials provided.
              - invalidCredentials: Provided credentials are invalid or expired
            enum:
              - missingCredentials
              - invalidCredentials
    description:
      Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
  Error403:
    allOf:
      - $ref: "#/definitions/Error"
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              This code indicates that the server understood
              the request but refuses to authorize it because
              of one of the following error codes:
              - accessDenied: Access denied
              - forbiddenRequester: Forbidden requester
              - tooManyUsers: Too many users
            enum:
              - accessDenied
              - forbiddenRequester
              - tooManyUsers
    description:
      Forbidden. This code indicates that the server understood the request but
      refuses to authorize it.
      (https://tools.ietf.org/html/rfc7231#section-6.5.3)
  Error404:
    allOf:
      - $ref: "#/definitions/Error"
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              The following error code:
              - notFound: A current representation for the target resource not found
            enum:
              - notFound
    description:
      Resource for the requested path not found.
      (https://tools.ietf.org/html/rfc7231#section-6.5.4)
  Error405:
    description: |-
      Method not allowed. This should be used to notify that the method is known by the origin server but not supported.
    allOf:
      - $ref: "#/definitions/Error"
      - type: object
        required:
          - code
        properties:
          code:
            description: |-
              The following error code::
              - methodNotAllowed: Requested method is not supported
            type: string
            enum:
              - methodNotAllowed
  Error422:
    allOf:
      - $ref: "#/definitions/Error"
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |
              One of the following error codes:
                - missingProperty: The property the Seller has expected is not present in the payload
                - invalidValue: The property has an incorrect value
                - invalidFormat: The property value does not comply with the expected value format
                - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
                - unexpectedProperty: Additional property, not expected by the Seller has been provided
                - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
                - otherIssue: Other problem was identified (detailed information provided in a reason)
            enum:
              - missingProperty
              - invalidValue
              - invalidFormat
              - referenceNotFound
              - unexpectedProperty
              - tooManyRecords
              - otherIssue
          propertyPath:
            type: string
            description: >
              A pointer to a particular property of the payload that caused the
              validation issue. It is highly recommended that this property
              should be used.

              Defined using JavaScript Object Notation (JSON) Pointer
              (https://tools.ietf.org/html/rfc6901).
    description:
      Unprocessable entity due to a business validation problem.
      (https://tools.ietf.org/html/rfc4918#section-11.2)
  Error500:
    allOf:
      - $ref: "#/definitions/Error"
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.
            enum:
              - internalError
    description:
      Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)
  Error501:
    allOf:
      - $ref: "#/definitions/Error"
      - type: object
        required:
          - code
        properties:
          code:
            type: string
            description: |-
              One of the following error codes:
              - notImplemented: Method not supported by the server
            enum:
              - notImplemented
    description:
      Not Implemented. (https://tools.ietf.org/html/rfc7231#section-6.6.2)
