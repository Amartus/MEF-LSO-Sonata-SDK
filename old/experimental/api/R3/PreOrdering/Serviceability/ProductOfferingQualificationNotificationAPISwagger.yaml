swagger: "2.0"
info:
  description: "This is not the ProductOfferingQualification API but the API to manage\
    \ notification for ProductOfferingQualification . This API must be deployed on\
    \ notification subscriber side (buyer side / listener)."
  version: "1.0.0"
  title: "API ProductOfferingQualificationNotification"
host: "serverRoot"
basePath: "/mef/productOfferingQualificationNotification/v1/"
schemes:
- "https"
produces:
- "application/json;charset=utf-8"
tags:
- name: "Notification"
  description: "Notification class is used to describe structure used for product\
    \ offering qualification notification (product offering qualification created,\
    \ product offering qualification state change, product offering qualification\
    \ attribute value change)"
paths:
  /notification/productOfferingQualificationCreationNotification:
    post:
      tags:
      - "Notification"
      consumes:
      - "application/json;charset=utf-8"
      operationId: "notificationProductOfferingQualificationCreationNotification"
      summary: "Product Offering Qualification Creation Notification structure"
      description: "Product Offering Qualification Creation Notification structure\
        \ definition\n\nSpecific business errors for current operation will be encapsulated\
        \ in\n\nHTTP Response 422 Unprocessable entity\n"
      deprecated: false
      parameters:
      - name: "productOfferingQualificationCreationNotification"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/Event"
      responses:
        204:
          description: "Success"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /notification/productOfferingQualificationStateChangeNotification:
    post:
      tags:
      - "Notification"
      consumes:
      - "application/json;charset=utf-8"
      operationId: "notificationProductOfferingQualificationStateChangeNotification"
      summary: "Product Offering Qualification State Change Notification structure"
      description: "Product Offering Qualification State Change Notification structure\
        \ definition\n\nSpecific business errors for current operation will be encapsulated\
        \ in\n\nHTTP Response 422 Unprocessable entity\n"
      deprecated: false
      parameters:
      - name: "productOfferingQualificationStateChangeNotification"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/Event"
      responses:
        204:
          description: "Success"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /notification/productOfferingQualificationAttributeChangeNotification:
    post:
      tags:
      - "Notification"
      consumes:
      - "application/json;charset=utf-8"
      operationId: "notificationProductOfferingQualificationAttributeChangeNotification"
      summary: "Product Offering Qualification Attribute Change Notification structure"
      description: "Product Offering Qualification Attribute Change Notification structure\
        \ defintion\n\nSpecific business errors for current operation will be encapsulated\
        \ in\n\nHTTP Response 422 Unprocessable entity\n"
      deprecated: false
      parameters:
      - name: "productOfferingQualificationAttributeChangeNotification"
        required: true
        in: "body"
        description: ""
        schema:
          type: "array"
          items:
            $ref: "#/definitions/EventPlus"
      responses:
        204:
          description: "Success"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
definitions:
  serviceabilityColor:
    description: "A color that indicates confidence to service the request."
    type: "string"
    enum:
    - "GREEN"
    - "RED"
    - "YELLOW"
  qualificationState:
    description: "These values represent the valid states through which the product\
      \ offering qualification can transition"
    type: "string"
    enum:
    - "UNDER_REVIEW"
    - "SUBMITTED"
    - "ACCEPTED"
    - "COMPLETED"
    - "REJECTED"
    - "CANCELLED"
  PoqEventType:
    description: "Indicates the type of product offering qualification event."
    type: "string"
    enum:
    - "POQ_OBJECT_CREATION"
    - "POQ_STATE_CHANGE"
    - "POQ_ATTRIBUTE_VALUE_CHANGE"
  ErrorRepresentation:
    description: ""
    required:
    - "code"
    - "message"
    type: "object"
    properties:
      code:
        description: ""
        type: "integer"
        format: "int32"
      reason:
        description: ""
        type: "string"
      message:
        description: ""
        type: "string"
      status:
        description: ""
        type: "string"
      referenceError:
        description: ""
        type: "string"
      '@type':
        description: ""
        type: "string"
      '@schemaLocation':
        description: ""
        type: "string"
  Event:
    description: "Event class is used to describe information structure used for notification."
    required:
    - "eventId"
    - "eventType"
    - "eventTime"
    - "event"
    type: "object"
    properties:
      eventId:
        description: ""
        type: "string"
      eventType:
        $ref: "#/definitions/PoqEventType"
      eventTime:
        description: ""
        type: "string"
        format: "date-time"
      event:
        $ref: "#/definitions/PoqEvent"
  PoqItemEvent:
    description: "The product offering qualification item event structure that gets\
      \ passed in the \"event\" of a notification."
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "Id of this POQ item"
        type: "string"
      state:
        $ref: "#/definitions/qualificationState"
      serviceabilityConfidence:
        $ref: "#/definitions/serviceabilityColor"
      desiredActivationDate:
        description: "Desired Activation Date for the product requested in this item"
        type: "string"
        format: "date"
      estimatedResponseDate:
        description: "When the color is Yellow (meaning 'We'll get back to you'),\
          \ this date indicates when the Seller plans to provide a more complete response."
        type: "string"
        format: "date"
  PoqEvent:
    description: "The product offering qualification passed as the \"event\" in a\
      \ notification."
    required:
    - "productOfferingQualificationItem"
    type: "object"
    properties:
      id:
        description: "The Serviceability Request's unique identifier."
        type: "string"
      href:
        description: ""
        type: "string"
      state:
        $ref: "#/definitions/qualificationState"
      expirationDate:
        description: ""
        type: "string"
        format: "date"
      expectedResponseDate:
        description: "Corresponds to desiredResponseDate - The date a response for\
          \ the service request is desired."
        type: "string"
        format: "date"
      productOfferingQualificationItem:
        type: "array"
        items:
          $ref: "#/definitions/PoqItemEvent"
  EventPlus:
    description: "Event class is used to describe information structure used for notification."
    allOf:
    - $ref: "#/definitions/Event"
    - required:
      - "resourcePath"
      - "fieldPath"
      type: "object"
      properties:
        resourcePath:
          description: ""
          type: "string"
        fieldPath:
          description: ""
          type: "array"
          items:
            type: "string"
  Notification:
    description: "Notification class is used to describe structure used for product\
      \ offering qualification notification (product offering qualification created,\
      \ product offering qualification state change, product offering qualification\
      \ attribute value change)"
    type: "object"
    properties: {}
