swagger: "2.0"
info:
  description: "The scope of this API  introduces the following capabilities to the\
    \ API:\n•\tInstall order: request for new product\n•\tChange Order: change an\
    \ existing Product\n•\tDisconnect Order:  disconnect an existing Product \n•\t\
    Cancel Order: cancellation of an inflight-order\n•\tSupport for Order Notifications\n\
    \n The buyer could also retrieve a single, or set, of Product Orders based upon\
    \ a specified filter.  \n\nFollowing feature will be introduced in next release:\n\
    •\tAmend Order: modification of an inflight-order"
  version: "1.0.0"
  title: "API ProductOrderManagement"
  x-logo:
    url: "/redoc/logo.png"
    backgroundColor: "#FFFFFF"
host: "serverRoot"
basePath: "/api/mef/productOrderManagement/v1/"
schemes:
- "https"
produces:
- "application/json;charset=utf-8"
tags:
- name: "ProductOrder"
  description: "Product Order resource"
- name: "Hub"
  description: "Hub resource to manage notification subscription"
paths:
  /productOrder:
    post:
      tags:
      - "ProductOrder"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "productOrderCreate"
      summary: "productOrderCreate"
      description: "This operation is used to create an order. Depending on the order\
        \ activity, one can \"INSTALL\", \"CHANGE\", or \"DISCONNECT\" an associated\
        \ product.\n\nSpecific business errors for current operation will be encapsulated\
        \ in\n\nHTTP Response 422 Unprocessable entity\n\n - 100: Missing order item\
        \ (minimum 1)\n   At least one order item must be provided\n - 101: Missing\
        \ Buyer at order level\n   One and only one related partyRole with a \"Buyer\"\
        \ role should be provided at the product order level.\n - 114: Missing Seller\
        \ at order level\n   One and only one related partyRole with a \"Seller\"\
        \ role should be provided at the product order level.\n - 102: A relatedParty\
        \ is at the wrong level\n   The partyRole provided is not managed - MEF allows\
        \ to have\n\"Buyer\", \"Seller\", \"Billing Contact\", \"Order Contact\",\
        \ \"Implementation Contact\", \"Technical Contact\" roles at product order\
        \ level\n\"UNI Site Contact\", \"UNI Alt Site Contact\", \"ENNI Site Contact\"\
        , \"ENNI Alt Site Contact\" at product order item level.\n - 103: Missing\
        \ Buyer Contact at order level\n   One and only one related partyRole with\
        \ a \"Order Contact\" role should be provided at the product order level.\n\
        Buyer Contact name & Telephone number must be provided.\n - 104: Missing Buyer\
        \ Implementation Contact at order level\n   One and only one related partyRole\
        \ with a \"Implementation Contact\" role should be provided at the product\
        \ order level.\nImplementation Contact name & Telephone number must be provided.\n\
        \ - 105: Missing Buyer Technical contact at order level\n   One and only one\
        \ related partyRole with a \"Technical Contact\" role should be provided at\
        \ the product order level.\nTechnical Contact name, Telephone number and email\
        \ address must be provided.\n - 106: Addres information must matches place\
        \ type\n   If place type is 'formatted address' : addrLine1, postCode, country\
        \ must be there, addrLine2, locality, postCodeExtension, stateOrProvince \
        \ could be there, other address information must not be filled\nIf place type\
        \ is 'fielded address' : streetName, streetType, postCode must be there, streetNr,\
        \ streetNrSuffix, streetNrLast, streetSuffix, locality, postCodeExtension,\
        \ country, stateOrProvince could be there, other address information must\
        \ not be filled\n - 107: postCode extension needs postcode\n   A postCode\
        \ extension must not be present whithout a postCode\n - 108: If orderItemAction\
        \ is not INSTALL, orderItem.product.id is mandatory\n   \n - 109: If orderActivity\
        \ is set to INSTALL, all orderItemAction must be INSTALL\n   \n - 110: Refered\
        \ quote is not in a 'ordereable' state (Quote is in CANCELLED, UNABLE TO PROVIDE,\
        \ REJECTED or EXPIRED state\n   \n - 111: Billing Account information must\
        \ not be both at order level and order item level\n   \n - 112: PricingMethod,\
        \ pricing Reference & pricing term attributes  must not be both at order level\
        \ and order item level\n   \n - 113: Referred Serviceability request is expired\n\
        \   "
      deprecated: false
      parameters:
      - name: "ProductOrder"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/CreateProductOrder"
      responses:
        201:
          description: "Success"
          schema:
            $ref: "#/definitions/ProductOrder"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\nSpecific encapsulated\
            \ business errors for current operation\n\n - 100: Missing order item\
            \ (minimum 1)\n   At least one order item must be provided\n - 101: Missing\
            \ Buyer at order level\n   One and only one related partyRole with a \"\
            Buyer\" role should be provided at the product order level.\n - 114: Missing\
            \ Seller at order level\n   One and only one related partyRole with a\
            \ \"Seller\" role should be provided at the product order level.\n - 102:\
            \ A relatedParty is at the wrong level\n   The partyRole provided is not\
            \ managed - MEF allows to have\n\"Buyer\", \"Seller\", \"Billing Contact\"\
            , \"Order Contact\", \"Implementation Contact\", \"Technical Contact\"\
            \ roles at product order level\n\"UNI Site Contact\", \"UNI Alt Site Contact\"\
            , \"ENNI Site Contact\", \"ENNI Alt Site Contact\" at product order item\
            \ level.\n - 103: Missing Buyer Contact at order level\n   One and only\
            \ one related partyRole with a \"Order Contact\" role should be provided\
            \ at the product order level.\nBuyer Contact name & Telephone number must\
            \ be provided.\n - 104: Missing Buyer Implementation Contact at order\
            \ level\n   One and only one related partyRole with a \"Implementation\
            \ Contact\" role should be provided at the product order level.\nImplementation\
            \ Contact name & Telephone number must be provided.\n - 105: Missing Buyer\
            \ Technical contact at order level\n   One and only one related partyRole\
            \ with a \"Technical Contact\" role should be provided at the product\
            \ order level.\nTechnical Contact name, Telephone number and email address\
            \ must be provided.\n - 106: Addres information must matches place type\n\
            \   If place type is 'formatted address' : addrLine1, postCode, country\
            \ must be there, addrLine2, locality, postCodeExtension, stateOrProvince\
            \  could be there, other address information must not be filled\nIf place\
            \ type is 'fielded address' : streetName, streetType, postCode must be\
            \ there, streetNr, streetNrSuffix, streetNrLast, streetSuffix, locality,\
            \ postCodeExtension, country, stateOrProvince could be there, other address\
            \ information must not be filled\n - 107: postCode extension needs postcode\n\
            \   A postCode extension must not be present whithout a postCode\n - 108:\
            \ If orderItemAction is not INSTALL, orderItem.product.id is mandatory\n\
            \   \n - 109: If orderActivity is set to INSTALL, all orderItemAction\
            \ must be INSTALL\n   \n - 110: Refered quote is not in a 'ordereable'\
            \ state (Quote is in CANCELLED, UNABLE TO PROVIDE, REJECTED or EXPIRED\
            \ state\n   \n - 111: Billing Account information must not be both at\
            \ order level and order item level\n   \n - 112: PricingMethod, pricing\
            \ Reference & pricing term attributes  must not be both at order level\
            \ and order item level\n   \n - 113: Referred Serviceability request is\
            \ expired\n   "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
    get:
      tags:
      - "ProductOrder"
      produces:
      - "application/json;charset=utf-8"
      operationId: "productOrderFind"
      summary: "productOrderFind (list)"
      description: "This operation is used to retrieve one or more product orders\
        \ based upon filter criteria specified on input.\n\nSpecific business errors\
        \ for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable\
        \ entity\n\n - 100: Too many records retrieved - please restrict requested\
        \ parameter value(s)\n   "
      deprecated: false
      parameters:
      - name: "buyerId"
        required: false
        in: "query"
        description: "A Party Role played by an Individual or an Organization that\
          \ buys products and services from a Seller. Specifically, the ID of the\
          \ Service Provider (Buyer) organization placing the order."
        type: "string"
      - name: "sellerId"
        required: false
        in: "query"
        description: "A Party Role played by an organization that provides products\
          \ and services to a Buyer.\nSpecifically, the ID of the Partner/Access Provider\
          \ (Seller) organization receiving the order."
        type: "string"
      - name: "state"
        required: false
        in: "query"
        description: "The status of the order"
        type: "string"
      - name: "buyerRequestedDate.gt"
        required: false
        in: "query"
        description: "Buyer requested date greater than"
        type: "string"
        format: "date-time"
      - name: "buyerRequestedDate.lt"
        required: false
        in: "query"
        description: "Buyer requested date lesser than"
        type: "string"
        format: "date-time"
      - name: "orderDate.gt"
        required: false
        in: "query"
        description: "Date when the order was created greater than"
        type: "string"
        format: "date-time"
      - name: "orderDate.lt"
        required: false
        in: "query"
        description: "Date when the order was created lesser than"
        type: "string"
        format: "date-time"
      - name: "requestedStartDate.gt"
        required: false
        in: "query"
        description: "Buyer requested start date greater than"
        type: "string"
        format: "date-time"
      - name: "requestedStartDate.lt"
        required: false
        in: "query"
        description: "Buyer requested start date lesser than"
        type: "string"
        format: "date-time"
      - name: "requestedCompletionDate.gt"
        required: false
        in: "query"
        description: "Identifies the Buyer's desired due date (requested delivery\
          \ date) greater than"
        type: "string"
        format: "date-time"
      - name: "requestedCompletionDate.lt"
        required: false
        in: "query"
        description: "Identifies the Buyer's desired due date (requested delivery\
          \ date) lesser than"
        type: "string"
        format: "date-time"
      - name: "expectedCompletionDate.gt"
        required: false
        in: "query"
        description: "Seller planned completion date greater than"
        type: "string"
        format: "date-time"
      - name: "expectedCompletionDate.lt"
        required: false
        in: "query"
        description: "Seller planned completion date lesser than"
        type: "string"
        format: "date-time"
      - name: "completionDate.gt"
        required: false
        in: "query"
        description: "Effective completion date greater than"
        type: "string"
        format: "date-time"
      - name: "completionDate.lt"
        required: false
        in: "query"
        description: "Effective completion date lesser than"
        type: "string"
        format: "date-time"
      - name: "orderCancellationDate.gt"
        required: false
        in: "query"
        description: "order cancellation date greater than"
        type: "string"
        format: "date-time"
      - name: "orderCancellationDate.lt"
        required: false
        in: "query"
        description: "order cancellation date lesser than"
        type: "string"
        format: "date-time"
      - name: "siteName"
        required: false
        in: "query"
        description: "A name by which the site is known."
        type: "string"
      - name: "siteCompanyName"
        required: false
        in: "query"
        description: "The name of the company that is located at the service location.\
          \  This may be different from the name of the Buyer that ordered services\
          \ at that site."
        type: "string"
      - name: "siteCustomerName"
        required: false
        in: "query"
        description: "The customer name at a site where the service is being delivered"
        type: "string"
      - name: "projectId"
        required: false
        in: "query"
        description: "An identifier that is used to group Orders that represent a\
          \ unit of functionality that is important to a Buyer."
        type: "string"
      - name: "externalId"
        required: false
        in: "query"
        description: "A number that uniquely identifies an order within the Buyer's\
          \ enterprise."
        type: "string"
      - name: "offset"
        required: false
        in: "query"
        description: "Requested index for start of resources to be provided in response\
          \ requested by client"
        type: "string"
      - name: "limit"
        required: false
        in: "query"
        description: "Requested number of resources to be provided in response requested\
          \ by client"
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductOrderSummary"
          headers:
            X-Total-Count:
              description: "The total number of matching resources"
              type: "integer"
              format: "int32"
            X-Result-Count:
              description: "The number of resources retrieved in the response"
              type: "integer"
              format: "int32"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\nSpecific encapsulated\
            \ business errors for current operation\n\n - 100: Too many records retrieved\
            \ - please restrict requested parameter value(s)\n   "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOrder/{productOrderId}:
    get:
      tags:
      - "ProductOrder"
      produces:
      - "application/json;charset=utf-8"
      operationId: "productOrderGet"
      summary: "productOrderGet (by id)"
      description: "This operation is used to retrieve a single product order based\
        \ upon a specified product order id.\n\nSpecific business errors for current\
        \ operation will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n"
      deprecated: false
      parameters:
      - name: "productOrderId"
        in: "path"
        required: true
        type: "string"
        description: ""
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ProductOrder"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOrder/cancel:
    post:
      tags:
      - "ProductOrder"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "productOrderCancel"
      summary: "productOrderCancel"
      description: "Request to cancel an order submitted by the buyer\nSeller answer\
        \ with order state (could be CANCELLED, ASSESSING_CANCELLATION or previous\
        \ order state if seller did not accept cancellation request).\n\nSpecific\
        \ business errors for current operation will be encapsulated in\n\nHTTP Response\
        \ 422 Unprocessable entity\n\n - 100: externalId must be provided\n   \n -\
        \ 101: externalId does not match productOrderId\n   \n - 102: version does\
        \ not match\n   "
      deprecated: false
      parameters:
      - name: "CancelOrder"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/CancelOrderRequest"
      responses:
        201:
          description: "Success"
          schema:
            $ref: "#/definitions/CancelOrderResponse"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\nSpecific encapsulated\
            \ business errors for current operation\n\n - 100: externalId must be\
            \ provided\n   \n - 101: externalId does not match productOrderId\n  \
            \ \n - 102: version does not match\n   "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /hub:
    post:
      tags:
      - "Hub"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "hubCreate"
      summary: "create Hub"
      description: "Structure used to create a hub (to subscribe to notification)\n\
        \nSpecific business errors for current operation will be encapsulated in\n\
        \nHTTP Response 422 Unprocessable entity\n"
      deprecated: false
      parameters:
      - name: "Hub"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/HubInput"
      responses:
        201:
          description: "Success"
          schema:
            $ref: "#/definitions/Hub"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
    get:
      tags:
      - "Hub"
      produces:
      - "application/json;charset=utf-8"
      operationId: "hubFind"
      summary: "find Hub"
      description: "Find Hub\n\nSpecific business errors for current operation will\
        \ be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n"
      deprecated: false
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Hub"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /hub/{hubId}:
    delete:
      tags:
      - "Hub"
      operationId: "hubDelete"
      summary: "Delete Hub"
      description: "Delete Hub\n\nSpecific business errors for current operation will\
        \ be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n"
      deprecated: false
      parameters:
      - name: "hubId"
        in: "path"
        required: true
        type: "string"
        description: ""
      responses:
        204:
          description: "Success"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
definitions:
  OrderItemAction:
    description: "An enumeration of valid order item actions"
    type: "string"
    enum:
    - "INSTALL"
    - "CHANGE"
    - "DISCONNECT"
    - "NO_CHANGE"
  OrderStatus:
    description: "An enumeration of valid order statuses"
    type: "string"
    enum:
    - "ACKNOWLEDGED"
    - "REJECTED"
    - "IN_PROGRESS"
    - "PENDING"
    - "HELD"
    - "ASSESSING_CANCELLATION"
    - "PENDING_CANCELLATION"
    - "CANCELLED"
    - "CONFIGURED"
    - "CONFIRMED"
    - "JEOPARDY"
    - "FAILED"
    - "PARTIAL"
    - "COMPLETED"
  RelationshipType:
    description: "Indicates the type of relationship between products."
    type: "string"
    enum:
    - "RELIES_ON"
    - "BUNDLED"
    - "COMES_FROM"
  OrderActivity:
    description: "The type of order as defined by the business."
    type: "string"
    enum:
    - "INSTALL"
    - "CHANGE"
    - "DISCONNECT"
  DesiredOrderResponses:
    description: "The kind of responses that the buyer expects to receive from the\
      \ seller."
    type: "string"
    enum:
    - "CONFIRMATION_AND_ENGINEERING_DESIGN"
    - "CONFIRMATION_ONLY"
    - "NONE"
  PricingMethod:
    description: "An enumeration of valid pricing methods for ordered items"
    type: "string"
    enum:
    - "TARIFF"
    - "CONTRACT"
    - "INDIVIDUAL_CASE_BASIS"
    - "OTHER"
  OrderItemStatus:
    description: "An enumeration of valid order item statuses."
    type: "string"
    enum:
    - "ACKNOWLEDGED"
    - "REJECTED"
    - "IN_PROGRESS"
    - "PENDING"
    - "HELD"
    - "ASSESSING_CANCELLATION"
    - "PENDING_CANCELLATION"
    - "CANCELLED"
    - "CONFIGURED"
    - "FAILED"
    - "COMPLETED"
  Severity:
    description: ""
    type: "string"
    enum:
    - "ERROR"
    - "INFORMATION"
  ErrorRepresentation:
    description: "Class used to describe API response error"
    required:
    - "code"
    - "reason"
    type: "object"
    properties:
      code:
        description: "Application related code (as defined in the API or from a common\
          \ list)"
        type: "integer"
        format: "int32"
      reason:
        description: "Text that explains the reason for error. This can be shown to\
          \ a client user."
        type: "string"
      message:
        description: "Text that provide more details and corrective actions related\
          \ to the error. This can be shown to a client user."
        type: "string"
      status:
        description: "http error code extension like 400-2"
        type: "integer"
        format: "int32"
      referenceError:
        description: "url pointing to documentation describing the error"
        type: "string"
      '@type':
        description: "The class type of a REST resource."
        type: "string"
      '@schemaLocation':
        description: "it provides a link to the schema describing a REST resource."
        type: "string"
  BillingAccountRef:
    description: "An arrangement that a customer has with an enterprise that provides\
      \ products to the customer."
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "Identifies the buyer's billing account to which the recurring\
          \ and non-recurring charges for this order item will be billed.\nIf the\
          \ value 'NEW' is provided it means that buyer request a new BAN."
        type: "string"
      billingContact:
        $ref: "#/definitions/Contact"
  Place:
    description: "Place defines the places where the ordered products are sold or\
      \ delivered. The MEF place JSON files descriptor are here: https://github.com/MEF-GIT/MEF-LSO-Sonata-SDK/tree/master/experimental/api/PlaceDescription"
    required:
    - "id"
    - "href"
    - "role"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the place."
        type: "string"
      href:
        description: "Reference link to the place"
        type: "string"
      role:
        description: "The role that the place plays, e.g. \"Billing Address\", \"\
          UNI Site\", or \"ENNI Site\"."
        type: "string"
      '@referredType':
        description: "The type to which the place is referring. This may be \"Site\"\
          , \"FormattedAddress\", \"FieldedAddress\", \"ReferencedAddress\", or \"\
          GeographicLocation"
        type: "string"
      '@schemaLocation':
        description: "The pointer where the place description file could be retrieved"
        type: "string"
  ProductOrder:
    description: "A ProductOrder is a type of business interaction that is used to\
      \ procure a Product based upon a Product Offering."
    required:
    - "id"
    - "href"
    - "externalId"
    - "orderDate"
    - "state"
    - "requestedCompletionDate"
    - "orderActivity"
    - "desiredResponses"
    - "orderVersion"
    - "relatedPartyRole"
    - "orderItem"
    type: "object"
    properties:
      id:
        description: "Unique (within the ordering domain) identifier for the order\
          \ that is generated by the seller when the order is initially accepted."
        type: "string"
      href:
        description: "Hyperlink to access the order"
        type: "string"
      externalId:
        description: "A number that uniquely identifies an order within the buyer's\
          \ enterprise."
        type: "string"
      orderDate:
        description: "Date when the order was created by seller. Format is YYYY-MM-DDThh:mmTZD\
          \ (e.g. 1997-07-16T19:20+01:00)"
        type: "string"
        format: "date-time"
      buyerRequestDate:
        description: "Buyer order creation date. Format is YYYY-MM-DDThh:mmTZD (e.g.\
          \ 1997-07-16T19:20+01:00)"
        type: "string"
        format: "date-time"
      state:
        $ref: "#/definitions/OrderStatus"
      requestedStartDate:
        description: "The buyer's requested date that order processing should start.\
          \ Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)."
        type: "string"
        format: "date-time"
      requestedCompletionDate:
        description: "Identifies the buyer's desired due date (requested delivery\
          \ date). Cannot be requested on cancelled orders.  Format is YYYY-MM-DDThh:mmTZD\
          \ (e.g. 1997-07-16T19:20+01:00)."
        type: "string"
        format: "date-time"
      expectedCompletionDate:
        description: "Expected delivery date amended by the provider"
        type: "string"
        format: "date-time"
      completionDate:
        description: "The date the order is completed. Format is YYYY-MM-DDThh:mmTZD\
          \ (e.g. 1997-07-16T19:20+01:00)"
        type: "string"
        format: "date-time"
      orderCancellationDate:
        description: "Identifies the date the Seller canceled the Order"
        type: "string"
        format: "date-time"
      expeditePriority:
        description: "Indicates that expedited treatment is requested and any charges\
          \ generated in provisioning this request (e.g., additional engineering charges\
          \ or labor charges if applicable) will be accepted."
        type: "boolean"
      priority:
        description: "An integer that specifies that expedited treatment is to be\
          \ provided in a specific priority.\nThis field will be ignored if the Expedite/Priority\
          \ Indicator is False.\nThe valid values and the business/operational rules\
          \ for this field will be defined by the Seller as part of the contracting\
          \ or on-boarding process."
        type: "integer"
        format: "int32"
      orderActivity:
        $ref: "#/definitions/OrderActivity"
      desiredResponses:
        $ref: "#/definitions/DesiredOrderResponses"
      orderVersion:
        description: "The version number that the Buyer uses to refer to this particular\
          \ version of the order"
        type: "string"
        default: "1"
      projectId:
        description: "An identifier that is used to group Orders that represent a\
          \ unit of functionality that is important to a Buyer.  A Project can be\
          \ used to relate multiple Orders together."
        type: "string"
      tspRestorationPriority:
        description: "Within the United States, indicates the provisioning and restoration\
          \ priority as defined under the TSP Service Vendor Handbook, The valid values\
          \ are defined in ATIS OBF document: ATIS-0404001"
        type: "string"
      relatedBuyerPON:
        description: "Related Buyer Purchase Order Number (RPON)"
        type: "string"
      pricingMethod:
        $ref: "#/definitions/PricingMethod"
      pricingReference:
        description: "The value associated with the Pricing Method selected (e.g.\
          \ a contract or tariff id)."
        type: "string"
      pricingTerm:
        description: "The length of the contract in months."
        type: "integer"
        format: "int32"
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      relatedPartyRole:
        type: "array"
        items:
          $ref: "#/definitions/PartyRole"
      note:
        type: "array"
        items:
          $ref: "#/definitions/Note"
      orderItem:
        type: "array"
        items:
          $ref: "#/definitions/OrderItem"
      orderMessage:
        type: "array"
        items:
          $ref: "#/definitions/OrderMessage"
      '@type':
        description: "Technical attribute to extend the API"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend the API"
        type: "string"
      '@baseType':
        description: "Technical attribute to extend the API"
        type: "string"
  Note:
    description: "Free form text to clarify or explain the order."
    required:
    - "text"
    - "date"
    - "author"
    type: "object"
    properties:
      text:
        description: "The text of the note"
        type: "string"
      date:
        description: "The date of the note. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)."
        type: "string"
        format: "date-time"
      author:
        description: "The author of the note"
        type: "string"
  OrderItem:
    description: "An enumeration of the entities that are part of this order expressed\
      \ in terms of a Product Offering or a Product (for a change order)."
    required:
    - "id"
    - "action"
    - "state"
    type: "object"
    properties:
      id:
        description: "Identifier of the line item (generally it is a sequence number\
          \ 01, 02, 03, ...)"
        type: "string"
      action:
        $ref: "#/definitions/OrderItemAction"
      state:
        $ref: "#/definitions/OrderItemStatus"
      pricingMethod:
        $ref: "#/definitions/PricingMethod"
      pricingReference:
        description: "The value associated with the Pricing Method selected (e.g.\
          \ a contract or tariff id)"
        type: "string"
      pricingTerm:
        description: "The length of the contract in months"
        type: "integer"
        format: "int32"
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      relatedPartyRole:
        type: "array"
        items:
          $ref: "#/definitions/PartyRole"
      product:
        $ref: "#/definitions/Product"
      orderItemRelationship:
        type: "array"
        items:
          $ref: "#/definitions/OrderItemRelationShip"
      qualification:
        $ref: "#/definitions/QualificationRef"
      quote:
        $ref: "#/definitions/QuoteRef"
      '@type':
        description: "Type of productOrder"
        type: "string"
      '@schemaLocation':
        description: "Target a description file of productOrder extension"
        type: "string"
  ProductOfferingRef:
    description: "A product offering defines the commercial terms under which a product\
      \ specification may be instantiated."
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "A unique product offering identifier. This identifier is provided\
          \ by the seller and communicated to the buyer"
        type: "string"
  Product:
    description: "A Product is an instance of a ProductOffering or a ProductSpecification\
      \ procured by a Customer."
    type: "object"
    properties:
      id:
        description: "Unique (within the product domain) identifier for the product\
          \ that is generated by the seller when the product is instantiated."
        type: "string"
      href:
        description: ""
        type: "string"
      buyerProductId:
        description: "Buyer product Id - informative information"
        type: "string"
      productSpecification:
        $ref: "#/definitions/ProductSpecification"
      place:
        type: "array"
        items:
          $ref: "#/definitions/Place"
      productRelationship:
        type: "array"
        items:
          $ref: "#/definitions/ProductRelationship"
  OrderItemRelationShip:
    description: "This class allows the ability to associate one order item to another\
      \ order item."
    required:
    - "type"
    - "id"
    type: "object"
    properties:
      type:
        $ref: "#/definitions/RelationshipType"
      id:
        description: "The id of the targeted order item by the relationship"
        type: "string"
      productOrderId:
        description: "Id of another product order if this relationship is between\
          \ two distinct orders."
        type: "string"
  ProductRelationship:
    description: "Indicates a relationship between products."
    required:
    - "type"
    - "product"
    type: "object"
    properties:
      type:
        $ref: "#/definitions/RelationshipType"
      product:
        $ref: "#/definitions/Product"
  Hub:
    description: "This resource is used to manage notification subscription."
    required:
    - "id"
    - "query"
    - "callback"
    type: "object"
    properties:
      id:
        description: "id of the Hub"
        type: "string"
      query:
        description: "attribute selection & search criteria"
        type: "string"
      callback:
        description: "callback urn, for instance an url http://yourdomain/listener/api/v1/event"
        type: "string"
  QualificationRef:
    description: "Using to refer a serviceability request previously done"
    type: "object"
    properties:
      id:
        description: "id of the qualification previously done for this item"
        type: "string"
      href:
        description: "Hyperlink to the qualification previously done for this item"
        type: "string"
      qualificationItem:
        description: "item id of the qualification previously done for this item"
        type: "string"
      '@referredType':
        description: "Technical attribute to extend the API"
        type: "string"
  RelatedParty:
    description: "An entity or organization that is involved in the product order,\
      \ such as the buyer, the seller, the order contact, etc."
    required:
    - "id"
    - "name"
    - "number"
    type: "object"
    properties:
      id:
        description: "An identifier of the related party. For the \"buyer\" and \"\
          seller\" id, this is a  Carrier ID number provided by local regulatory entity.\
          \  Unique in the local jurisdiction."
        type: "string"
      '@referredType':
        description: "Technical attribute to extend the API"
        type: "string"
      name:
        description: "The name of the related party, e.g. \"Jean Pontus\"."
        type: "string"
      emailAddress:
        description: "The email address of the related party."
        type: "string"
      number:
        description: "The telephone number of the related party."
        type: "string"
      numberExtension:
        description: "Phone number Extension"
        type: "string"
  CreateProductOrder:
    description: "A CreateProductOrder object is provided as input to the product\
      \ order create operation."
    required:
    - "externalId"
    - "buyerRequestDate"
    - "requestedCompletionDate"
    - "orderActivity"
    - "desiredResponse"
    - "orderVersion"
    - "relatedPartyRole"
    - "orderItem"
    type: "object"
    properties:
      externalId:
        description: "Buyer Purchase Order Number: A number that uniquely identifies\
          \ an order within the Buyer's enterprise"
        type: "string"
      buyerRequestDate:
        description: "Date when the order was submitted by the Buyer to the Seller"
        type: "string"
        format: "date-time"
      requestedCompletionDate:
        description: "Identifies the Buyer's desired due date (requested delivery\
          \ date)"
        type: "string"
        format: "date-time"
      requestedStartDate:
        description: "If specified, identifies the Buyer's desired date for order\
          \ processing to start"
        type: "string"
        format: "date-time"
      expeditePriority:
        description: "Indicates that expedited treatment is requested and any charges\
          \ generated in provisioning this request (e.g., additional engineering charges\
          \ or labor charges if applicable) will be accepted."
        type: "boolean"
      priority:
        description: "An integer that specifies that expedited treatment is to be\
          \ provided in a specific priority."
        type: "integer"
        format: "int32"
      orderActivity:
        $ref: "#/definitions/OrderActivity"
      desiredResponse:
        $ref: "#/definitions/DesiredOrderResponses"
      orderVersion:
        description: "Buyer Order Version: The version number that the Buyer uses\
          \ to refer to this particular version of the order."
        type: "string"
      projectId:
        description: "An identifier that is used to group Orders that represent a\
          \ unit of functionality that is important to a Buyer. A Project can be used\
          \ to relate multiple Orders together."
        type: "string"
      tspRestorationPriority:
        description: "Within the United States, indicates the provisioning and restoration\
          \ priority as defined under the TSP Service Vendor Handbook."
        type: "string"
      relatedBuyerPON:
        description: "Related Buyer Purchase Order Number (RPON) - Identifies the\
          \ Buyer Purchase Order Number that is related to this order."
        type: "string"
      '@type':
        description: "Technical attribute to extend API"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend API"
        type: "string"
      '@baseType':
        description: "Technical attribute to extend API"
        type: "string"
      pricingMethod:
        $ref: "#/definitions/PricingMethod"
      pricingReference:
        description: "The value associated with the Pricing Method selected (e.g.\
          \ a contract or tariff id)."
        type: "string"
      pricingTerm:
        description: "The length of the contract in months"
        type: "integer"
        format: "int32"
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      relatedPartyRole:
        type: "array"
        items:
          $ref: "#/definitions/PartyRole"
      note:
        type: "array"
        items:
          $ref: "#/definitions/Note"
      orderItem:
        type: "array"
        items:
          $ref: "#/definitions/CreateOrderItem"
  ProductSpecification:
    description: "A ProductSpec describes the invariant properties (i.e., features)\
      \ that a given set of Products MAY have. These properties provide the information\
      \ needed to plan, construct, allocate, and/or retire the Services and Resources\
      \ from the operator environment needed to deliver the Product"
    type: "object"
    properties:
      id:
        description: "A unique identifier for the product spec, within the product\
          \ spec domain. It is assigned by the seller and communicated to the buyer\
          \ at on-boarding time."
        type: "string"
      describing:
        $ref: "#/definitions/Describing"
  Describing:
    description: "Polymorphic class to describe request product attribute"
    type: "object"
    properties:
      '@type':
        description: "Type of the product"
        type: "string"
      '@schemaLocation':
        description: "URL targeting where product description is stored"
        type: "string"
  CreateOrderItem:
    description: "A CreateOrderItem object is provided as input to the product order\
      \ item create operation."
    required:
    - "id"
    - "action"
    - "productOffering"
    type: "object"
    properties:
      id:
        description: "Identifier of the line item (generally it is a sequence number\
          \ 01, 02, 03, ...)"
        type: "string"
      action:
        $ref: "#/definitions/OrderItemAction"
      pricingMethod:
        $ref: "#/definitions/PricingMethod"
      pricingReference:
        description: "The value associated with the Pricing Method selected (e.g.\
          \ a contract or tariff id)"
        type: "string"
      pricingTerm:
        description: "The length of the contract in months"
        type: "integer"
        format: "int32"
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      relatedPartyRole:
        type: "array"
        items:
          $ref: "#/definitions/PartyRole"
      product:
        $ref: "#/definitions/Product"
      orderItemRelationship:
        type: "array"
        items:
          $ref: "#/definitions/OrderItemRelationShip"
      qualification:
        $ref: "#/definitions/QualificationRef"
      quote:
        $ref: "#/definitions/QuoteRef"
      '@type':
        description: "Technical attribute to extend API"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend API"
        type: "string"
  ProductOrderSummary:
    description: "Structure to define GET without id response. A list of productOrder\
      \ matching request criteria. Provides Product order summary view."
    required:
    - "id"
    - "externalId"
    - "orderDate"
    - "state"
    type: "object"
    properties:
      id:
        description: "ID created on repository side (OM system)\nMEF: Unique identifier\
          \ for the order that is generated by the Seller when the order is initially\
          \ accepted via an API."
        type: "string"
      externalId:
        description: "ID given by the consumer and only understandable by him (to\
          \ facilitate his searches afterwards).\nMEF: Buyer Purchase Order Number"
        type: "string"
      orderDate:
        description: "Date when the order was created"
        type: "string"
        format: "date-time"
      state:
        $ref: "#/definitions/OrderStatus"
  CancelOrderResponse:
    description: "Structure to allow Seller to answer to a cancel order request"
    required:
    - "id"
    - "state"
    type: "object"
    properties:
      id:
        description: "Unique identifier for the order that is generated by the Seller\
          \ when the order is initially accepted via an API."
        type: "string"
      state:
        $ref: "#/definitions/OrderStatus"
      cancellationDeniedReason:
        description: "If seller denied cancellation request he could here provide\
          \ reason for this denial"
        type: "string"
      '@type':
        description: "Technical attribute to extend this class."
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class."
        type: "string"
  CancelOrderRequest:
    description: "Structure to allow buyer to request a order cancellation"
    required:
    - "id"
    - "orderCancellationDate"
    type: "object"
    properties:
      id:
        description: "Unique identifier for the order that is generated by the Seller\
          \ when the order is initially accepted via an API.\nThis id must be provided\
          \ to cancel the order."
        type: "string"
      externalId:
        description: "A number that uniquely identifies an order within the Buyer's\
          \ enterprise.\nMust be provided if provided when the order was initially\
          \ accepted"
        type: "string"
      orderVersion:
        description: "The version number that the Buyer uses to refer to this particular\
          \ version of the order"
        type: "string"
      orderCancellationDate:
        description: "Identifies the date the Seller cancelled the Order"
        type: "string"
        format: "date-time"
      cancellationReason:
        description: "An optional free-form text field for the Seller to provide additional\
          \ information regarding the reason for the cancellation"
        type: "string"
      '@type':
        description: "Technical attribute to extend the API"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend the API"
        type: "string"
  OrderMessage:
    description: "An optional array of messages associated with the Order"
    required:
    - "messageInformation"
    - "severity"
    type: "object"
    properties:
      code:
        description: "The code associated with the Message"
        type: "string"
      field:
        description: "The field/attribute on the Order associated with message"
        type: "string"
      messageInformation:
        description: "A description of the error condition or information to be conveyed\
          \ to the Buyer"
        type: "string"
      severity:
        $ref: "#/definitions/Severity"
      correctionRequired:
        description: "Indicates whether the Buyer must submit an updated Order to\
          \ resolve the Error/Jeopardy condition."
        type: "boolean"
        default: false
  QuoteRef:
    description: "Quote used before this order to define pricing terms"
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "Unique identifier for the Quote that is generated by the Seller\
          \ when the Quote is initially accepted via an API."
        type: "string"
      href:
        description: "Hyperlink to access the quote (using MEF quote API)"
        type: "string"
      quoteItem:
        description: "Identifier of the quote item"
        type: "string"
      '@referredType':
        description: "Technical attribute to extend the API"
        type: "string"
  HubInput:
    description: "This class is used to request a HUB creation - Used in the POST\
      \ operation"
    required:
    - "query"
    - "callback"
    type: "object"
    properties:
      query:
        description: "This attribute is used to define notification type. Example:\
          \ \",\"query\":”eventType = ProductOrderStateChangeNotification”}"
        type: "string"
      callback:
        description: "This attribute is the callback url where event will be sent\
          \ when occurs, for instance an url http://yourdomain/listener/api/v1/event"
        type: "string"
  PartyRole:
    description: "This is a party role assigned for this productOrder or for a product"
    required:
    - "role"
    - "relatedParty"
    type: "object"
    properties:
      id:
        description: "id of the partyRole (not party id)"
        type: "string"
      '@referredType':
        description: "Technical attribute to extend API"
        type: "string"
      role:
        description: "The role that the related party plays. It may be one of the\
          \ following : \"Buyer\", \"Seller\", \"Billing Contact\", \"Order Contact\"\
          , \"Technical Contact\", \"Implementation Contact\", \"UNI Site Contact\"\
          , \"UNI Alt Site Contact\" , \"ENNI Site Contact\", \"ENNI Alt Site Contact\"\
          ."
        type: "string"
      relatedParty:
        $ref: "#/definitions/RelatedParty"
  Contact:
    description: "Contact allow to capture contact information. It is used to capture\
      \ billing account contact information"
    required:
    - "contactName"
    - "phoneNumber"
    - "emailAdress"
    - "streetAdress"
    type: "object"
    properties:
      contactName:
        description: "Identifies the name of the person or office to be contacted\
          \ on billing matters."
        type: "string"
      '@referredType':
        description: "Technical attribut to extend API"
        type: "string"
      phoneNumber:
        description: "Identifies the telephone number (excluding extension) of the\
          \ billing contact"
        type: "string"
      phoneNumberExtension:
        description: "Identifies the telephone number extension of the billing contact"
        type: "string"
      emailAdress:
        description: "Identifies the electronic mail address of the Billing Contact\
          \ when a Buyer profile does not already exist."
        type: "string"
      streetAdress:
        description: "Identifies the address of the person or office to be contacted\
          \ on billing matters."
        type: "string"
