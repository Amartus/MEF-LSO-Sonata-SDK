swagger: "2.0"
info:
  description: "The Geographic Address API provides a standardized client interface\
    \ to an Address management system. It allows looking for worldwide addresses.\n\
    It can also be used to validate geographic address data, to be sure that it corresponds\
    \ to a real address.\n\nGeographicSubAddress is not used in this release"
  version: "1.0.0"
  title: "API GeographicAddressManagement"
  x-logo:
    url: "/redoc/logo.png"
    backgroundColor: "#FFFFFF"
host: "serverRoot"
basePath: "/api/mef/geographicAddressManagement/v1/"
schemes:
- "https"
produces:
- "application/json;charset=utf-8"
tags:
- name: "GeographicAddress"
  description: "Geographic address describe an geographic address with usual parameters\
    \ as street, postcode, county, etc... information"
- name: "GeographicAddressValidation"
  description: "geographic Address Validation - resource used to perform an address\
    \ validation: the requester provide an address description and in the response\
    \ he will get a validation of his address or alternate address proposal or information\
    \ that this address description is not corresponding to server existing address.\
    \ All address here a geographical."
- name: "GeographicSubAddress"
  description: "A geographical SubAddress allows to provide additional information\
    \ to a geographical address (building, floor, wharf, uni etc...).\n\nGeographicSubAddress\
    \ is not used in this release"
paths:
  /geographicAddress/{geographicAddressId}:
    get:
      tags:
      - "GeographicAddress"
      produces:
      - "application/json;charset=utf-8"
      operationId: "geographicAddressGet"
      summary: "retrieveAddress"
      description: "The Buyer would like to retrieve the information for a single\
        \ address based upon an address id. This id should be retrieve either using\
        \ the address completion process (cf. completion), or in another API of the\
        \ ecosystem (serviceability, quote, productOrder, etc.)\n\nSpecific business\
        \ errors for current operation will be encapsulated in\n\nHTTP Response 422\
        \ Unprocessable entity\n"
      deprecated: false
      parameters:
      - name: "geographicAddressId"
        in: "path"
        required: true
        type: "string"
        description: ""
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/GeographicAddress"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /geographicAddressValidation:
    post:
      tags:
      - "GeographicAddressValidation"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "geographicAddressValidationCreate"
      summary: "validateAddress"
      description: "A request initiated by the Buyer to validate an address of a given\
        \ location.\n\nSpecific business errors for current operation will be encapsulated\
        \ in\n\nHTTP Response 422 Unprocessable entity\n"
      deprecated: false
      parameters:
      - name: "addressValidationRequest"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/GeographicAddressValidationRequest"
      responses:
        201:
          description: "Success"
          schema:
            $ref: "#/definitions/GeographicAddressValidation"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
definitions:
  ValidationResult:
    description: "Validation Result"
    type: "string"
    enum:
    - "SUCCESS"
    - "FAILS"
    - "PARTIAL"
  ErrorRepresentation:
    description: "Class used to describe API response error"
    required:
    - "code"
    - "reason"
    type: "object"
    properties:
      code:
        description: "Application related code (as defined in the API or from a common\
          \ list)"
        type: "integer"
        format: "int32"
      reason:
        description: "Text that explains the reason for error. This can be shown to\
          \ a client user."
        type: "string"
      message:
        description: "Text that provide more details and corrective actions related\
          \ to the error. This can be shown to a client user."
        type: "string"
      status:
        description: "http error code extension like 400-2"
        type: "string"
      referenceError:
        description: "url pointing to documentation describing the error"
        type: "string"
      '@type':
        description: "The class type of a REST resource."
        type: "string"
      '@schemaLocation':
        description: "it provides a link to the schema describing a REST resource."
        type: "string"
  GeoPoint:
    description: "A GeoPoint defines a geographic point through coordinates."
    type: "object"
    properties:
      spatialRef:
        description: "Geocoding referential"
        type: "string"
      x:
        description: "x coordinate (usually latitude)"
        type: "string"
      y:
        description: "y coordinate (usually longitude)"
        type: "string"
  GeographicLocation:
    description: "A GeographicLocation allows describing through coordinate(s) a point,\
      \ a line or a space"
    type: "object"
    properties:
      geoPoint:
        type: "array"
        items:
          $ref: "#/definitions/GeoPoint"
  GeographicLocationRef:
    description: "Reference a GeographicLocation with an id and a href"
    type: "object"
    properties:
      id:
        description: "Id of a GeoLocation"
        type: "string"
      href:
        description: "Href pointing to the GeoLocation"
        type: "string"
  GeographicSubAddress:
    description: "It is used for addressing within a property in an urban area (country\
      \ properties are often defined differently). It may refer to a building, a building\
      \ cluster, or a floor of a multistory building."
    type: "object"
    properties:
      id:
        description: "Unique Identifier of the subAddress"
        type: "string"
      subUnitType:
        description: "The type of subunit\ne.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\
          \ UNIT, WHARF."
        type: "string"
      subUnitNumber:
        description: "The discriminator used for the subunit\noften just a simple\
          \ number e.g. FLAT 5, may also be a range"
        type: "string"
      levelType:
        description: "Describes level types within a building"
        type: "string"
      levelNumber:
        description: "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
          \ 2"
        type: "string"
      buildingName:
        description: "Allows for buildings that have well-known names"
        type: "string"
      privateStreetNumber:
        description: "Private streets numbers internal to a private street"
        type: "string"
      privateStreetName:
        description: "Private streets internal to a property (e.g. a university) may\
          \ have internal names that are not recorded by the land title office"
        type: "string"
      '@type':
        description: "Technical attribute to extend this class"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class"
        type: "string"
  GeographicAddress:
    description: "An address is a structured textual way of describing how to find\
      \ a Property in an urban area (country properties are often defined differently)"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the address"
        type: "string"
      streetNr:
        description: "Number identifying a specific property on a public street. It\
          \ may be combined with streetNrLast for ranged addresses"
        type: "string"
      streetNrSuffix:
        description: "The first street number suffix"
        type: "string"
      streetNrLast:
        description: "Last number in a range of street numbers allocated to a property"
        type: "string"
      streetNrLastSuffix:
        description: "Last street number suffix for a ranged address"
        type: "string"
      streetName:
        description: "Name of the street or other street type"
        type: "string"
      streetType:
        description: "Alley, avenue, boulevard, brae, crescent, drive, highway, lane,\
          \ terrace, parade, place, tarn, way, wharf"
        type: "string"
      streetSuffix:
        description: "A modifier denoting a relative direction"
        type: "string"
      postcode:
        description: "Descriptor for a postal delivery area, used to speed and simplify\
          \ the delivery of mail (also known as zipcode)"
        type: "string"
      locality:
        description: "\"An area of defined or undefined boundaries within a local\
          \ authority or other legislatively defined area, usually rural or semi-rural\
          \ in nature.\" [ANZLIC-STREET], or a suburb \"a bounded locality within\
          \ a city, town or shire principally of urban character \" [ANZLICSTREET]."
        type: "string"
      city:
        description: "City that the address is in"
        type: "string"
      stateOrProvince:
        description: "The State or Province that the address is in"
        type: "string"
      country:
        description: "Country that the address is in"
        type: "string"
      geographicLocation:
        $ref: "#/definitions/GeographicLocation"
      addrLine1:
        description: "A formatted address line that contains a non-fielded street\
          \ address."
        type: "string"
      addrLine2:
        description: "A formatted address line that contains a non-fielded street\
          \ address, sub-address (e.g. Suite number), etc."
        type: "string"
      postCodeExtension:
        description: "The four-digit extension on an American postal code, what comes\
          \ after the hyphen when specified."
        type: "string"
      referenceId:
        description: "Id of a reference address"
        type: "string"
      referenceType:
        description: "Type of a reference address"
        type: "string"
      '@type':
        description: "Technical attribute to extend this class"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class"
        type: "string"
  GeographicAddressValidation:
    description: "Resource used to support a request for a validation address : check\
      \ if a geographic address described by values attributes exists)\nIf exist,\
      \ id is provided\nif not, alternate address(es) could be provided"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the Address Validation"
        type: "string"
      status:
        description: "Status of the address validation (inProgress, terminatedWithErrror,\
          \ done)."
        type: "string"
      validationDate:
        description: "Date when the address validation is performed"
        type: "string"
        format: "date-time"
      validationResult:
        $ref: "#/definitions/ValidationResult"
      provideaAlternative:
        description: "Indicator provided by the requester to specify if alternate\
          \ addresses must be provided in case of partial or fail result"
        type: "boolean"
      validAddress:
        $ref: "#/definitions/GeographicAddress"
      alternateAddress:
        type: "array"
        items:
          $ref: "#/definitions/GeographicAddress"
  GeographicAddressValidationRequest:
    description: "Structure used to describe a geographic address validation request"
    type: "object"
    properties:
      provideaAlternative:
        description: "Indicator provided by the requester to specify if alternate\
          \ addresses must be provided in case of partial or fail result"
        type: "boolean"
      validAddress:
        $ref: "#/definitions/GeographicAddressRequestValidation"
  GeographicAddressRequestValidation:
    description: "Structure used to request geographic address validation"
    type: "object"
    properties:
      streetNr:
        description: "Number identifying a specific property on a public street. It\
          \ may be combined with streetNrLast for ranged addresses"
        type: "string"
      streetNrSuffix:
        description: "The first street number suffix"
        type: "string"
      streetNrLast:
        description: "Last number in a range of street numbers allocated to a property"
        type: "string"
      streetNrLastSuffix:
        description: "Last street number suffix for a ranged address"
        type: "string"
      streetName:
        description: "Name of the street or other street type"
        type: "string"
      streetType:
        description: "Alley, avenue, boulevard, brae, crescent, drive, highway, lane,\
          \ terrace, parade, place, tarn, way, wharf"
        type: "string"
      streetSuffix:
        description: "A modifier denoting a relative direction"
        type: "string"
      postcode:
        description: "Descriptor for a postal delivery area, used to speed and simplify\
          \ the delivery of mail (also known as zipcode)"
        type: "string"
      locality:
        description: "\"An area of defined or undefined boundaries within a local\
          \ authority or other legislatively defined area, usually rural or semi-rural\
          \ in nature.\" [ANZLIC-STREET], or a suburb \"a bounded locality within\
          \ a city, town or shire principally of urban character \" [ANZLICSTREET]."
        type: "string"
      city:
        description: "City that the address is in"
        type: "string"
      stateOrProvince:
        description: "The State or Province that the address is in"
        type: "string"
      country:
        description: "Country that the address is in"
        type: "string"
      geographicLocationRef:
        $ref: "#/definitions/GeographicLocationRef"
      geographicLocation:
        $ref: "#/definitions/GeographicLocation"
      geographicSubAddress:
        $ref: "#/definitions/GeographicSubAddress"
