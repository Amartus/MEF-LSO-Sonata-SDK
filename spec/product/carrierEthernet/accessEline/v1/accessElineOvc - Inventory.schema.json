{
"title": "JSON Schema accessElineOvc - Inventory, updated: 2020730 ( #2 )",
"description": "MEF Forum LSO Sonata Product Schema for Access E-Line Ovc - Function: Inventory",
"$schema": "http://json-schema.org/draft-04/schema#",
"$id": "accessElineOvcInventory",
"type": "object",
"properties": {
            "maximumFrameSize": {
                "description": "OVC Maximum Frame Size - MEF 26.2 §12.6",
                "type": "integer", "minimum": 1526 },
            "ceVlanIdPreservation": {
                "description": "OVC CE-VLAN ID Preservation - MEF 26.2 §12.7",
                "enum": ["PRESERVE", "STRIP", "RETAIN"] },
            "cTagPcpPreservation": {
                "description": "OVC CE-VLAN PCP Preservation - MEF 26.2 §12.8",
                "enum": ["ENABLED", "DISABLED"] },
            "cTagDeiPreservation": {
                "description": "OVC CE-VLAN DEI Preservation - MEF 26.2 §12.9",
                "enum": ["ENABLED", "DISABLED"] },
            "listOfClassOfServiceNames": {
                "description": "OVC List of Class of Service Names - MEF 26.2 §12.12",
                "type": "array", "minItems": 1, "maxItems": 8, "uniqueItems": true, 
                "items": { 
                    "type": "string" }
                },
            "carrierEthernetSls": {
                "description": "OVC Service Level Specification - MEF 26.2 §12.13",
                "$ref": "#/definitions/objSLS" },
            "availableMegLevel": {
                "description": "OVC Available MEG Level - MEF 26.2 §12.15",
                "type": "number", "minimum": 0, "maximum": 6 },
            "l2cpAddressSet": {
                "description": "OVC L2CP Address Set - MEF 45 §8.1 and MEF 26.2 §12.16",
                "enum": ["CTA", "CTB", "CTB2"] },
            "uniEP": {
                "description": "UNI OVC End Point - MEF 26.2 §16",
                "$ref": "#/definitions/objOvcEP" },
            "enniEP": {
                "description": "ENNI OVC End Point - MEF 26.2 §16",
                "$ref": "#/definitions/objOvcEP" }
        },
"required": ["maximumFrameSize", "ceVlanIdPreservation", "cTagPcpPreservation", "cTagDeiPreservation", "listOfClassOfServiceNames", "carrierEthernetSls", "availableMegLevel", "l2cpAddressSet", "uniEP", "enniEP"],
"definitions": {
    "objOvcEP": {
        "type": "object",
        "description": "An OVC End Point is a logical entity at a given External Interface that is associated with a distinct set of frames passing over that External Interface. The OVC End Point is actually one of the Common Objects, but it is listed directly after the OVC because it is an integral component of the OVC.",
        "properties": {
            "ovcEndPointMap": {
                "description": "OVC End Point Map - MEF 26.2 §16.5",
                "$ref": "#/definitions/objVlanMap" },
            "ingressClassOfServiceMap": {
                "description": "OVC End Point Class of Service Identifier - MEF 26.2 §16.6",
                "oneOf": [
                                {"$ref": "#/definitions/objCosFromOvcEp"},
                                {"$ref": "#/definitions/objCosFromStagPcp"},
                                {"$ref": "#/definitions/objCosFromCtagPcp"},
                                {"$ref": "#/definitions/objCosFromDscp"}] },
            "egressMap": {
                "description": "OVC End Point Egress Map - MEF 26.2 §16.8",
                "$ref": "#/definitions/objOvcEgressMapItems" },
            "ingressBandwidthProfilePerEndPoint": {
                "description": "Ingress Bandwidth Profile per OVC End Point - MEF 26.2 §16.10",
                "oneOf": [
                                {"$ref": "#/definitions/objBWP"},
                                {"$ref": "#/definitions/objDisabled"}] },
            "ingressBandwidthProfilePerClassOfServiceName": {
                "description": "Ingress Bandwidth Profile per Class of Service Name - MEF 26.2 §16.12",
                "type": "array", "minItems": 0, "maxItems": 8, 
                "items": { 
                    "$ref": "#/definitions/objCosBWP" }
                },
            "aggregationLinkDepth": {
                "description": "OVC End Point Aggregation Link Depth - MEF 26.2 §16.14",
                "$ref": "#/definitions/objLinkDepth" },
            "sourceAddressMacLimit": {
                "description": "OVC End Point Source MAC Address Limit - MEF 26.2 §16.15",
                "$ref": "#/definitions/objSaLimit" },
            "megIntermediatePoint": {
                "description": "OVC End Point MIP - MEF 26.2 §16.16",
                "enum": ["ENABLED", "DISABLED"] },
            "maintenanceEndPointList": {
                "description": "OVC End Point Maintenance End Point List - MEF 26.2 §16.17",
                "type": "array", "minItems": 0, "maxItems": 7, 
                "items": { 
                    "$ref": "#/definitions/objMEPspec" }
                }
        },
        "required": ["ovcEndPointMap", "ingressClassOfServiceMap", "egressMap", "ingressBandwidthProfilePerEndPoint", "ingressBandwidthProfilePerClassOfServiceName", "aggregationLinkDepth", "sourceAddressMacLimit", "megIntermediatePoint", "maintenanceEndPointList"]
    },
    "objBWP": {
        "type": "object",
        "description": "The MEF Bandwidth Profile 11-tuple as described in MEF 10.4 section 12.1.2. (MEF 10.4 actually defines a 10-tuple where Envelope Name and Rank are a single attribute).",
        "properties": {
            "cir": {
                "description": "The Committed Information Rate for the BWP",
                "type": "integer", "minimum": 0 },
            "cirmax": {
                "description": "The Maximum Committed Information Rate for the BWP",
                "type": "integer", "minimum": 0 },
            "cbs": {
                "description": "The depth in bytes of the Committed Token Bucket",
                "type": "integer", "minimum": 4000 },
            "eir": {
                "description": "The Excess Information Rate for the Bandwidth Profile",
                "type": "integer", "minimum": 0 },
            "eirmax": {
                "description": "The Maximum Excess Information Rate for the Bandwidth Profile",
                "type": "integer", "minimum": 0 },
            "ebs": {
                "description": "The depth in bytes of the Excess Token Bucket",
                "type": "integer", "minimum": 4000 },
            "cf": {
                "description": "Do overflow tokens at this level flow down to the next committed bucket or to the corresponding excess bucket?",
                "type": "number", "minimum": 0, "maximum": 1 },
            "cm": {
                "description": "Does the policer consider the color marking in the incoming frame?",
                "enum": ["COLOR_BLIND", "COLOR_AWARE"] },
            "envelopeName": {
                "description": "The name of the envelope that this Bandwidth Profile resides in.",
                "type": "string", "maxLength": 45 },
            "envelopeRank": {
                "description": "The rank in the envelope of this BWP",
                "type": "integer", "minimum": 1 },
            "offset": {
                "description": "A number of bytes (positive or negative) to include in the Bandwidth Profile calculation to account for headers.",
                "type": "integer" }
        },
        "required": ["cm", "envelopeName", "envelopeRank"]
    },
    "objCosBWP": {
        "type": "object",
        "description": "2-tuple {CoS Name, Bandwidth Profile}. A list of these is used in the OVC End Point Service Attribute: Ingress Bandwidth Profile per Class of Service Name.",
        "properties": {
            "cosName": {
                "description": "The Name of the Class of Service that this BWP is applied to.",
                "type": "string" },
            "cosBWP": {
                "description": "The Bandwidth Profile (or DISABLED)",
                "oneOf": [
                                {"$ref": "#/definitions/objBWP"},
                                {"$ref": "#/definitions/objDisabled"}] }
        },
        "required": ["cosName", "cosBWP"]
    },
    "objVlanMap": {
        "type": "object",
        "description": "Used to specify which C-VLANs or S-VLANs are mapped to an Interface. It is either {ALL} (for port-based service) or a {list of VLAN ranges}",
        "properties": {
            "vlanMap": {
                "description": "Either ALL for a port-based service or a list of VLAN Ranges",
                "oneOf": [
                                {"$ref": "#/definitions/objVlanRangeList"},
                                {"$ref": "#/definitions/objAll"}] }
        },
        "required": ["vlanMap"]
    },
    "objVlanRangeList": {
        "type": "object",
        "description": "A list of {VLAN Ranges} used in the VLAN Map",
        "properties": {
            "vlanRangeList": {
                "description": "A list of VLAN ranges",
                "type": "array", "minItems": 1, 
                "items": { 
                    "$ref": "#/definitions/objVlanRange" }
                }
        },
        "required": ["vlanRangeList"]
    },
    "objVlanRange": {
        "type": "object",
        "description": "A range of VLANs allowing three forms: x, x → x, and x → y",
        "properties": {
            "start": {
                "description": "The starting VLAN of the range or the only VLAN",
                "type": "integer", "minimum": 1, "maximum": 4094 },
            "end": {
                "description": "The final VLAN in the range",
                "type": "integer", "minimum": 1, "maximum": 4094 }
        },
        "required": ["start"]
    },
    "objL2cpProtocolIdentifier": {
        "type": "object",
        "description": "This is one of:  EtherType (four hex digits), (2) LLC (2 hex digits), or (3) EtherType/Subtype (4 hex digits and 2 hex digits)",
        "properties": {
            "protoID": {
                "description": "The EtherType or LLC Address or EtherType/SubType",
                "oneOf": [
                                {"$ref": "#/definitions/objEtherType"},
                                {"$ref": "#/definitions/objLLC"},
                                {"$ref": "#/definitions/objEtherTypeSubType"}] }
        },
        "required": ["protoID"]
    },
    "objEtherType": {
        "type": "object",
        "description": "4 hex digits, 0xDDDD",
        "properties": {
            "etherType": {
                "description": "4 hex digits 0xDDDD",
                "type": "string", "pattern": "[0][x][0-9a-f]{4}" }
        },
        "required": ["etherType"]
    },
    "objLLC": {
        "type": "object",
        "description": "2 hex digits, 0xDD",
        "properties": {
            "llc": {
                "description": "2 hex digits 0xDD",
                "type": "string", "pattern": "[0][x][0-9a-f]{2}" }
        },
        "required": ["llc"]
    },
    "objEtherTypeSubType": {
        "type": "object",
        "description": "This is a two-tuple consisting of an Ethernet Type 0xDDDD and a SubType 0xDD",
        "properties": {
            "etherType": {
                "description": "An Ethertype 0xFFFF",
                "type": "string", "pattern": "[0][x][0-9a-f]{4}" },
            "subType": {
                "description": "An EtherType SubType 0xDD",
                "type": "string", "pattern": "[0][x][0-9a-f]{2}" }
        },
        "required": ["etherType", "subType"]
    },
    "objLinkDepth": {
        "type": "object",
        "description": "A 2-tuple {SVID, Depth} that indicates at the ENNI how many LAG links can be used by the SVID. It indicates the level of resiliency to use for the SVID at the ENNI.",
        "properties": {
            "vlanID": {
                "description": "The VLAN ID",
                "type": "integer", "minimum": 1, "maximum": 4094 },
            "lagDepth": {
                "description": "The number of Link Aggreation links available to the VLAN",
                "type": "integer", "minimum": 1, "maximum": 8 }
        },
        "required": ["vlanID", "lagDepth"]
    },
    "objMEPspec": {
        "type": "object",
        "description": "A 2-tuple for a MEP at an interface containing MEG level and direction",
        "properties": {
            "megLevel": {
                "description": "The MEG level",
                "type": "integer", "minimum": 0, "maximum": 7 },
            "mepDirection": {
                "description": "Indicates whether this is an Up MEP or Down MEP",
                "enum": ["UP", "DOWN"] }
        },
        "required": ["megLevel", "mepDirection"]
    },
    "objSaLimit": {
        "type": "object",
        "description": "2-tuple to encode the Source Address limit and time interval",
        "properties": {
            "numAddr": {
                "description": "The number of MAC source addresses that can be learned in the time interval.",
                "type": "integer" },
            "interval": {
                "description": "The time interval in seconds over which the source address limit is evaluated",
                "type": "integer", "minimum": 1 }
        },
        "required": ["numAddr", "interval"]
    },
    "objCosFromOvcEp": {
        "type": "object",
        "description": "Ingress CoS is specified as {F,M,P}. This is when F=OVC_EP. ",
        "properties": {
            "field_F": {
                "description": "The field that indicates CoS = OVC EP.",
                "enum": ["OVC_EP"] },
            "map_M": {
                "description": "The single CoS at this OVC EP",
                "type": "string" },
            "l2cp_P": {
                "description": "This specifies the CoS for L2CPs carried over the OVC.",
                "$ref": "#/definitions/objCosL2cp" }
        },
        "required": ["field_F", "map_M", "l2cp_P"]
    },
    "objCosFromStagPcp": {
        "type": "object",
        "description": "Ingress CoS is specified as {F,M,P}. This is when F=S_TAG_PCP. ",
        "properties": {
            "field_F": {
                "description": "The Field that indicates CoS is S-Tag PCP.",
                "enum": ["S_TAG_PCP"] },
            "map_M": {
                "description": "A list of 8 PCP values and their associated CoS Names",
                "$ref": "#/definitions/objCosPCPList" },
            "l2cp_P": {
                "description": "This specifies the CoS for L2CPs carried over the OVC.",
                "$ref": "#/definitions/objCosL2cp" }
        },
        "required": ["field_F", "map_M", "l2cp_P"]
    },
    "objCosFromCtagPcp": {
        "type": "object",
        "description": "Ingress CoS is specified as {F,M,P}. This is when F=C_TAG_PCP. ",
        "properties": {
            "field_F": {
                "description": "The Field that indicates CoS is C-Tag PCP.",
                "enum": ["C_TAG_PCP"] },
            "map_M": {
                "description": "A list of 8 PCP values and their associated CoS Names",
                "$ref": "#/definitions/objCosPCPList" },
            "l2cp_P": {
                "description": "This specifies the CoS for L2CPs carried over the OVC.",
                "$ref": "#/definitions/objCosL2cp" }
        },
        "required": ["field_F", "map_M", "l2cp_P"]
    },
    "objCosFromDscp": {
        "type": "object",
        "description": "Ingress CoS is specified as {F,M,P}. This is when F=DSCP. ",
        "properties": {
            "field_F": {
                "description": "The Field that indicates CoS is DSCP.",
                "enum": ["DSCP"] },
            "map_M": {
                "description": "This maps CoS values to a list of DSCP values for each of IPv4 and IPv6 and also to non-IP packets.",
                "$ref": "#/definitions/objCosDscpMap" },
            "l2cp_P": {
                "description": "This specifies the CoS for L2CPs carried over the OVC.",
                "$ref": "#/definitions/objCosL2cp" }
        },
        "required": ["field_F", "map_M", "l2cp_P"]
    },
    "objCosPCPList": {
        "type": "object",
        "description": "A list of 8 2-tuples {PCP value, CoS Name or DISCARD}. A PCP value of 0 is used for Untagged Frame. This is consistent with D11 in MEF 26.2.",
        "properties": {
            "cosPCPList": {
                "description": "List of 8 CoS Name to PCP values",
                "type": "array", "minItems": 8, "maxItems": 8, 
                "items": { 
                    "$ref": "#/definitions/objCosPcpMapEntry" }
                }
        },
        "required": ["cosPCPList"]
    },
    "objCosPcpMapEntry": {
        "type": "object",
        "description": "2-tuple {PCP, CoSName} that maps a CoS Name or DISCARD to a PCP. ",
        "properties": {
            "pcpVal": {
                "description": "A value 0 to 7",
                "type": "integer", "minimum": 0, "maximum": 7 },
            "pcpCosName": {
                "description": "A CoS Name or DISCARD",
                "type": "string" }
        },
        "required": ["pcpVal", "pcpCosName"]
    },
    "objCosL2cp": {
        "type": "object",
        "description": "2-tuple {L2CP Ident, CoS Name}",
        "properties": {
            "l2cpIdentifier": {
                "description": "L2CP Identifier - MEF 45.1 §8.2",
                "$ref": "#/definitions/objL2cpProtocolIdentifier" },
            "l2cpCosName": {
                "description": "CoS Name String to associate with the L2CP",
                "type": "string" }
        },
        "required": ["l2cpIdentifier", "l2cpCosName"]
    },
    "objCosDscpMap": {
        "type": "object",
        "description": "This is a list of CoS to DSCP Map Entries followed by items for Not an IP Packet and All Other Values.",
        "properties": {
            "dscpValueCoSList": {
                "description": "This is a list of DSCP to CoS Map Entries: {ipv4DSCPs, ipv6DSCPs, CoSName}",
                "type": "array", "minItems": 1, 
                "items": { 
                    "$ref": "#/definitions/objCosDscpMapEntry" }
                },
            "otherIPv4": {
                "description": "This is the CoS value for IPv4 packets with DSCP values other than those listed.",
                "type": "string" },
            "otherIPv6": {
                "description": "This is the CoS value for IPv6 packets with DSCP values other than those listed.",
                "type": "string" },
            "notIP": {
                "description": "This is the CoS value for packets that are not IP packets when CoS is determined from DSCP",
                "type": "string" }
        }
    },
    "objCosDscpMapEntry": {
        "type": "object",
        "description": "This is a 3-tuple {ipv4list, ipv6list, cosName}",
        "properties": {
            "ipv4List": {
                "description": "List of IPv4 DSCP values",
                "$ref": "#/definitions/objDscpValues" },
            "ipv6List": {
                "description": "",
                "$ref": "#/definitions/objDscpValues" },
            "cosName": {
                "description": "",
                "type": "string" }
        },
        "required": ["cosName"]
    },
    "objDscpValues": {
        "type": "object",
        "description": "A list of 6 bit values",
        "properties": {
            "dscpValues": {
                "description": "A list of unique 6-bit (0-63) values",
                "type": "array", "minItems": 1, "uniqueItems": true, 
                "items": { 
                    "type": "integer", "minimum": 0, "maximum": 63 }
                }
        }
    },
    "objOvcEgressMapItems": {
        "type": "object",
        "description": "This object allows specification of the various ways to fill in the OVC Egress Map.",
        "properties": {
            "cnpcp": {
                "description": "This allows specification of either 0 or 1 mappings of a list of Class of Service name into PCP.",
                "type": "array", "minItems": 0, "maxItems": 1, 
                "items": { 
                    "$ref": "#/definitions/objCnPcpList" }
                },
            "ccdei": {
                "description": "This allows specification of either 0 or 1 mappings of a list of Class of Service names/color into DEI.",
                "type": "array", "minItems": 0, "maxItems": 1, 
                "items": { 
                    "$ref": "#/definitions/objCcDeiList" }
                },
            "ccpcp": {
                "description": "This allows specification of either 0 or 1 mappings of a list of Class of Service name/DEI into PCP.",
                "type": "array", "minItems": 0, "maxItems": 1, 
                "items": { 
                    "$ref": "#/definitions/objCcPcpList" }
                }
        }
    },
    "objCnPcpList": {
        "type": "object",
        "description": "This is a list of 1...n CNPCP Objects. One for each Class of Service.",
        "properties": {
            "cnPcpList": {
                "description": "If the OVC Egress Map includes CN → PCP, there must be an entry in the list for each Class of Service Name in the OVC List of Class of Service Names.",
                "type": "array", "minItems": 1, "uniqueItems": true, 
                "items": { 
                    "$ref": "#/definitions/objCnPcp" }
                }
        },
        "required": ["cnPcpList"]
    },
    "objCcDeiList": {
        "type": "object",
        "description": "This is a list of 1...n CCDEI Objects. One for each Class of Service.",
        "properties": {
            "ccDeiList": {
                "description": "If the OVC Egress Map includes CC → DEI, there must be an entry in the list for each Class of Service Name in the OVC List of Class of Service Names.",
                "type": "array", "minItems": 1, "uniqueItems": true, 
                "items": { 
                    "$ref": "#/definitions/objCcDei" }
                }
        },
        "required": ["ccDeiList"]
    },
    "objCcPcpList": {
        "type": "object",
        "description": "This is a list of 1...n CCPCP Objects. One for each Class of Service.",
        "properties": {
            "ccPcpList": {
                "description": "If the OVC Egress Map includes CC → PCP, there must be an entry in the list for each Class of Service Name in the OVC List of Class of Service Names.",
                "type": "array", "minItems": 1, "uniqueItems": true, 
                "items": { 
                    "$ref": "#/definitions/objCcPcp" }
                }
        },
        "required": ["ccPcpList"]
    },
    "objCnPcp": {
        "type": "object",
        "description": "One of the possible values for the OVC Egress Map. This indicates that the Class of Service is mapped to the PCP field of the Egress Frame. Note that the Enums used for the PCP values include DISCARD as a value.",
        "properties": {
            "cosname": {
                "description": "A class of service name from the OVC List of Class of Service Names Service Attribute",
                "type": "string" },
            "pcp": {
                "description": "A PCP value (0-7) or DISCARD",
                "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "DISCARD"] }
        },
        "required": ["cosname", "pcp"]
    },
    "objCcDei": {
        "type": "object",
        "description": "One of the possible values for the OVC Egress Map. This indicates that the Color is mapped to the DEI field of the Egress Frame. Note that the Enums used for the DEI values include DISCARD as a value.",
        "properties": {
            "cosname": {
                "description": "A class of service name from the OVC List of Class of Service Names Service Attribute",
                "type": "string" },
            "deigreen": {
                "description": "A DEI value (0 or 1 or DISCARD) to use for Green frames",
                "enum": ["0", "1", "DISCARD"] },
            "deiyellow": {
                "description": "A DEI value (0 or 1 or DISCARD) to use for Yellow frames",
                "enum": ["0", "1", "DISCARD"] }
        },
        "required": ["cosname", "deigreen", "deiyellow"]
    },
    "objCcPcp": {
        "type": "object",
        "description": "One of the possible values for the OVC Egress Map. This indicates that the Class of Service and Color are mapped to the PCP field of the Egress Frame. Note that the Enums used for the PCP values include DISCARD as a value.",
        "properties": {
            "cosname": {
                "description": "A class of service name from the OVC List of Class of Service Names Service Attribute",
                "type": "string" },
            "pcpgreen": {
                "description": "A PCP value (0-7) or DISCARD to use for Green frames",
                "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "DISCARD"] },
            "pcpyellow": {
                "description": "A PCP value (0-7) or DISCARD to use for Yellow frames",
                "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "DISCARD"] }
        },
        "required": ["cosname", "pcpgreen", "pcpyellow"]
    },
  "objSLS" : {
      "type" : "object",
      "description" : "Data type that represents Carrier Ethernet Service Level Specification that provides a list of Performance Metrics where each item in the list includes the parameters and performance objective for the given Performance Metric. It is associated with EVC or OVC and a list of SlsCosNameEntry(s). Reference MEF 10.4 Section 8.8 EVC Service Specification Service Attribute and MEF 26.2 Section 12.13 OVC Service Level Specification Service Attribute.",
      "properties" : {
        "timeInterval" : {
          "$ref" : "#/definitions/TimeIntervalT"
        },
        "startTime" : {
          "$ref" : "#/definitions/TimeAndDate"
        },
        "slsCosNameEntry" : {
          "description" : "Pointer to SlsCosNameEntry.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SlsCosNameEntry"
          },
          "minItems" : 1
        }
      }
    },
    "SlsCosNameEntry" : {
      "type" : "object",
      "description" : "The SlsCosNameEntry data type represents the CoS Name entry consisting of a list of 5-tuples of the form <CoS Name, deltat, C, n, PM> where CoS Name as Class of Service Name, deltat as a small time interval, C as a threshold and n to identify consecutive deltat for high loss interval and PM is a non-empty list where each element in the list consists of Performance Metrics. The SlsCosNameEntry data type is associated with EVC or OVC and SlsObjectiveAndParameters. Reference MEF 10.4 Section 8.8 EVC Service Level Specification Service Attribute and MEF 26.2 Section 12.13 OVC Service Level Specification Service Attribute.",
      "properties" : {
        "cosName" : {
          "description" : "Class of Service name.",
          "type" : "string"
        },
        "deltaT" : {
          "description" : "This attribute denotes the delta-T, a time interval in seconds, smaller than T (SLS time period).",
          "type" : "integer"
        },
        "thresholdC" : {
          "description" : "Denotes the threshold for PM, used to determine whether a given time interval delta t has high loss.",
          "type" : "number"
        },
        "consecutiveIntervalN" : {
          "description" : "This attribute denotes n, used to identify how many consecutive delta-T intervals must have high loss to trigger a change in Availability.",
          "type" : "integer"
        },
        "slsObjectiveAndParameterList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SlsObjectiveAndParameters"
          },
          "minItems" : 0
        }
      }
    },
    "SlsObjectiveAndParameters" : {
      "type" : "object",
      "description" : "The Service Level Specification (SLS) is the technical details of the service level, in terms of Performance Objectives, agreed between the Service Provider and the Subscriber (or Operator) as part of the Service Level Agreement.  A given SLS might contain 0, 1, or more Performance Objectives for each Performance Metric. The SlsObjectiveAndParameters data type associating the set of performance parameters such as FD, MFD, FDR, IFDV, FLR, Availability, HILI, CHLI, Composite and Group Availablity for Ordered Pairs. Reference MEF 10.4 Section 8.8 EVC Service Level Specification Service Attribute and MEF 26.2 Section 12.13 OVC Service Level Specification Service Attribute.",
      "properties" : {
        "oneWayFrameDelayPmMetric" : {
          "type" : "array",
          "description" : "Pointer to One-way Frame Delay Performance Management Metric.",
          "items" : {
            "$ref" : "#/definitions/OneWayFrameDelayPmMetric"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayInterFrameDelayVariationPmMetric" : {
          "type" : "array",
          "description" : "Pointer to One-way Inter-Frame Delay Variation Performance Management Metric.",
          "items" : {
            "$ref" : "#/definitions/OneWayInterFrameDelayVariationPmMetric"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayMeanFrameDelayPmMetric" : {
          "type" : "array",
          "description" : "Pointer to One-way Mean Frame Delay Performance Management Metric.",
          "items" : {
            "$ref" : "#/definitions/OneWayMeanFrameDelayPmMetric"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayFrameLossRatioPmMetric" : {
          "type" : "array",
          "description" : "Pointer to One-way Frame Loss Ratio Performance Management Metric.",
          "items" : {
            "$ref" : "#/definitions/OneWayFrameLossRatioPmMetric"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayMeanFrameDelayRangePmMetric" : {
          "type" : "array",
          "description" : "Pointer to One-way Frame Delay Range Performance Management Metric.",
          "items" : {
            "$ref" : "#/definitions/OneWayMeanFrameDelayRangePmMetric"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayAvailabilityPmMetric" : {
          "type" : "array",
          "description" : "Pointer to One-way Availability Performance Management Metric.",
          "items" : {
            "$ref" : "#/definitions/OneWayAvailabilityPmMetric"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayHighLossIntervalPmMetric" : {
          "type" : "array",
          "description" : "Pointer to One-way High Loss Interval Performance Management Metric.",
          "items" : {
            "$ref" : "#/definitions/OneWayHighLossIntervalPmMetric"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayConsecutiveHighLossIntervalPmMetric" : {
          "type" : "array",
          "description" : "Pointer to One-way Consecutive High Loss Interval Performance Management Metric.",
          "items" : {
            "$ref" : "#/definitions/OneWayConsecutiveHighLossIntervalPmMetric"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayCompositePmMetric" : {
          "type" : "array",
          "description" : "Pointer to One-way Composite Performance Management Metric.",
          "items" : {
            "$ref" : "#/definitions/OneWayCompositePmMetric"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayGroupAvailabilityPmMetric" : {
          "type" : "array",
          "description" : "Pointer to One-way Group Availability Performance Management Metric.",
          "items" : {
            "$ref" : "#/definitions/OneWayGroupAvailabilityPmMetric"
          },
          "minItems" : 0,
          "maxItems" : 1
        }
      }
    },
    "OneWayFrameDelayPmMetric" : {
      "type" : "object",
      "description" : "Data type representing One-way Frame Delay Performance Metric. Reference MEF 10.4 Section 8.8.2 One-way Frame Delay Performance Metric and MEF 26.2 Section 12.13.2 One-way Frame Delay Performance Metric.",
      "properties" : {
        "orderedPairList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderedPair"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayFdPercentile" : {
          "$ref" : "#/definitions/Percentage"
        },
        "oneWayFdObjective" : {
          "$ref" : "#/definitions/Time"
        }
      }
    },
    "OneWayMeanFrameDelayPmMetric" : {
      "type" : "object",
      "description" : "Data type representing One-way Mean Frame Delay Performance Metric. Reference MEF 10.4 Section 8.8.3 One-way Mean Frame Delay Performance Metric and MEF 26.2 Section 12.13.3 One-way Mean Frame Delay Performance Metric.",
      "properties" : {
        "orderedPairs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderedPair"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayMfdObjective" : {
          "$ref" : "#/definitions/Time"
        }
      }
    },
    "OneWayMeanFrameDelayRangePmMetric" : {
      "type" : "object",
      "description" : "Data type representing One-way Frame Delay Range Performance Metric. Reference MEF 10.4 Section 8.8.4 One-way Frame Delay Range Performance Metric and MEF 26.2 Section 12.13.4 One-way Frame Delay Range Performance Metric.",
      "properties" : {
        "orderedPairs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderedPair"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayFdrPercentile" : {
          "$ref" : "#/definitions/Percentage"
        },
        "oneWayFdrObjective" : {
          "$ref" : "#/definitions/Time"
        }
      }
    },
    "OneWayInterFrameDelayVariationPmMetric" : {
      "type" : "object",
      "description" : "Data type representing One-way Inter-Frame Delay Performance Metric. Reference MEF 10.4 Section 8.8.5 One-way InterFrame Delay Performance Metric and MEF 26.2 Section 12.13.5 One-way Inter-Frame Delay Performance Metric.",
      "properties" : {
        "orderedPairs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderedPair"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "timeDuration" : {
          "$ref" : "#/definitions/Time"
        },
        "oneWayIfdvPercentile" : {
          "$ref" : "#/definitions/Percentage"
        },
        "oneWayIfdvObjective" : {
          "$ref" : "#/definitions/Time"
        }
      }
    },
    "OneWayFrameLossRatioPmMetric" : {
      "type" : "object",
      "description" : "Data type representing One-way Frame Loss Ratio Performance Metric. Reference MEF 10.4 Section 8.8.6 One-way Frame Loss Ratio Performance Metric and MEF 26.2 Section 12.13.6 One-way Frame Loss Performance Metric.",
      "properties" : {
        "orderedPairs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderedPair"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayFrameLossRatioObjective" : {
          "$ref" : "#/definitions/Percentage"
        }
      }
    },
    "OneWayAvailabilityPmMetric" : {
      "type" : "object",
      "description" : "Data type representing One-way Availability Performance Metric. Reference MEF 10.4 Section 8.8.7 One-way Availability Performance Metric and MEF 26.2 Section 12.13.7 One-way Availability Performance Metric.",
      "properties" : {
        "orderedPairs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderedPair"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayAvailabilityObjective" : {
          "$ref" : "#/definitions/Percentage"
        }
      }
    },
    "OneWayHighLossIntervalPmMetric" : {
      "type" : "object",
      "description" : "Data type representing One-way Consecutive High Loss Intervals Performance Metric. Reference MEF 10.4 Section 8.8.9 One-way Consecutive High Loss Intervals Performance Metric and MEF 26.2 Section 12.13.9 One-way Consecutive High Loss Intervals Performance Metric.",
      "properties" : {
        "orderedPairs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderedPair"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "oneWayHighLossIntervalsObjective" : {
          "type" : "integer"
        }
      }
    },
    "OneWayConsecutiveHighLossIntervalPmMetric" : {
      "type" : "object",
      "description" : "Data type representing One-way Consecutive High Loss Intervals Performance Metric. Reference MEF 10.4 Section 8.8.9 One-way Consecutive High Loss Intervals Performance Metric and MEF 26.2 Section 12.13.9 One-way Consecutive High Loss Intervals Performance Metric.",
      "properties" : {
        "orderedPairs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderedPair"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "consecutiveNumberP" : {
          "type" : "integer"
        },
        "oneWayChliObjective" : {
          "type" : "integer"
        }
      }
    },
    "OneWayCompositePmMetric" : {
      "type" : "object",
      "description" : "Data type representing One-way Composite Performance Metric. Reference MEF 10.4 Section 8.8.10 One-way Composite Performance Metric.",
      "properties" : {
        "orderedPairs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderedPair"
          },
          "minItems" : 0,
          "maxItems" : 1
        },
        "compositePerformanceIndicatorThreshold" : {
          "type" : "number",
          "description" : "Composite Performance Indicator threshold which if exceeded suggests an unacceptable time interval."
        },
        "compositeFrameLoss" : {
          "type" : "integer",
          "description" : "Composite indicator for One-way Frame Loss equal to 0 or 1.",
          "minimum" : 0,
          "maximum" : 1
        },
        "compositeFrameDelay" : {
          "type" : "integer",
          "description" : "Composite indicator for One-way Frame Delay equal to 0 or 1.",
          "minimum" : 0,
          "maximum" : 1
        },
        "compositeFrameDelayVariation" : {
          "type" : "integer",
          "description" : "Composite indicator for One-way Frame Delay Variation equal to 0 or 1."
        },
        "oneWayFdThreshold" : {
          "$ref" : "#/definitions/Time"
        },
        "oneWayIfdvThreshold" : {
          "$ref" : "#/definitions/Time"
        },
        "cpmObjective" : {
          "$ref" : "#/definitions/Percentage"
        }
      }
    },
    "OneWayGroupAvailabilityPmMetric" : {
      "type" : "object",
      "description" : "Data type representing One-way Group Availability Performance Metric. Reference MEF 10.4 Section 8.8.11 One-way Group Availability Performance Metric and MEF 26.2 Section 12.13.10 One-way Group Availability Performance Metric.",
      "properties" : {
        "setOfOrderedPairs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SetOfOrderedPairs"
          },
          "minItems" : 1
        },
        "minimumNumberOfSetsAvailableK" : {
          "type" : "integer",
          "minimum" : 1
        },
        "oneWayGroupAvailabilityObjective" : {
          "$ref" : "#/definitions/Percentage"
        }
      }
    },
    "OrderedPair" : {
      "type" : "object",
      "description" : "The OrderedPair data type is an ordered pair of EVC/OVC End Points for a specific performance metric for one way direction. It is associated with one way performance metrics and a pair of  CarrierEthernetServiceEndPoints.",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "description" : "Unique identifier for Ordered Pair."
        },
        "toUni" : {
          "type" : "string",
          "description" : "NOTE: Need to point to schema reference."
        },
        "fromUni" : {
          "type" : "string",
          "description" : "NOTE: Need to point to schema reference."
        }
      }
    },
    "Percentage" : {
      "type" : "number",
      "minimum" : 0,
      "maximum" : 100
    },
    "SetOfOrderedPairs" : {
      "type" : "object",
      "description" : "Data type representing a set of Ordered Pairs.",
      "properties" : {
        "orderedPairsList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderedPair"
          },
          "minItems" : 1
        }
      }
    },
    "Time" : {
      "type" : "object",
      "description" : "A data type used to represent time in various units.",
      "properties" : {
        "number" : {
          "type" : "number",
          "description" : "Time as a float."
        },
        "unit" : {
          "type" : "string",
          "description" : "Time units as set of enumerations.",
          "enum" : [ "nanoSeconds", "microSeconds", "milliSeconds", "seconds", "minutes", "hours", "days", "weeks", "months", "years" ]
        }
      }
    },
    "TimeAndDate" : {
      "type" : "object",
      "description" : "This data type is for Time and Date in UTC. Used for CarrierEthernetSls startTime attribute.",
      "properties" : {
        "day" : {
          "type" : "integer",
          "description" : "Denotes the day."
        },
        "hour" : {
          "type" : "integer",
          "description" : "Denotes the hour."
        },
        "minute" : {
          "type" : "integer",
          "description" : "Denotes the minute."
        },
        "month" : {
          "type" : "integer",
          "description" : "Denotes the month."
        },
        "second" : {
          "type" : "integer",
          "description" : "Denotes the second."
        },
        "year" : {
          "type" : "integer",
          "description" : "Denotes the year."
        }
      }
    },
    "TimeIntervalT" : {
      "type" : "object",
      "description" : "This attribute sets the time interval to evaluate the performance for the SLS.  All performances of this SLS use the same time interval T, which itself may not be constrained, e.g., 1 month.",
      "properties" : {
        "number" : {
          "type" : "integer",
          "description" : "This denotes the value (for the unit)."
        },
        "unit" : {
          "type" : "string",
          "description" : "Time interval unit.",
          "enum" : [ "second", "minute", "hour", "day", "month", "week", "year" ]
        }
      }
    },
    "objDisabled": {
        "type": "object",
        "description": "An object that includes a single property, the constant DISABLED",
        "properties": {
            "constantDisabled": {
                "description": "",
                "enum": ["DISABLED"] }
        },
        "required": ["constantDisabled"]
    },
    "objAll": {
        "type": "object",
        "description": "An object that includes a single property, the constant ALL",
        "properties": {
            "constantAll": {
                "description": "",
                "enum": ["ALL"] }
        },
        "required": ["constantAll"]
    }
  }
}