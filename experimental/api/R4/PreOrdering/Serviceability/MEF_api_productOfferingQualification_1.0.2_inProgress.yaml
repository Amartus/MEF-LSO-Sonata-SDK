swagger: "2.0"
info:
  description: "This API is used to provide the ability to determine if service can\
    \ be delivered to a specific customer site within a Partner’s domain"
  version: "1.0.2_inProgress"
  title: "API ProductOfferingQualification"
  x-logo:
    url: "/redoc/logo.png"
    backgroundColor: "#FFFFFF"
host: "serverRoot"
basePath: "/mef/productOfferingQualification/v1/"
schemes:
- "https"
produces:
- "application/json;charset=utf-8"
tags:
- name: "ProductOfferingQualification"
  description: ""
- name: "Hub"
  description: ""
paths:
  /productOfferingQualification:
    post:
      tags:
      - "ProductOfferingQualification"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "productOfferingQualificationCreate"
      summary: "createProductOfferingQualification"
      description: "This operation handles a serviceability request through the instantiation\
        \ of a product offering qualification and associated item(s).\n\nSpecific\
        \ business errors for current operation will be encapsulated in\n\nHTTP Response\
        \ 422 Unprocessable entity\n\n - 100: A relatedParty - at productOfferingQualification\
        \ level - with a role 'Buyer' must be provided\n   \n - 101: A least a productOffering\
        \ OR a productSpecification OR a Product must be provided for a POQItem\n\
        \   "
      deprecated: false
      parameters:
      - name: "ProductOfferingQualification"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/POSTProductOfferingQualification"
      responses:
        201:
          description: "Success"
          schema:
            $ref: "#/definitions/ProductOfferingQualification"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\nSpecific encapsulated\
            \ business errors for current operation\n\n - 100: A relatedParty - at\
            \ productOfferingQualification level - with a role 'Buyer' must be provided\n\
            \   \n - 101: A least a productOffering OR a productSpecification OR a\
            \ Product must be provided for a POQItem\n   "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
    get:
      tags:
      - "ProductOfferingQualification"
      produces:
      - "application/json;charset=utf-8"
      operationId: "productOfferingQualificationFind"
      summary: "retrieveProductOfferingQualifications"
      description: "This operation is used to retrieve a list of product offering\
        \ qualifications based on an input filter.\n\nSpecific business errors for\
        \ current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable\
        \ entity\n\n - 100: Too many records retrieved - please restrict requested\
        \ parameter value(s)\n   "
      deprecated: false
      parameters:
      - name: "state"
        required: false
        in: "query"
        description: ""
        type: "string"
      - name: "expectedResponseDate"
        required: false
        in: "query"
        description: ""
        type: "string"
      - name: "projectId"
        required: false
        in: "query"
        description: ""
        type: "string"
      - name: "offset"
        required: false
        in: "query"
        description: "Requested index for start of resources to be provided in response\
          \ requested by client"
        type: "string"
      - name: "limit"
        required: false
        in: "query"
        description: "Requested number of resources to be provided in response requested\
          \ by client"
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductOfferingQualificationFindReq"
          headers:
            X-Total-Count:
              description: "The total number of matching resources"
              type: "integer"
              format: "int32"
            X-Result-Count:
              description: "The number of resources retrieved in the response"
              type: "integer"
              format: "int32"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\nSpecific encapsulated\
            \ business errors for current operation\n\n - 100: Too many records retrieved\
            \ - please restrict requested parameter value(s)\n   "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOfferingQualification/{productOfferingQualificationId}:
    get:
      tags:
      - "ProductOfferingQualification"
      produces:
      - "application/json;charset=utf-8"
      operationId: "productOfferingQualificationGet"
      summary: "retrieveProductOfferingQualification"
      description: "This operation retrieves a single product offering qualification\
        \ based upon on input id.\n\nSpecific business errors for current operation\
        \ will be encapsulated in\n\nHTTP Response 422 Unprocessable entity\n"
      deprecated: false
      parameters:
      - name: "productOfferingQualificationId"
        in: "path"
        required: true
        type: "string"
        description: ""
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ProductOfferingQualification"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /hub:
    post:
      tags:
      - "Hub"
      consumes:
      - "application/json;charset=utf-8"
      produces:
      - "application/json;charset=utf-8"
      operationId: "hubCreate"
      summary: "hubCreate"
      description: "Structure used to create a hub (to subscribe to notification)\n\
        \nSpecific business errors for current operation will be encapsulated in\n\
        \nHTTP Response 422 Unprocessable entity\n"
      deprecated: false
      parameters:
      - name: "Hub"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/HubInput"
      responses:
        201:
          description: "Success"
          schema:
            $ref: "#/definitions/Hub"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
    get:
      tags:
      - "Hub"
      produces:
      - "application/json;charset=utf-8"
      operationId: "hubFind"
      summary: "hubFind"
      description: "This operation retrieves a set of hubs.\n\nSpecific business errors\
        \ for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable\
        \ entity\n"
      deprecated: false
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Hub"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /hub/{hubId}:
    delete:
      tags:
      - "Hub"
      operationId: "hubDelete"
      summary: "hubDelete"
      description: "This operation is used to delete a hub.\n\nSpecific business errors\
        \ for current operation will be encapsulated in\n\nHTTP Response 422 Unprocessable\
        \ entity\n"
      deprecated: false
      parameters:
      - name: "hubId"
        in: "path"
        required: true
        type: "string"
        description: ""
      responses:
        204:
          description: "Success"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
definitions:
  ServiceabilityColor:
    description: "A color that indicates confidence to service the request."
    type: "string"
    enum:
    - "GREEN"
    - "RED"
    - "YELLOW"
  QualificationState:
    description: "These values represent the valid states through which the product\
      \ offering qualification can transition"
    type: "string"
    enum:
    - "IN_PROGRESS"
    - "READY"
    - "EXPIRED"
    - "UNABLE_TO_PROVIDE"
  TimeUnit:
    description: "Represents a unit of time."
    type: "string"
    enum:
    - "SECS"
    - "MINS"
    - "HOURS"
    - "BUSINESS_DAYS"
    - "CALENDAR_DAYS"
  RelationshipType:
    description: "Relationship type to be used between POQ item or product"
    type: "string"
    enum:
    - "RELIES_ON"
    - "BUNDLED"
    - "COMES_FROM"
  ErrorRepresentation:
    description: "Standard Class used to describe API response error"
    required:
    - "code"
    - "message"
    type: "object"
    properties:
      code:
        description: "Application related code (as defined in the API or from a common\
          \ list)"
        type: "integer"
        format: "int32"
      reason:
        description: "Text that explains the reason for error. This can be shown to\
          \ a client user."
        type: "string"
      message:
        description: "Text that provide mode details and corrective actions related\
          \ to the error. This can be shown to a client user."
        type: "string"
      status:
        description: "Http error code extension like 400-2 for example"
        type: "string"
      referenceError:
        description: "url pointing to documentation describing the error"
        type: "string"
      '@type':
        description: "Type of the REST resource Used to extend Error class"
        type: "string"
      '@schemaLocation':
        description: "Link to the schema describing the REST resource Used to extend\
          \ Error class"
        type: "string"
  TerminationError:
    description: "Termination error may be provided if seller is unable to perform\
      \ qualification"
    type: "object"
    properties:
      id:
        description: "Id of the termination error"
        type: "string"
      value:
        description: "Value (text) for the termination error"
        type: "string"
  RelatedParty:
    description: "An entity or organization that is involved in the product offering\
      \ qualification. It may be the \"Buyer\", the \"Seller\", or other related party"
    required:
    - "name"
    - "number"
    type: "object"
    properties:
      id:
        description: "Id of the party"
        type: "string"
      name:
        description: "Name of the party"
        type: "string"
      number:
        description: "Party phone number"
        type: "string"
      numberExtension:
        description: "Party phone number extension"
        type: "string"
      emailAddress:
        description: "Party email address"
        type: "string"
      '@referredType':
        description: "Technical attribute for API extension"
        type: "string"
  ProductOfferingRef:
    description: "A product offering defines the commercial terms under which a product\
      \ specification may be instantiated."
    type: "object"
    properties:
      id:
        description: "id of a productOffering"
        type: "string"
  Describing:
    description: "Target to the schema describing the product spec resource (and type)"
    type: "object"
    properties:
      '@type':
        description: "Indicates the (class) type of resource"
        type: "string"
      '@schemaLocation':
        description: "This field provided a link to the schema describing this REST\
          \ resource."
        type: "string"
  AlternateProductProposal:
    description: "If in the request the buyer has requested to have alternate product\
      \ proposals, then this class represents these proposals."
    type: "object"
    properties:
      serviceabilityDate:
        description: "Date the alternate product will be available"
        type: "string"
      productSpecification:
        $ref: "#/definitions/ProductSpecificationRef"
      eligibleProductOffering:
        type: "array"
        items:
          $ref: "#/definitions/ProductOfferingRef"
      '@type':
        description: "Technical attribute to extend the class."
        type: "string"
  ProductRelationship:
    description: "Indicates a relationship between products."
    required:
    - "type"
    - "id"
    type: "object"
    properties:
      type:
        $ref: "#/definitions/RelationshipType"
      id:
        description: "id of the targeted product"
        type: "string"
  ProductSpecificationRef:
    description: "A ProductSpec describes the invariant properties (i.e., features)\
      \ that a given set of Products MAY have. These properties provide the information\
      \ needed to plan, construct, allocate, and/or retire the Services and Resources\
      \ from the operator environment needed to deliver the Product."
    type: "object"
    properties:
      id:
        description: "Unique identifier of the product specification"
        type: "string"
      describing:
        $ref: "#/definitions/Describing"
  Product:
    description: "A Product is an instance of a productSpec or a  ProductOffering\
      \ procured by a Customer."
    type: "object"
    properties:
      id:
        description: "Unique identifier of the product"
        type: "string"
      href:
        description: "Link to product"
        type: "string"
      productRelationship:
        type: "array"
        items:
          $ref: "#/definitions/ProductRelationship"
      productSpecification:
        $ref: "#/definitions/ProductSpecificationRef"
      place:
        type: "array"
        items:
          $ref: "#/definitions/Place"
  ProductOfferingQualificationItem:
    description: "A product offering qualification is composed of one or more product\
      \ offering qualification items, with each item representing serviceability for\
      \ a given product"
    required:
    - "id"
    - "state"
    type: "object"
    properties:
      id:
        description: "Id of this POQ item"
        type: "string"
      state:
        $ref: "#/definitions/QualificationState"
      MPOE:
        description: "Indicates if access to the location is currently Minimum Point\
          \ Of Entry (MPOE) only. If mpoeOnly is true, this indicates that full access\
          \ to the location (e.g. sub-unit or suite) has not yet been established.\
          \ If mpoeOnly is false, this indicates that full access to the location\
          \ has been (or will be) established."
        type: "boolean"
      serviceabilityConfidence:
        $ref: "#/definitions/ServiceabilityColor"
      serviceConfidenceReason:
        description: "A description of the reason a particular color is being provided.\
          \ This may include a specific standard reason codes and descriptions."
        type: "string"
      installationInterval:
        $ref: "#/definitions/TimeInterval"
      desiredActivationDate:
        description: "Desired Activation Date for the product requested in this item"
        type: "string"
        format: "date"
      estimatedResponseDate:
        description: "When the color is Yellow (meaning 'We'll get back to you'),\
          \ this date indicates when the Seller plans to provide a more complete response."
        type: "string"
        format: "date"
      product:
        $ref: "#/definitions/Product"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      relatedPartyRole:
        type: "array"
        items:
          $ref: "#/definitions/PartyRole"
      eligibleProductOffering:
        type: "array"
        items:
          $ref: "#/definitions/ProductOfferingRef"
      productOfferingQualificationItemRelationship:
        type: "array"
        items:
          $ref: "#/definitions/ProductOfferingQualificationItemRelationship"
      alternateProductProposal:
        type: "array"
        items:
          $ref: "#/definitions/AlternateProductProposal"
      terminationError:
        type: "array"
        items:
          $ref: "#/definitions/TerminationError"
  ProductOfferingQualification:
    description: "The product offering qualification serves as response structure\
      \ for a serviceability check."
    required:
    - "state"
    - "relatedPartyRole"
    - "productOfferingQualificationItem"
    type: "object"
    properties:
      id:
        description: "The Serviceability Request's unique identifier."
        type: "string"
      href:
        description: "Link to this POQ resource"
        type: "string"
      instantSyncQualification:
        description: "If this flag is set to Yes, Buyer requests to have instant qualificationto\
          \ be provided in operation POST response"
        type: "boolean"
        default: false
      state:
        $ref: "#/definitions/QualificationState"
      projectId:
        description: "This value MAY be assigned by the Buyer/Seller to identify a\
          \ project the serviceability request is associated with."
        type: "string"
      provideAlternative:
        description: "This Boolean allows requester (buyer) to indicate if he is willing\
          \ to get alternate proposal if requested product not available."
        type: "boolean"
      requestedResponseDate:
        description: "Corresponds to desiredResponseDate - The date a response for\
          \ the service request is desired."
        type: "string"
        format: "date-time"
      expectedResponseDate:
        description: "The date the seller is expected to provide qualification result."
        type: "string"
        format: "date-time"
      effectiveQualificationCompletionDate:
        description: "Effective date seller provides qualification result."
        type: "string"
        format: "date-time"
      expirationDate:
        description: "Expiration date of the POQ provided by the Seller"
        type: "string"
        format: "date-time"
      '@type':
        description: "Technical attribute to extend the class"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend the class"
        type: "string"
      relatedPartyRole:
        type: "array"
        items:
          $ref: "#/definitions/PartyRole"
      productOfferingQualificationItem:
        type: "array"
        items:
          $ref: "#/definitions/ProductOfferingQualificationItem"
  ProductOfferingQualificationItemRelationship:
    description: "The relationship between product offering qualification items."
    required:
    - "type"
    - "id"
    type: "object"
    properties:
      type:
        $ref: "#/definitions/RelationshipType"
      id:
        description: "id of the targeted POQ item"
        type: "string"
  POSTProductOfferingQualificationItem:
    description: "This structure serves as a request for a product offering qualification\
      \ item"
    required:
    - "id"
    - "product"
    type: "object"
    properties:
      id:
        description: "Id of the productOfferingQualification"
        type: "string"
      desiredActivationDate:
        description: "Activation date wished for this item provided by the buyer"
        type: "string"
        format: "date"
      product:
        $ref: "#/definitions/Product"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      productOfferingQualificationItemRelationship:
        type: "array"
        items:
          $ref: "#/definitions/ProductOfferingQualificationItemRelationship"
      relatedPartyRole:
        type: "array"
        items:
          $ref: "#/definitions/PartyRole"
  POSTProductOfferingQualification:
    description: "This structure serves as a request for a product offering qualification"
    required:
    - "productOfferingQualificationItem"
    - "relatedPartyRole"
    type: "object"
    properties:
      provideAlternative:
        description: "This Boolean allows requester (buyer) to indicate if he is willing\
          \ to get alternate proposal if requested product not available."
        type: "boolean"
        default: false
      requestedResponseDate:
        description: "Corresponds to desiredResponseDate - The date a response for\
          \ the service request is desired."
        type: "string"
        format: "date"
      instantSyncQualification:
        description: "If this flag is set to Yes, Buyer requests to have instant qualification\
          \ to be provided in operation POST response"
        type: "boolean"
        default: false
      projectId:
        description: "This value MAY be assigned by the Buyer/Seller to identify a\
          \ project the qualification request is associated with."
        type: "string"
      productOfferingQualificationItem:
        type: "array"
        items:
          $ref: "#/definitions/POSTProductOfferingQualificationItem"
      relatedPartyRole:
        type: "array"
        items:
          $ref: "#/definitions/PartyRole"
      '@type':
        description: "Technical attribute to extend this class"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class"
        type: "string"
  TimeInterval:
    description: "A time interval, e.g.  3 hours, or 5 days."
    required:
    - "amount"
    - "timeUnit"
    type: "object"
    properties:
      amount:
        description: "Amount"
        type: "integer"
        format: "int32"
      timeUnit:
        $ref: "#/definitions/TimeUnit"
  ProductOfferingQualificationFindReq:
    description: "This class is used to describe attribute to be used for requesting\
      \ POQ list (used in the GET by list)"
    type: "object"
    properties:
      id:
        description: "The Serviceability Request's unique identifier."
        type: "string"
      state:
        $ref: "#/definitions/QualificationState"
      requestedResponseDate:
        description: "Corresponds to desiredResponseDate - The date a response for\
          \ the service request is desired."
        type: "string"
        format: "date"
      projectId:
        description: "This value MAY be assigned by the Buyer/Seller to identify a\
          \ project the serviceability request is associated with."
        type: "string"
  Place:
    description: "Place defines the places where the products qualification must be\
      \ done."
    required:
    - "role"
    type: "object"
    properties:
      role:
        description: "Role of this place"
        type: "string"
      id:
        description: "id of this place"
        type: "string"
      href:
        description: "href to this place resource"
        type: "string"
      '@referredType':
        description: "Technical attribute to manage API extension. In this case @referredType\
          \ could be valued to FormattedAddress, FieldedAddress, GeographicalSite,\
          \ GeographicLocation or ReferencedAddress"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to manage API extension"
        type: "string"
  Hub:
    description: "This resource is used to manage notification subscription."
    required:
    - "id"
    - "callback"
    - "query"
    type: "object"
    properties:
      id:
        description: "id of the Hub"
        type: "string"
      callback:
        description: "This callback address is an url. the norification will be sent\
          \ to this url address"
        type: "string"
      query:
        description: "This attribute is used to define notification type. Example:\
          \ \",\"query\":”eventType = ProductOfferingQualificationStateChangeNotification”\
          }"
        type: "string"
  HubInput:
    description: "This class is used to request a HUB creation - Used in the POST\
      \ operation."
    required:
    - "callback"
    - "query"
    type: "object"
    properties:
      callback:
        description: "This attribute is the callback url where event will be sent\
          \ when occurs, for instance an url http://yourdomain/listener/api/v1/event"
        type: "string"
      query:
        description: "This attribute is used to define notification type. Example:\
          \ \",\"query\":”eventType = ProductOfferingQualificationStateChangeNotification”\
          }"
        type: "string"
  PartyRole:
    description: "This is a party role assigned for this POQ or a POQItem"
    required:
    - "@referredType"
    - "role"
    - "relatedParty"
    type: "object"
    properties:
      id:
        description: "id of the partyRole (not party id)"
        type: "string"
      '@referredType':
        description: "Technical attribute to extend this class"
        type: "string"
      role:
        description: "The role that the related party plays. It may be one of the\
          \ following : \"Buyer\", \"Seller\", \"Order Contact\", \"Technical Contact\"\
          , \"Implementation Contact\""
        type: "string"
      relatedParty:
        $ref: "#/definitions/RelatedParty"
