swagger: "2.0"
info:
  description: "API to manage GeographicSite"
  version: "1.0.0"
  title: "API GeographicSiteManagement"
  x-logo:
    url: "/redoc/logo.png"
    backgroundColor: "#FFFFFF"
host: "serverRoot"
basePath: "/api/mef/geographicSiteManagement/v1/"
schemes:
- "https"
produces:
- "application/json;charset=utf-8"
tags:
- name: "GeographicSite"
  description: "Geographic Site resource"
paths:
  /geographicSite:
    get:
      tags:
      - "GeographicSite"
      produces:
      - "application/json;charset=utf-8"
      operationId: "geographicSiteFind"
      summary: "retrieveGeographicSites"
      description: "List of criterias to be used as well as syntax of site summary\
        \ retrieved in the response is aligned with MEF requirements\n\nSpecific business\
        \ errors for current operation will be encapsulated in\n\nHTTP Response 422\
        \ Unprocessable entity\n\n - 100: Too many records retrieved - please restrict\
        \ requested parameter value(s)\n   "
      deprecated: false
      parameters:
      - name: "status"
        required: false
        in: "query"
        description: "Status of the site"
        type: "string"
        enum:
        - "PLANNED"
        - "CANCELLED"
        - "UNDER_CONSTRUCTION"
        - "EXISTING"
        - "FORMER"
      - name: "siteCompanyName"
        required: false
        in: "query"
        description: "The name of the company that is located at the service location.\
          \ This may be different from the name of the Buyer that ordered services\
          \ at that site"
        type: "string"
      - name: "siteCustomerName"
        required: false
        in: "query"
        description: "The customer name at a site where the service will be/are/were\
          \ delivered"
        type: "string"
      - name: "geographicAddress.streetNr"
        required: false
        in: "query"
        description: "Street Nr of the geographic site address"
        type: "string"
      - name: "geographicAddress.streetName"
        required: false
        in: "query"
        description: "Street Name of the geographic site address"
        type: "string"
      - name: "geographicAddress.streetType"
        required: false
        in: "query"
        description: "Street Type of the geographic site address"
        type: "string"
      - name: "geographicAddress.city"
        required: false
        in: "query"
        description: "City of the geographic site address"
        type: "string"
      - name: "geographicAddress.postcode"
        required: false
        in: "query"
        description: "Postcode of the geographic site address"
        type: "string"
      - name: "geographicAddress.country"
        required: false
        in: "query"
        description: "Country of the geographic site address"
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GeographicSiteFindResp"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error\n\nSpecific encapsulated\
            \ business errors for current operation\n\n - 100: Too many records retrieved\
            \ - please restrict requested parameter value(s)\n   "
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /geographicSite/{siteId}:
    get:
      tags:
      - "GeographicSite"
      produces:
      - "application/json;charset=utf-8"
      operationId: "geographicSiteGet"
      summary: "retrieveSite"
      description: "This operation retrieves a single geographicSite based upon on\
        \ input id.\n\nSpecific business errors for current operation will be encapsulated\
        \ in\n\nHTTP Response 422 Unprocessable entity\n"
      deprecated: false
      parameters:
      - name: "siteId"
        in: "path"
        required: true
        type: "string"
        description: ""
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/GeographicSite"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
definitions:
  Status:
    description: "Status of a geographical site"
    type: "string"
    enum:
    - "PLANNED"
    - "CANCELLED"
    - "UNDER_CONSTRUCTION"
    - "EXISTING"
    - "FORMER"
  ErrorRepresentation:
    description: "Class used to describe API response error"
    required:
    - "code"
    - "message"
    type: "object"
    properties:
      code:
        description: "Application related code (as defined in the API or from a common\
          \ list)"
        type: "integer"
        format: "int32"
      reason:
        description: "Text that explains the reason for error. This can be shown to\
          \ a client user."
        type: "string"
      message:
        description: "Text that provide more details and corrective actions related\
          \ to the error. This can be shown to a client user."
        type: "string"
      status:
        description: "http error code extension like 400-2"
        type: "string"
      referenceError:
        description: "url pointing to documentation describing the error"
        type: "string"
      '@type':
        description: "The class type of a REST resource."
        type: "string"
      '@schemaLocation':
        description: "it provides a link to the schema describing a REST resource."
        type: "string"
  GeographicAddress:
    description: "An address is a structured textual way of describing how to find\
      \ a Property in an urban area (country properties are often defined differently)"
    type: "object"
    properties:
      id:
        description: "Unique identifier of the address"
        type: "string"
      streetNr:
        description: "Number identifying a specific property on a public street. It\
          \ may be combined with streetNrLast for ranged addresses"
        type: "string"
      streetNrSuffix:
        description: "The first street number suffix"
        type: "string"
      streetNrLast:
        description: "Last number in a range of street numbers allocated to a property"
        type: "string"
      streetName:
        description: "Name of the street or other street type"
        type: "string"
      streetType:
        description: "Alley, avenue, boulevard, brae, crescent, drive, highway, lane,\
          \ terrace, parade, place, tarn, way, wharf"
        type: "string"
      streetSuffix:
        description: "A modifier denoting a relative direction"
        type: "string"
      locality:
        description: "An area of defined or undefined boundaries within a local authority\
          \ or other legislatively defined area, usually rural or semi-rural in nature.‚Äù\
          \ [ANZLIC-STREET], or a suburb \"a bounded locality within a city, town\
          \ or shire principally of urban character \" [ANZLICSTREET]"
        type: "string"
      city:
        description: "City that the address is in"
        type: "string"
      postcode:
        description: "Descriptor for a postal delivery area, used to speed and simplify\
          \ the delivery of mail (also known as zipcode)"
        type: "string"
      stateOrProvince:
        description: "The State or Province that the address is in"
        type: "string"
      country:
        description: "Country that the address is in"
        type: "string"
      geographicSubAddress:
        $ref: "#/definitions/GeographicSubAddress"
      geographicLocation:
        $ref: "#/definitions/GeographicLocation"
      addrLine1:
        description: "A formatted address line that contains a non-fielded street\
          \ address."
        type: "string"
      addrLine2:
        description: "A formatted address line that contains a non-fielded street\
          \ address, sub-address (e.g. Suite number), etc."
        type: "string"
      postCodeExtension:
        description: "The four-digit extension on an American postal code, what comes\
          \ after the hyphen when specified."
        type: "string"
      referenceId:
        description: "A reference to an address by id; this would include such things\
          \ CLLI Codes or Seller-assigned address identifiers."
        type: "string"
      referenceType:
        description: "A reference type of an address id"
        type: "string"
      '@type':
        description: "Technical attribute to extend this class"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class"
        type: "string"
  GeographicSite:
    description: "Designated as a Site in TS.\nA physical place within an addressable\
      \ location that has relevance to a service or a product, or an instance thereof."
    type: "object"
    properties:
      id:
        description: "id of the site"
        type: "string"
      description:
        description: "description of the site"
        type: "string"
      status:
        $ref: "#/definitions/Status"
      geographicAddress:
        $ref: "#/definitions/GeographicAddress"
      siteName:
        description: "A name by which the site is known."
        type: "string"
      siteCompanyName:
        description: "The name of the company that is located at the service location.\
          \ This may be different from the name of the Buyer that ordered services\
          \ at that site"
        type: "string"
      siteCustomerName:
        description: "The customer name at a site where the service will be/are/were\
          \ delivered"
        type: "string"
      additionnalSiteInformation:
        description: "The additional site information"
        type: "string"
      '@type':
        description: "Technical attribute to extend this class"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class"
        type: "string"
  GeoPoint:
    description: "A GeoPoint defines a geographic point through coordinates."
    type: "object"
    properties:
      spatialRef:
        description: "Geocoding referential"
        type: "string"
      x:
        description: "x coordinate (usually latitude)"
        type: "string"
      y:
        description: "y coordinate (usually longitude)"
        type: "string"
  GeographicLocation:
    description: "A GeographicLocation allows describing through coordinate(s) a point,\
      \ a line or a space"
    type: "object"
    properties:
      geoPoint:
        type: "array"
        items:
          $ref: "#/definitions/GeoPoint"
  GeographicSubAddress:
    description: "Geographic subAddress description"
    type: "object"
    properties:
      id:
        description: "Id of the subAddress"
        type: "string"
      subUnitType:
        description: "The type of subunit\ne.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\
          \ UNIT, WHARF."
        type: "string"
      subUnitNumber:
        description: "The discriminator used for the subunit\noften just a simple\
          \ number e.g. FLAT 5, may also be a range"
        type: "string"
      levelType:
        description: "Describes level types within a building"
        type: "string"
      levelNumber:
        description: "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\
          \ 2"
        type: "string"
      buildingName:
        description: "Allows for buildings that have well-known names"
        type: "string"
      privateStreetNumber:
        description: "Private streets numbers internal to a private street"
        type: "string"
      privateStreetName:
        description: "Private streets internal to a property (e.g. a university) may\
          \ have internal names that are not recorded by the land title office"
        type: "string"
      '@type':
        description: "Technical attribute to extend this class"
        type: "string"
      '@schemaLocation':
        description: "Technical attribute to extend this class"
        type: "string"
  GeographicAddressFindResp:
    description: "Structure used to describe geographic address in response to GET\
      \ geographicalSite"
    type: "object"
    properties:
      streetNr:
        description: "Number identifying a specific property on a public street. It\
          \ may be combined with streetNrLast for ranged addresses"
        type: "string"
      streetName:
        description: "Name of the street or other street type"
        type: "string"
      streetType:
        description: "Alley, avenue, boulevard, brae, crescent, drive, highway, lane,\
          \ terrace, parade, place, tarn, way, wharf"
        type: "string"
      city:
        description: "City that the address is in"
        type: "string"
      postcode:
        description: "Descriptor for a postal delivery area, used to speed and simplify\
          \ the delivery of mail (also known as zipcode)"
        type: "string"
      country:
        description: "Country that the address is in"
        type: "string"
  GeographicSiteFindResp:
    description: "Technical structure to provide site list retrieve in the GET operation"
    type: "object"
    properties:
      id:
        description: "id of the site. This is coud be used in other API as a place"
        type: "string"
      status:
        $ref: "#/definitions/Status"
      siteCompanyName:
        description: "The name of the company that is located at the service location.\
          \ This may be different from the name of the Buyer that ordered services\
          \ at that site"
        type: "string"
      siteCustomerName:
        description: "The customer name at a site where the service will be/are/were\
          \ delivered"
        type: "string"
      geographicAddress:
        $ref: "#/definitions/GeographicAddressFindResp"
