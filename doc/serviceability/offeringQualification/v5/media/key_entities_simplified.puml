@startuml
skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
}

class AlternateProductOfferingProposal {
    id*: string 
    installationInterval: TimeInterval
    productOffering*: ProductOfferingRef
}

AlternateProductOfferingProposal *-->"1" MEFProductExtension : alternateProduct

class MEFProductConfiguration {

    @schemaLocation: uri 
    @type*: string 
}



class MEFProductExtension {

}

MEFProductExtension *--> MEFProductConfiguration : productConfiguration


class MEFProductRefOrValue {

    href: string 
    id: string 
    productSpecification: ProductSpecificationRef
    @type*: string 
}

MEFProductRefOrValue *-->"*" RelatedPlaceRefOrValue : place
MEFProductRefOrValue *--> MEFProductConfiguration : productConfiguration
MEFProductRefOrValue *-->"*" ProductRelationship : productRelationship




class ProductOfferingQualification {

    effectiveQualificationDate: date-time 
    expectedPOQCompletionDate: date-time 
    href: string 
    id*: string 
    state*: MEFPOQTaskStateType
    stateChange: MEFPOQStateChange[]
}
ProductOfferingQualification_Common <|-- ProductOfferingQualification

ProductOfferingQualification *-->"1..*" ProductOfferingQualificationItem : productOfferingQualificationItem


class ProductOfferingQualificationItem {

    guaranteedUntilDate: date-time 
    installationInterval: TimeInterval
    serviceConfidenceReason: string 
    serviceabilityConfidence: MEFServiceabilityColor 
    state*: MEFPOQItemTaskStateType 
    stateChange: MEFPOQItemStateChange[]
    terminationError: TerminationError[]
}
ProductOfferingQualificationItem_Common <|-- ProductOfferingQualificationItem

ProductOfferingQualificationItem *-->"*" AlternateProductOfferingProposal : alternateProductOfferingProposal


class ProductOfferingQualificationItem_Common {

    action*: ProductActionType 
    expectedActivationDate: date-time 
    id*: string 
    productOffering: ProductOfferingRef
}

ProductOfferingQualificationItem_Common *-->"1" MEFProductRefOrValue : product
ProductOfferingQualificationItem_Common *-->"*" QualificationItemRelationship : qualificationItemRelationship
ProductOfferingQualificationItem_Common *-->"*" RelatedPartyValue : relatedParty


class QualificationItemRelationship {

    id*: string 
    relationshipType*: string 
}

class ProductOfferingQualification_Create {

}
ProductOfferingQualification_Common <|-- ProductOfferingQualification_Create

ProductOfferingQualification_Create *-->"1..*" ProductOfferingQualificationItem_Create : productOfferingQualificationItem

class ProductOfferingQualificationItem_Create {

}
ProductOfferingQualificationItem_Common <|-- ProductOfferingQualificationItem_Create



class ProductOfferingQualification_Common {

    buyerId: string 
    instantSyncQualification: boolean 
    projectId: string 
    provideAlternative: boolean 
    requestedPOQCompletionDate: date-time 
    sellerId: string 
}

ProductOfferingQualification_Common *-->"1..*" RelatedPartyValue : relatedParty

class ProductRelationship {

    @referredType: string 
    href: string 
    id*: string 
    groupingKey: string 
    name: string 
    relationshipType*: string 
}




class RelatedPartyValue {

    @type: string 
    emailAddress*: string 
    name*: string 
    number*: string 
    numberExtension: string 
    role*: string 
}


class RelatedPlaceRefOrValue {

    @schemaLocation: uri 
    @type*: string 
    role*: string 
}


@enduml
