@startuml
skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
}

class Error400 {

    code*: string 
}
Error <|-- Error400



class Error401 {

    code*: string 
}
Error <|-- Error401



class Error403 {

    code*: string 
}
Error <|-- Error403



class Error404 {

    code*: string 
}
Error <|-- Error404



class Error500 {

    code*: string 
}
Error <|-- Error500



class Error {

    reason*: string 
    message: string 
    status: string 
    referenceError: uri 
}



class FieldedAddress {

    id: string 
    href: string 
    city*: string 
    country*: string 
    locality: string 
    name: string 
    postcode*: string 
    postcodeExtension: string 
    stateOrProvince*: string 
    streetName: string 
    streetNr: string 
    streetNrLast: string 
    streetNrLastSuffix: string 
    streetNrSuffix: string 
    streetSuffix: string 
    streetType*: string 
    @type: string 
}

FieldedAddress *--> GeographicSubAddress : geographicSubAddress


class FormattedAddress {

    id: string 
    href: string 
    addrLine1*: string 
    addrLine2: string 
    city*: string 
    country*: string 
    locality: string 
    name: string 
    postcode*: string 
    postcodeExtension: string 
    stateOrProvince*: string 
    @type: string 
}



class GeographicAddressFindResp {

}

GeographicAddressFindResp *--> FieldedAddress : fieldedAddress
GeographicAddressFindResp *--> FormattedAddress : formattedAddress


class GeographicSite {

    id*: string 
    href: string 
    additionalSiteInformation: string 
    description: string 
    name: string 
    siteCompanyName: string 
    siteCustomerName: string 
    siteType: MEFSiteType 
    status*: MEFGeographicSiteStatus 
    @type: string 
}

GeographicSite *--> FieldedAddress : fieldedAddress
GeographicSite *--> FormattedAddress : formattedAddress
GeographicSite *--> MEFGeographicLocation : geographicLocation
GeographicSite *--> GlobalAddressId : globalAddressId
GeographicSite *-->"*" RelatedPartyValue : relatedParty


class GeographicSubAddress {

    id: string 
    href: string 
    buildingName: string 
    levelNumber: string 
    levelType: string 
    name: string 
    privateStreetName: string 
    privateStreetNumber: string 
    @type: string 
}

GeographicSubAddress *-->"*" MEFSubUnit : subUnit


class GlobalAddressId {

    externalReferenceId*: string 
    externalReferenceType*: string 
}
RelatedPlaceRefOrValue <|-- GlobalAddressId



class MEFGeographicLocation {

    id: string 
    href: string 
    name: string 
    spatialRef*: string 
    @type: string 
}

MEFGeographicLocation *-->"1" MEFGeographicPoint : geographicPoint


class MEFGeographicPoint {

    x: string 
    y: string 
}



class MEFSubUnit {

    subUnitNumber*: string 
    subUnitType*: string 
}



class RelatedPartyValue {

    emailAddress: string 
    name: string 
    number: string 
    numberExtension: string 
    role: string 
    @type: string 
}



class RelatedPlaceRefOrValue {

    @schemaLocation: uri 
    @type*: string 
    role*: string 
}



enum MEFGeographicSiteStatus {

    planned
    underConstruction
    cancelled
    active
    inactive
    former
}
class MEFGeographicSiteSummary {

    id: string 
    status: MEFGeographicSiteStatus 
    siteCompanyName: string 
    siteCustomerName: string 
    siteName: string 
    siteDescription: string 
    siteType: string 
    siteContactName: string 
}

MEFGeographicSiteSummary *--> GeographicAddressFindResp : geographicAddress


enum MEFSiteType {

    public
    private
}
@enduml
