@startuml
skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
}
scale 4096 width
class CancelProductOrder {

    id: string 
    href: string 
    cancellationDeniedReason: string 
    cancellationReason: string 
    effectiveCancellationDate: date-time 
    requestedCancellationDate: date-time 
    state: TaskStateType 
}

CancelProductOrder *--> MEFProductOrderRef : productOrder


class CancelProductOrder_Create {

    cancellationReason: string 
    requestedCancellationDate: date-time 
}

CancelProductOrder_Create *-->"1" MEFProductOrderRef : productOrder


class Duration {

    amount*: integer 
    units*: TimeUnit 
}



class Error400 {

    code*: string 
}
Error <|-- Error400



class Error401 {

    code*: string 
}
Error <|-- Error401



class Error403 {

    code*: string 
}
Error <|-- Error403



class Error404 {

    code*: string 
}
Error <|-- Error404



class Error405 {

    code*: string 
}
Error <|-- Error405



class Error422 {

    code*: string 
    propertyPath: string 
}
Error <|-- Error422



class Error500 {

    code*: string 
}
Error <|-- Error500



class Error {

    reason*: string 
    message: string 
    status: string 
    referenceError: uri 
}



class EventSubscription {

    id*: string 
    callback*: string 
    query: string 
}



class EventSubscriptionInput {

    callback*: string 
    query: string 
}



class FieldedAddress {

    city*: string 
    country*: string 
    locality: string 
    postcode: string 
    postcodeExtension: string 
    stateOrProvince: string 
    streetName*: string 
    streetNr: string 
    streetNrLast: string 
    streetNrLastSuffix: string 
    streetNrSuffix: string 
    streetSuffix: string 
    streetType: string 
}
RelatedPlaceRefOrValue <|-- FieldedAddress

FieldedAddress *--> GeographicSubAddress : geographicSubAddress


class FormattedAddress {

    addrLine1*: string 
    addrLine2: string 
    city*: string 
    country*: string 
    locality: string 
    postcode: string 
    postcodeExtension: string 
    stateOrProvince: string 
}
RelatedPlaceRefOrValue <|-- FormattedAddress



class GeographicAddressIdentifier {

    externalReferenceId*: string 
    externalReferenceType*: string 
}
RelatedPlaceRefOrValue <|-- GeographicAddressIdentifier



class GeographicAddressRef {

    href: string 
    id*: string 
}
RelatedPlaceRefOrValue <|-- GeographicAddressRef



class GeographicSiteRef {

    href: string 
    id*: string 
}
RelatedPlaceRefOrValue <|-- GeographicSiteRef



class GeographicSubAddress {

    buildingName: string 
    levelNumber: string 
    levelType: string 
    privateStreetName: string 
    privateStreetNumber: string 
}

GeographicSubAddress *-->"*" MEFSubUnit : subUnit


class MEFBillingAccountRefOrValue {

    id*: string 
    agreementName: string 
}

MEFBillingAccountRefOrValue *--> RelatedContactInformation : billingContact


class MEFOrderItemCoordinatedAction {

    id*: string 
    coordinationDependency*: MEFOrderItemCoordinationDependencyType 
}

MEFOrderItemCoordinatedAction *-->"1" Duration : coordinatedActionDelay


class MEFProductOrderSummary {

    id*: string 
    cancellationDate: date-time 
    completionDate: date-time 
    externalId: string 
    orderDate*: date-time 
    orderVersion: string 
    projectId: string 
    state*: MEFProductOrderStateType 
}



class OrderPrice {

    description: string 
    name: string 
    priceType: string 
    recurringChargePeriod: string 
}

OrderPrice *--> Price : price


class Price {

    taxRate: float 
}

Price *--> Money : dutyFreeAmount
Price *--> Money : taxIncludedAmount


class ProductOfferingRef {

    href: string 
    id*: string 
}



class ProductOrderItem {

    completionDate: date-time 
    expectedCompletionDate: date-time 
    sellerItemIdentifier: string 
    state: MEFProductOrderItemStateType 
}
MEFProductOrderItem_Common <|-- ProductOrderItem

ProductOrderItem *-->"*" OrderPrice : itemPrice
ProductOrderItem *-->"*" MEFItemTerm : itemTerm
ProductOrderItem *-->"*" Note : note
ProductOrderItem *-->"*" MEFItemTerm : requestedItemTerm
ProductOrderItem *-->"*" MEFProductOrderItemStateChange : stateChange


class ProductOrder_Create {

}
ProductOrder_Common <|-- ProductOrder_Create

ProductOrder_Create *-->"1..*" MEFProductOrderItem_Create : productOrderItem


enum MEFEndOfTermAction {

    roll
    autoDisconnect
    autoRenew
}
class MEFGeographicPoint {

    spatialRef*: string 
    x*: string 
    y*: string 
    z: string 
}
RelatedPlaceRefOrValue <|-- MEFGeographicPoint



class MEFItemTerm {

    endOfTermAction: MEFEndOfTermAction 
}

MEFItemTerm *--> Duration : duration
MEFItemTerm *--> Duration : rollInterval


enum MEFProductActionType {

    add
    modify
    delete
}
enum MEFOrderItemCoordinationDependencyType {

    startToStart
    startToFinish
    finishToStart
    finishToFinish
}
class MEFProductConfiguration {

    @schemaLocation: uri 
    @type*: string 
}



class MEFProductOrderItemStateChange {

    changeDate: date-time 
    changeReason: string 
    state: MEFProductOrderItemStateType 
}



class MEFProductOrderItem_Create {

}
MEFProductOrderItem_Common <|-- MEFProductOrderItem_Create



class MEFProductOrderItem_Common {

    id*: string 
    endCustomerName: string 
    expediteIndicator: boolean 
    pricingReference: string 
    pricingTerm: integer 
    requestedCompletionDate: date-time 
    tspRestorationPriority: string 
    action*: MEFProductActionType 
    pricingMethod: MEFPricingMethod 
}

MEFProductOrderItem_Common *--> MEFBillingAccountRefOrValue : billingAccount
MEFProductOrderItem_Common *--> MEFOrderItemCoordinatedAction : coordinatedAction
MEFProductOrderItem_Common *-->"*" Note : note
MEFProductOrderItem_Common *--> MEFProductRefOrValueForOrder : product
MEFProductOrderItem_Common *--> ProductOfferingQualificationItemRef : productOfferingQualificationItem
MEFProductOrderItem_Common *-->"*" OrderItemRelationship : productOrderItemRelationship
MEFProductOrderItem_Common *--> MEFQuoteItemRef : quoteItem
MEFProductOrderItem_Common *-->"*" RelatedContactInformation : relatedContactInformation
MEFProductOrderItem_Common *-->"*" MEFItemTerm : requestedItemTerm


class MEFProductOrderRef {

    id*: string 
    href: string 
}



class MEFProductOrderStateChange {

    changeDate: date-time 
    changeReason: string 
    state: MEFProductOrderStateType 
}



class MEFProductRefOrValueForOrder {

    id: string 
    href: string 
    buyerProductId: string 
}

MEFProductRefOrValueForOrder *-->"*" RelatedPlaceRefOrValue : place
MEFProductRefOrValueForOrder *--> MEFProductConfiguration : productConfiguration
MEFProductRefOrValueForOrder *-->"1" ProductOfferingRef : productOffering
MEFProductRefOrValueForOrder *-->"*" ProductRelationship : productRelationship


class MEFQuoteItemRef {

    id*: string 
    quoteHref: string 
    quoteId*: string 
}



class MEFSubUnit {

    subUnitNumber*: string 
    subUnitType*: string 
}



class Money {

    unit: string 
    value: float 
}



class Note {

    id*: string 
    author*: string 
    date*: date-time 
    source*: NoteSourceType 
    text*: string 
}



class OrderItemRelationship {

    id*: string 
    relationshipType*: string 
}



enum MEFPricingMethod {

    tariff
    contract
    individualCaseBasis
    other
}
class ProductOfferingQualificationItemRef {

    id*: string 
    alternateProductProposalId: string 
    productOfferingQualificationHref: string 
    productOfferingQualificationId*: string 
}



class ProductOrder {

    id*: string 
    href: string 
    cancellationDate: date-time 
    cancellationReason: string 
    completionDate: date-time 
    expectedCompletionDate: date-time 
    orderVersion: string 
    orderDate*: date-time 
    pricingReference: string 
    state*: MEFProductOrderStateType 
}
ProductOrder_Common <|-- ProductOrder

ProductOrder *-->"1..*" ProductOrderItem : productOrderItem
ProductOrder *-->"*" MEFProductOrderStateChange : stateChange


class ProductOrder_Common {

    description: string 
    externalId: string 
    projectId: string 
}

ProductOrder_Common *-->"*" Note : note
ProductOrder_Common *-->"1..*" RelatedContactInformation : relatedContactInformation


class ProductRelationship {

    id*: string 
    groupingKey: string 
    href: string 
    relationshipType*: string 
}



class RelatedContactInformation {

    emailAddress*: string 
    name*: string 
    number*: string 
    numberExtension: string 
    organization: string 
    role*: string 
}

RelatedContactInformation *--> FieldedAddress : postalAddress


class RelatedPlaceRefOrValue {

    @schemaLocation: uri 
    @type*: string 
    role*: string 
}



enum MEFProductOrderItemStateType {

    acknowledged
    rejected
    rejected.validated
    rejected.unassessed
    pending
    held
    inProgress
    cancelled
    completed
    failed
    assessingCancellation
    pendingCancellation
}
enum MEFProductOrderStateType {

    acknowledged
    rejected
    pending
    held
    inProgress
    cancelled
    completed
    failed
    partial
    assessingCancellation
    pendingCancellation
}
enum TaskStateType {

    accepted
    terminatedWithError
    inProgress
    done
}
enum TimeUnit {

    calendarMonths
    calendarDays
    calendarHours
    calendarMinutes
    businessDays
    businessHours
    businessMinutes
}
enum NoteSourceType {

    buyer
    seller
}
@enduml
